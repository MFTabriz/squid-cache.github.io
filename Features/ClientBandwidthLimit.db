<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/ClientBandwidthLimit</title><revhistory><revision><revnumber>8</revnumber><date>2015-09-21 04:51:08</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>7</revnumber><date>2015-08-31 09:07:29</date><authorinitials>FrancescoChemolli</authorinitials><revremark>Fix link to bugzilla.</revremark></revision><revision><revnumber>6</revnumber><date>2010-10-28 11:47:31</date><authorinitials>FrancescoChemolli</authorinitials><revremark>Fixed for features-listing</revremark></revision><revision><revnumber>5</revnumber><date>2010-10-28 09:10:16</date><authorinitials>FrancescoChemolli</authorinitials><revremark>added faq-listing</revremark></revision><revision><revnumber>4</revnumber><date>2010-10-28 08:58:40</date><authorinitials>FrancescoChemolli</authorinitials><revremark>marked as completed</revremark></revision><revision><revnumber>3</revnumber><date>2009-07-25 01:55:19</date><authorinitials>AmosJeffries</authorinitials><revremark>v6 imposes more severe limits on the pool design than v4.</revremark></revision><revision><revnumber>2</revnumber><date>2009-07-24 15:36:32</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated status</revremark></revision><revision><revnumber>1</revnumber><date>2009-04-08 22:28:50</date><authorinitials>AlexRousskov</authorinitials><revremark>initial documentation</revremark></revision></revhistory></articleinfo><section><title>Feature: Client Bandwidth Limits</title><itemizedlist><listitem><para><emphasis role="strong">Goal</emphasis>: Shape Squid-to-client bandwidth usage on client IP-level, for 4M IPs (/10 network). </para></listitem><listitem><para><emphasis role="strong">Status</emphasis>: complete </para></listitem><listitem><para><emphasis role="strong">Version</emphasis>: 3.2 </para></listitem><listitem><para><emphasis role="strong">Developer</emphasis>: <ulink url="https://wiki.squid-cache.org/Features/ClientBandwidthLimit/AlexRousskov#">AlexRousskov</ulink>, <ulink url="https://wiki.squid-cache.org/Features/ClientBandwidthLimit/ChristosTsantilas#">ChristosTsantilas</ulink> </para></listitem></itemizedlist></section><section><title>Use case</title><para>In mobile environments, Squid needs to limit Squid-to-client bandwidth available to individual users, identified by their IP addresses. The IP address pool can be as large as /10 network (4 million unique IP addresses). </para><para>NP: With IPv6 networks the range may be as large as a /32 with individual end-site resolution. This is equivalent to /0, the entire IPv4 space with single-IP resolution. For individual host resolution an additional 64-bit long host identifier must be added on top of that. Related: bug <ulink url="https://bugs.squid-cache.org/show_bug.cgi?id=2144#">2144</ulink> </para></section><section><title>Existing tools</title><para>A few existing mechanisms should be considered and reused to the extent possible: </para><itemizedlist><listitem><para>Existing Squid <ulink url="https://wiki.squid-cache.org/Features/ClientBandwidthLimit/Features/DelayPools#">delay pools</ulink> limit server-to-Squid bandwidth and we need Squid-to-client shaping. There is also no pool class that can accommodate 4 million unique IP addresses. </para></listitem><listitem><para>Squid2 experimental client-side bandwidth limiting code should be studied. Portions of it may be reusable. According to Adrian Chad, the experimental Squid2 code has not been extensively tested and does not satisfy all of the project requirements. </para></listitem><listitem><para>Linux <emphasis>iptables</emphasis> do not work &quot;as is&quot; either, because they operate on connection and not on source IP basis: Multiple connections may not share the same bucket and once the connection is gone so is the bandwidth usage history. </para></listitem></itemizedlist></section><section><title>Details</title><para>This work is based on the existing server­-to­-Squid delay pools architecture and an experimental Squid2 feature dealing with client­-side limits. The overall architecture and configuration of the new pools is expected to be similar to the existing delay pool features except that special code may need to be developed to support large address space for individual client pools. Alternative designs are possible if warranted. </para><para>All Squid traffic shaping tools work on the application level. Squid does not see, drop, or delay individual TCP/IP packets. It simply stops writing HTTP payload to a client if that client's bandwidth bucket is empty until the bandwidth bucket is refilled. Squid drains a bucket by sending data to the client. The administrator specifies the rate at which a bucket is refilled (bytes per second) and, optionally, the maximum bucket size (to allow initial traffic bursts). </para><para>Bandwidth usage information is not persistent. For example, all bandwidth buckets are refilled at Squid restart and reconfiguration. </para><para>A client is identified by IPv4 source address of the client HTTP/TCP connection. All transfers with the same client ID will drain the same bucket, regardless of the number of HTTP/TCP connections from that client to Squid. The new feature limits the approximate download bandwidth available to each client ID. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/Features/ClientBandwidthLimit/CategoryFeature#">CategoryFeature</ulink> </para></section></article>