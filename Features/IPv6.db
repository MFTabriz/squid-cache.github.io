<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/IPv6</title><revhistory><revision><revnumber>32</revnumber><date>2017-08-27 10:08:28</date><authorinitials>AmosJeffries</authorinitials><revremark>updates to fix bug 4640, and several other outdated details.</revremark></revision><revision><revnumber>31</revnumber><date>2015-12-16 13:00:45</date><authorinitials>AmosJeffries</authorinitials><revremark>update situation with NAT, TPROXY and WCCP</revremark></revision><revision><revnumber>30</revnumber><date>2012-07-03 00:43:45</date><authorinitials>AmosJeffries</authorinitials><revremark>sync the external_acl_type documentation with current code.</revremark></revision><revision><revnumber>29</revnumber><date>2012-07-03 00:30:00</date><authorinitials>AmosJeffries</authorinitials><revremark>mention split-stack is mostly resolved now.</revremark></revision><revision><revnumber>28</revnumber><date>2012-04-30 00:40:53</date><authorinitials>AmosJeffries</authorinitials><revremark>mention TPROXY as being Linux, and divert for OpenBSD</revremark></revision><revision><revnumber>27</revnumber><date>2011-10-10 09:32:09</date><authorinitials>AmosJeffries</authorinitials><revremark>some minor updates and add a weird problem case with localhost</revremark></revision><revision><revnumber>26</revnumber><date>2011-06-05 13:51:11</date><authorinitials>AmosJeffries</authorinitials><revremark>update some obsolete info.</revremark></revision><revision><revnumber>25</revnumber><date>2010-06-14 05:20:20</date><authorinitials>AmosJeffries</authorinitials><revremark>status updates.</revremark></revision><revision><revnumber>24</revnumber><date>2009-10-21 00:58:35</date><authorinitials>AmosJeffries</authorinitials><revremark>eui upgrade is underway.</revremark></revision><revision><revnumber>23</revnumber><date>2009-09-29 11:48:48</date><authorinitials>AmosJeffries</authorinitials><revremark>updates and mention the OS which are currently broken.</revremark></revision><revision><revnumber>22</revnumber><date>2009-09-09 12:49:59</date><authorinitials>AmosJeffries</authorinitials><revremark>more references to v6 TPROXY...</revremark></revision><revision><revnumber>21</revnumber><date>2009-04-19 05:07:05</date><authorinitials>AmosJeffries</authorinitials><revremark>some updates.</revremark></revision><revision><revnumber>20</revnumber><date>2009-04-19 04:56:07</date><authorinitials>AmosJeffries</authorinitials><revremark>link to connect_timeout option</revremark></revision><revision><revnumber>19</revnumber><date>2009-03-24 07:57:28</date><authorinitials>AmosJeffries</authorinitials><revremark>add mistakes section. its started already.</revremark></revision><revision><revnumber>18</revnumber><date>2008-10-28 07:04:58</date><authorinitials>AmosJeffries</authorinitials><revremark>v4-mapped is now always used in v6 hybrid mode.</revremark></revision><revision><revnumber>17</revnumber><date>2008-10-28 06:50:06</date><authorinitials>AmosJeffries</authorinitials><revremark>IPv6 is enabled by default.</revremark></revision><revision><revnumber>16</revnumber><date>2008-10-14 01:41:47</date><authorinitials>AmosJeffries</authorinitials><revremark>order better for TOC</revremark></revision><revision><revnumber>15</revnumber><date>2008-10-14 01:36:38</date><authorinitials>AmosJeffries</authorinitials><revremark>add TOC</revremark></revision><revision><revnumber>14</revnumber><date>2008-10-14 01:35:48</date><authorinitials>AmosJeffries</authorinitials><revremark>update tcp_outgoing_address cases.</revremark></revision><revision><revnumber>13</revnumber><date>2008-10-10 00:49:16</date><authorinitials>AmosJeffries</authorinitials><revremark>update for FAQ listing.</revremark></revision><revision><revnumber>12</revnumber><date>2008-10-09 04:07:30</date><authorinitials>AmosJeffries</authorinitials><revremark>new performance tweak. Thanks Henrik for mentioning this</revremark></revision><revision><revnumber>11</revnumber><date>2008-09-17 13:04:22</date><authorinitials>AmosJeffries</authorinitials><revremark>add resource section</revremark></revision><revision><revnumber>10</revnumber><date>2008-08-25 13:37:45</date><authorinitials>AmosJeffries</authorinitials><revremark>polish and shuffle in IPv6 documentation for FAQ</revremark></revision><revision><revnumber>9</revnumber><date>2008-05-18 19:38:56</date><authorinitials>localhost</authorinitials><revremark>converted to 1.6 markup</revremark></revision><revision><revnumber>8</revnumber><date>2008-04-21 04:18:49</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>7</revnumber><date>2008-02-04 05:59:26</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>6</revnumber><date>2008-01-15 03:37:22</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>5</revnumber><date>2007-12-17 02:23:28</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>4</revnumber><date>2007-12-09 21:00:29</date><authorinitials>AmosJeffries</authorinitials></revision></revhistory></articleinfo><section><title>IPv6 in Squid</title><itemizedlist><listitem><para><emphasis role="strong">Version</emphasis>: 3.1 </para></listitem><listitem><para><emphasis role="strong">Status</emphasis>: completed. </para></listitem><listitem><para><emphasis role="strong">Developer</emphasis>: <ulink url="https://wiki.squid-cache.org/Features/IPv6/AmosJeffries#">AmosJeffries</ulink> </para></listitem><listitem><para><emphasis role="strong">More</emphasis>: <ulink url="http://www.squid-cache.org/Versions/v3/3.1/"/> </para></listitem></itemizedlist><section><title>How do I enable IPv6?</title><para>You will need a squid 3.1 or later release and a computer system with IPv6 capabilities. </para><para>IPv6 is available in ALL current operating systems. Most now provide it enabled by default. See your system documentation for its capability and configuration. </para><para><emphasis role="strong">IPv6 support</emphasis> is enabled by default in <ulink url="https://wiki.squid-cache.org/Features/IPv6/Squid-3.1#">Squid-3.1</ulink>. If you are using a packaged version of 3.1 without it, please contact the package maintainer about enabling it. </para><para><emphasis role="strong">Windows XP</emphasis>, <emphasis role="strong">OpenBSD</emphasis> and <emphasis role="strong">MacOS X</emphasis> have some big known issues with outgoing connections that prevent them going to IPv6 websites. Squid there will happily accept IPv6 clients, but will only go to IPv4 websites. These issues are shared with any other operating system configured with split-stack IPv6 support or non-mapping dual-stack IPv6 support. This has partially been resolved in the latest 3.1 series. </para><para>When squid is built you will be able to start Squid and see some IPv6 operations. The most active will be DNS as IPv6 addresses are looked up for each website, and IPv6 addresses in the cachemgr reports and logs. </para><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> <inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> </para></entry><entry colsep="1" rowsep="1"><para> Make sure that you check your helper script can handle IPv6 addresses as input </para></entry></row></tbody></tgroup></informaltable></section><section><title>How do I setup squid.conf for IPv6?</title><para>Same as you would for IPv4 with CIDR.  IPv6 is only a slightly different address after all. </para><para>Most of the IPv6 upgrade changes are very minor extensions to existing background behavior. </para><para>The only points of possible interest for some will be: </para><itemizedlist><listitem><para><ulink url="http://www.squid-cache.org/Doc/config/external_acl_type#">external_acl_type</ulink> flags 'ipv4' or 'ipv6' </para></listitem><listitem><para><ulink url="http://www.squid-cache.org/Doc/config/tcp_outgoing_address#">tcp_outgoing_address</ulink> magic ACL's </para></listitem><listitem><para>CIDR is required - that brand spanking new concept (from 1993). </para></listitem><listitem><para><emphasis role="strong">localhost</emphasis> has two IP addresses. </para></listitem></itemizedlist></section><section><title>Fine Tuning IPv6 Performance</title><itemizedlist><listitem><para>DNS works best and fastest through the internal resolver built into squid. Check that your configure options do not disable it. </para></listitem><listitem><para>IPv6 links still may have some tunnel lag. Squid can benefit most from a fast link, so test the various tunnel methods and brokers available for speed. This is a good idea in general for your IPv6 experience. Go with native routing as soon as your upstream can supply it. Squid-3.1.16 and later provide <ulink url="http://www.squid-cache.org/Doc/config/dns_v4_first#">dns_v4_first</ulink> directive to avoid the worst cases of tunnel lag. Enable this only if you have to. </para></listitem><listitem><para>A single listening port <emphasis role="strong"><ulink url="http://www.squid-cache.org/Doc/config/http_port#">http_port</ulink> 3128</emphasis> is less resource hungry than one for each IPv4 and IPv6. Also, its fully compatible with IPv6 auto-configuration and link-local addressed peers. </para></listitem><listitem><para>Splitting the listening ports on input mode (standard, tproxy, intercept, accel, ssl-bump) is better than mixing two modes on one port. The most current Squid now require this splitting. </para></listitem><listitem><para>Squid can already cope with bad or inaccessible IPs. This can be improved by tuning the <ulink url="http://www.squid-cache.org/Doc/config/connect_timeout#">connect_timeout</ulink> and <ulink url="http://www.squid-cache.org/Doc/config/dns_timeout#">dns_timeout</ulink> down to a few seconds. </para></listitem></itemizedlist></section><section><title>Trouble Shooting IPv6</title><section><title>Squid builds with IPv6 but it won't listen for IPv6 requests.</title><para><emphasis role="strong">Your squid may be configured to only listen for IPv4.</emphasis> </para><para>The UDP port listening addresses in squid.conf (<ulink url="http://www.squid-cache.org/Doc/config/udp_incoming_address#">udp_incoming_address</ulink>, <ulink url="http://www.squid-cache.org/Doc/config/snmp_incoming_address#">snmp_incoming_address</ulink>) can be either IPv4 or IPv6. The default is to accept traffic on any IP address to the relevant UDP port. If you configure this to a specific IP address of either type it will not accept traffic of the other type. </para><itemizedlist><listitem><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> Note that configuring UDP incoming address to <emphasis role="strong">0.0.0.0</emphasis> as some old Squid-2 configurations did. Explicitly makes the incoming port IPv4-only, which can break responses to UDP packets sent out using default IPv6-enabled outgoing UDP ports. </para></listitem></itemizedlist><para>Each of the TCP port lines in squid.conf (<ulink url="http://www.squid-cache.org/Doc/config/http_port#">http_port</ulink>, <ulink url="http://www.squid-cache.org/Doc/config/https_port#">https_port</ulink>, <ulink url="http://www.squid-cache.org/Doc/config/ftp_port#">ftp_port</ulink>) can take either a port, hostname:port, or ip:port combo. </para><para>When these lines contain an IPv4 address or a hostname with only IPv4 addresses Squid will only open on those IPv4 you configured. You can add new port lines for IPv6 using [ipv6]:port, add AAAA records to the hostname in DNS, or use only a port. </para><para>When only a port is set it should be opening for IPv6 access as well as IPv4. The one exception to default IPv6-listening are port lines where 'transparent', 'intercept' or 'tproxy' options are set. NAT-interception (commonly called transparent proxy) support for IPv6 varies, as does TPROXYv4 support in the kernel. Squid will detect the capabilities and open the appropriate type of port for your kernel - which may be IPv4-only. </para><para><emphasis role="strong">Your squid may be configured with restrictive ACL.</emphasis> </para><para>A good Squid configuration will allow only the traffic it has to and deny any other. If you are testing IPv6 using an existing config you may need to update your ACL lines to include the IPv6 addresses or network ranges which should be allowed. src, dst, and other ACL which accept IPv4 addresses or netmasks will also accept IPv6 addresses and CIDR masks now. For example the old ACL to match traffic from localhost is now: </para><screen><![CDATA[acl localhost src 127.0.0.1 ::1]]></screen><para><emphasis role="strong">Your Operating System may be configured to prevent Dual-Stack sockets.</emphasis> </para><para>Since version 3.1.6 Squid will detect the type of TCP stack your kernel has and open one or two sockets as needed by stack capabilities it finds. </para><para>Dual-Stack is easiest achieved by a method known as v4-mapping. Where all IPv4 addresses map into a special part of IPv6 space for a socket connection. Squid makes use of this feature of IPv6 when found. It is expected to enable this capability on the sockets it uses. </para><para>If you have manually &quot;disabled IPv6&quot; using one of the many blog tutorials that advise simply forcing this socket feature off (as opposed to rebuilding your kernel without IPv6) your TCP stack will be claiming IPv6 capabilities it cannot deliver. Check your cache.log for warnings or errors about 'V6ONLY'. </para></section><section><title>Squid listens on IPv6 but says 'Access Denied' or 'Cannot Forward' or similar.</title><para><emphasis role="strong">Your squid may be configured to only connect out through specific IPv4.</emphasis> </para><para>A number of networks are known to need <ulink url="http://www.squid-cache.org/Doc/config/tcp_outgoing_address#">tcp_outgoing_address</ulink> (or various other *_outgoing_address) in their squid.conf. These can force squid to request the website over an IPv4 link when it should be trying an IPv6 link instead. There is a little bit of ACL magic possible with <ulink url="http://www.squid-cache.org/Doc/config/tcp_outgoing_address#">tcp_outgoing_address</ulink> which will get around this problem for DIRECT requests. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> This is only needed for Squid-3.1 series. Later Squid do this automatically when selecting the outgoing connection properties. </para></listitem></itemizedlist><screen><![CDATA[acl to_ipv6 dst ipv6
]]><![CDATA[
# Magic entry. Place first in your config. This makes sure Squid has the IP available.
http_access deny to_ipv6 !all
]]><![CDATA[
tcp_outgoing_address 10.255.0.1 !to_ipv6
tcp_outgoing_address dead:beef::1 to_ipv6]]></screen><para>That will split all outgoing requests into two groups, those headed for IPv4 and those headed for IPv6. It will push the requests out the IP which matches the destination side of the Internet and allow IPv4/IPv6 access with controlled source address exactly as before. </para><para>Please note the <emphasis role="strong">dst</emphasis> ACL only works for DIRECT requests. Traffic destined for peers needs to be left without an outgoing address set. This bug is fixed in <ulink url="https://wiki.squid-cache.org/Features/IPv6/Squid-3.2#">Squid-3.2</ulink>. </para></section></section><section><title>Mistakes people are making</title><para>Please don't do these. Particularly in immortal online documents. I would not even mention them here if it were not for people doing these and then asking why it does not work. </para><section><title>Defining acl all src ::/0 0.0.0.0/0</title><itemizedlist><listitem><para><emphasis role="strong">all</emphasis> is pre-defined in every Squid-3 release. </para></listitem><listitem><para>It will now throw nasty confusing WARNING: at confused people. </para></listitem></itemizedlist></section><section><title>Defining IPv4 with ::ffff:a.b.c.d</title><itemizedlist><listitem><para>Squid still understands IPv4. </para></listitem><listitem><para>No need to write anything new and confusing. </para></listitem></itemizedlist></section><section><title>Defining IPv6 as 2000::/3</title><itemizedlist><listitem><para>It's not true. </para></listitem><listitem><para>Squid provides an ACL magic moniker <emphasis role="strong">ipv6</emphasis> meaning the currently routed IPv6 space. </para></listitem></itemizedlist><screen><![CDATA[acl globalIPv6 src ipv6]]></screen></section><section><title>Defining IPv6 space as containing any address starting with F</title><itemizedlist><listitem><para>they are <emphasis role="strong">local-only</emphasis> ranges. </para></listitem><listitem><para>Add them to your localnet ACL when actually needed. </para></listitem></itemizedlist></section><section><title>Defining 3ffe::/16</title><itemizedlist><listitem><para>Once upon a time there was a experimental network called 6bone. </para></listitem><listitem><para>It's dead now. No need to even mention it anymore. </para></listitem></itemizedlist></section></section><section><title>How do I make squid use IPv4 to its helpers?</title><para>With squid external ACL helpers there are two new options <emphasis role="strong">ipv4</emphasis> and <emphasis role="strong">ipv6</emphasis>. Squid prefers to use unix pipes to helpers and these are ignored. But on some networks TCP sockets are required. Squid will connect over IPv6 by default, but for older helpers which can only accept IPv4 you may need to be explicit. </para><screen><![CDATA[external_acl_type hi ipv4 %DST /etc/squid/hello_world.sh]]></screen></section><section><title>How do I block IPv6 traffic?</title><para>Why you would want to do that without similar limits on IPv4 (using <emphasis role="strong">all</emphasis>) is beyond me but here it is. </para><para>Previously squid defined the <emphasis role="strong">all</emphasis> ACL which means the whole Internet. It still does, but now it means both IPv6 and IPv4 so using it will not block only IPv6. </para><para>A new ACL tag <emphasis role="strong">ipv6</emphasis> has been added to match only IPv6 public space. </para><para>Example creation in squid.conf: </para><screen><![CDATA[acl to_ipv6 dst ipv6
acl from_ipv6 src ipv6]]></screen></section><section><title>Why can't I connect to my localhost peers?</title><para>In modern IPv6-enabled systems the special <emphasis role="strong">localhost</emphasis> name has at least two IP addresses. IPv4 (127.0.0.1) and IPv6 (::1). </para><para>If your peers are IPv4-only peers Squid will be unable to open connections to them on IPv6. The result is a series of &quot;TCP connection to localhost/* failed&quot; and ending with a &quot;DEAD&quot; peer. </para><para>This config for example has been known to display this problem: </para><screen><![CDATA[cache_peer localhost parent 3128 0]]></screen><para>The solution is to configure 127.0.0.1 as the peer address instead of localhost until you can IPv6-enable the peers. </para><itemizedlist><listitem override="none"><para><emphasis>Thanks to Artemis Braja for bringing this problem to light</emphasis> </para></listitem></itemizedlist></section><section><title>So what gets broken by IPv6?</title><para>Also, a few features can't be used with IPv6 addresses. IPv4 traffic going through Squid is unaffected by this. Particularly traffic from IPv4 clients. However they need to be noted. </para><section><title>NAT Interception Proxy (aka &quot;Transparent&quot;)</title><para>IPv6 was originally designed to work without NAT. That all changed around 2010 with the introduction of NAT66 and NPT66. </para><itemizedlist><listitem><para>Linux <ulink url="https://wiki.squid-cache.org/Features/IPv6/Features/Tproxy4#">TPROXY v4</ulink> is capable of IPv6. Kernel and iptables releases containing IPv6 TPROXYv4 are now readily available. </para></listitem><listitem><para>Linux versions had IPv6 NAT capability added late in the 3.x series. It should be stable enough to use in Linux 4.0+, YMMV though. </para></listitem><listitem><para>BSD <emphasis role="strong">divert</emphasis> sockets provide TPROXY equivalent functionality for recent OpenBSD and derivative systems. Support for <emphasis>tproxy</emphasis> mode on BSD was added to Squid-3.4. </para></listitem><listitem><para>BSD <emphasis role="strong">redirect</emphasis> sockets provide NAT66 functionality for recent OpenBSD and derivative systems. But are not supported by Squid due to kernel API issues. </para></listitem></itemizedlist></section><section><title>Delay Pools</title><para>Squid delay pools are still linked to class-B and class-C networking (from pre-1995 Internet design). Until that gets modernized the address-based pool classes can't apply to IPv6 address sizes. </para><para>The pools that should still work are the Squid-3 username based pool, or tag based pool. </para></section><section><title>WCCP (v1 and v2)</title><para>WCCP is a Cisco protocol designed very closely around IPv4. </para><para>WCCP draft specifications have been updated to define IPv6 support. But Squid has not been updated to use the new syntax. </para></section><section><title>ARP (MAC address ACLs)</title><para>ARP does not exist in IPv6. It has been replaced by a protocol called NDP (Neighbour Discovery Protocol) Proper IPv6 auto-configuration of networks can provide an equivalent in the IPv6 address itself. </para><para>From <ulink url="https://wiki.squid-cache.org/Features/IPv6/Squid-3.2#">Squid-3.2</ulink> support for handling EUI-64 exists in <ulink url="http://www.squid-cache.org/Doc/config/acl#">acl</ulink>, <ulink url="http://www.squid-cache.org/Doc/config/logformat#">logformat</ulink> and <ulink url="http://www.squid-cache.org/Doc/config/external_acl_type#">external_acl_type</ulink>. It currently still requires IPv6 SLAAC (the IPv6 automatically configured client address) to supply the EUI information. </para><para>Security problems already well-known with using MAC addresses and ARP are equally present in EUI handling for both EUI-48 (MAC) and EUI-64 (IPv6). </para></section><section><title>RADIUS authentication</title><para>Simply put we need a new RADIUS auth helper daemon. There is a RADIUS protocol upgrade for IPv6. But we have none yet able to write and test the helper. </para></section></section></section><section><title>Other Resources</title><para>[<ulink url="http://www.braintrust.co.nz/ipv6wwwtest/"/>] For content providers Braintrust Ltd. provide a test script to check what happens when you turn on AAAA records for your website. If you have any worries this can be run and show how many if any of your clients and visitors might have trouble. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/Features/IPv6/CategoryFeature#">CategoryFeature</ulink> </para></section></article>