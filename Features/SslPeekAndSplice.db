<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/SslPeekAndSplice</title><revhistory><revision><revnumber>62</revnumber><date>2021-09-24 15:46:08</date><authorinitials>AlexRousskov</authorinitials><revremark>Fixed the warning about dstdomain (prompted by admin questions): That ACL should &quot;work&quot; during SslBump, but ssl::server_name is a better choice in many cases.</revremark></revision><revision><revnumber>61</revnumber><date>2020-01-29 12:30:00</date><authorinitials>AmosJeffries</authorinitials><revremark>prune Discussion page links from config examples list</revremark></revision><revision><revnumber>60</revnumber><date>2020-01-29 12:25:00</date><authorinitials>AmosJeffries</authorinitials><revremark>add table of contents for easier browsing to details in this page</revremark></revision><revision><revnumber>59</revnumber><date>2019-01-01 04:45:57</date><authorinitials>AlexRousskov</authorinitials><revremark>Documented logged %ssl:bump_mode values. v3.5 details should probably be removed after a while.</revremark></revision><revision><revnumber>58</revnumber><date>2018-09-26 19:41:02</date><authorinitials>AlexRousskov</authorinitials><revremark>Added one more example after a long discussion on squid-users</revremark></revision><revision><revnumber>57</revnumber><date>2017-02-01 20:04:08</date><authorinitials>AlexRousskov</authorinitials><revremark>Polished further by indicating that CONNECT parsing comes in addition to TCP-level info collecting.</revremark></revision><revision><revnumber>56</revnumber><date>2017-02-01 14:42:53</date><authorinitials>AmosJeffries</authorinitials><revremark>clarify slightly the step1 CONNECT request details</revremark></revision><revision><revnumber>55</revnumber><date>2016-09-01 17:41:52</date><authorinitials>AlexRousskov</authorinitials><revremark>Fixed wrong directive order in examples (placing all non-final actions before an always-matching final action is useless). Marked some unfixed problems.</revremark></revision><revision><revnumber>54</revnumber><date>2016-09-01 16:13:07</date><authorinitials>Marcus Kool</authorinitials><revremark>edited the examples section</revremark></revision><revision><revnumber>53</revnumber><date>2016-08-31 15:32:18</date><authorinitials>AlexRousskov</authorinitials><revremark>Per Amos advice, used MoinMoin markup instead of the three Xs mark because some content filters misinterpret that mark :-(.</revremark></revision><revision><revnumber>52</revnumber><date>2016-08-30 01:03:12</date><authorinitials>AlexRousskov</authorinitials><revremark>Spellcheck.</revremark></revision><revision><revnumber>51</revnumber><date>2016-08-30 00:28:29</date><authorinitials>AlexRousskov</authorinitials><revremark>Replaced markdown with moinmoin markup.</revremark></revision><revision><revnumber>50</revnumber><date>2016-08-30 00:26:53</date><authorinitials>AlexRousskov</authorinitials><revremark>Fixed which steps provide client-supplied information. Detailed the danger of relying on that information.</revremark></revision><revision><revnumber>49</revnumber><date>2016-08-29 23:58:49</date><authorinitials>Marcus Kool</authorinitials><revremark>the removal of real domainnames resulted in acl monitoredSites (bump)  include URLs of serverIsBank (splice)</revremark></revision><revision><revnumber>48</revnumber><date>2016-08-29 23:49:11</date><authorinitials>Marcus Kool</authorinitials><revremark>removed misleading comment</revremark></revision><revision><revnumber>47</revnumber><date>2016-08-29 19:43:34</date><authorinitials>AlexRousskov</authorinitials><revremark>Added an XXX to mark the &quot;redundant&quot; comment as wrong/misleading.</revremark></revision><revision><revnumber>46</revnumber><date>2016-08-29 19:38:02</date><authorinitials>AlexRousskov</authorinitials><revremark>Documented that recent changes broke the examples section. Removed &quot;real&quot; domains.</revremark></revision><revision><revnumber>45</revnumber><date>2016-08-29 19:19:26</date><authorinitials>AlexRousskov</authorinitials><revremark>Minor polishing.</revremark></revision><revision><revnumber>44</revnumber><date>2016-08-29 16:39:21</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>43</revnumber><date>2016-08-29 16:34:43</date><authorinitials>Marcus Kool</authorinitials><revremark>ClientHello generated a link with a question mark. use &quot;Client Hello&quot; as workaround</revremark></revision><revision><revnumber>42</revnumber><date>2016-08-29 16:32:29</date><authorinitials>Marcus Kool</authorinitials><revremark>updated the examples</revremark></revision><revision><revnumber>41</revnumber><date>2016-08-29 16:06:12</date><authorinitials>Marcus Kool</authorinitials></revision><revision><revnumber>40</revnumber><date>2016-08-24 19:46:20</date><authorinitials>Marcus Kool</authorinitials></revision><revision><revnumber>39</revnumber><date>2016-08-24 16:19:12</date><authorinitials>Marcus Kool</authorinitials><revremark>updated image (removed 1,2,3), documented the two flows of handshakes</revremark></revision><revision><revnumber>38</revnumber><date>2016-08-24 14:25:15</date><authorinitials>AlexRousskov</authorinitials><revremark>Fixed sublist.</revremark></revision><revision><revnumber>37</revnumber><date>2016-08-24 14:23:15</date><authorinitials>AlexRousskov</authorinitials><revremark>Added an XXX to document why the beautiful handshake image does not depict what Squid does and, hence, might do more harm than good.</revremark></revision><revision><revnumber>36</revnumber><date>2016-08-24 13:17:36</date><authorinitials>Marcus Kool</authorinitials></revision><revision><revnumber>35</revnumber><date>2016-08-24 05:37:45</date><authorinitials>AlexRousskov</authorinitials><revremark>Minor polishing.</revremark></revision><revision><revnumber>34</revnumber><date>2016-08-24 05:33:22</date><authorinitials>AlexRousskov</authorinitials><revremark>TLS RFC spells clientHello as either &quot;Client Hello&quot; or &quot;ClientHello&quot;. ClientHello is essentially a struct name. Client Hello is for humans?</revremark></revision><revision><revnumber>33</revnumber><date>2016-08-24 05:21:57</date><authorinitials>AlexRousskov</authorinitials><revremark>Do not imply that on_unsupported_protocol only applies to TLS/SslBump.</revremark></revision><revision><revnumber>32</revnumber><date>2016-08-24 05:15:19</date><authorinitials>AlexRousskov</authorinitials><revremark>A yet another attempt to resolve the &quot;next step&quot; confusion. Mention the callout sequence explicitly. Minor fixes. TODO: Split action descriptions in the table to use one row per step?</revremark></revision><revision><revnumber>31</revnumber><date>2016-08-24 04:27:29</date><authorinitials>AlexRousskov</authorinitials><revremark>There is no such thing as IP CONNECT. There is one ssl_bump directive but it may have many rules. The matching action is performed in the current step, not the next one. Minor polishing.</revremark></revision><revision><revnumber>30</revnumber><date>2016-08-24 04:14:58</date><authorinitials>AlexRousskov</authorinitials><revremark>An SslPeekAndSplice Feature page is not the place to describe what SslBump or HTTPS is (Feature pages were not meant and are not structured for that kind of info). Minor fixes.</revremark></revision><revision><revnumber>29</revnumber><date>2016-08-23 15:35:32</date><authorinitials>AmosJeffries</authorinitials><revremark>update interwiki links</revremark></revision><revision><revnumber>28</revnumber><date>2016-08-23 02:00:03</date><authorinitials>Marcus Kool</authorinitials></revision><revision><revnumber>27</revnumber><date>2016-08-23 00:57:23</date><authorinitials>Marcus Kool</authorinitials><revremark>first edit</revremark></revision><revision><revnumber>26</revnumber><date>2016-08-22 17:41:27</date><authorinitials>AlexRousskov</authorinitials><revremark>Removed derecated &quot;none&quot; action from the primary steps description. Spotted by Marcus Kool.</revremark></revision><revision><revnumber>25</revnumber><date>2015-10-23 14:39:34</date><authorinitials>AlexRousskov</authorinitials><revremark>Removed &quot;client certificate&quot; from peek and stare descriptions per request on squid-users. Squid may receive them but does not parse/analyze them during step1 AFAIK.</revremark></revision><revision><revnumber>24</revnumber><date>2015-10-16 05:21:09</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>23</revnumber><date>2015-09-18 20:33:02</date><authorinitials>AlexRousskov</authorinitials><revremark>Noted bumping bug 4327.</revremark></revision><revision><revnumber>22</revnumber><date>2015-08-27 22:52:53</date><authorinitials>AlexRousskov</authorinitials><revremark>Polished to reduce conflict between &quot;SNI is obtained at step #1&quot; and &quot;Step 2: Get SNI info&quot;. Still confusing, but we are hitting a limitation of what text lists can describe. Need a picture!</revremark></revision><revision><revnumber>21</revnumber><date>2015-08-21 02:56:41</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>20</revnumber><date>2015-08-21 02:05:29</date><authorinitials>AmosJeffries</authorinitials><revremark>update intro descriptions to remove &quot;we may need to implement&quot; parts and clarify readability</revremark></revision><revision><revnumber>19</revnumber><date>2015-08-19 15:49:32</date><authorinitials>AlexRousskov</authorinitials><revremark>Added a peek-and-bump example.</revremark></revision><revision><revnumber>18</revnumber><date>2015-08-18 23:34:47</date><authorinitials>AlexRousskov</authorinitials><revremark>Removed stale Current State section and polished mimicking/staring documentation.</revremark></revision><revision><revnumber>17</revnumber><date>2015-08-18 23:24:09</date><authorinitials>AlexRousskov</authorinitials><revremark>Polished overview based on an admin feedback.</revremark></revision><revision><revnumber>16</revnumber><date>2015-08-14 22:01:59</date><authorinitials>AlexRousskov</authorinitials><revremark>Staring is supported.</revremark></revision><revision><revnumber>15</revnumber><date>2015-08-12 18:09:55</date><authorinitials>AlexRousskov</authorinitials><revremark>Removed &quot;err&quot; action documentation to minimize chances that somebody will be confused by it. It can by restored from this diff later if we actually implement it.</revremark></revision><revision><revnumber>14</revnumber><date>2015-08-12 18:05:57</date><authorinitials>AlexRousskov</authorinitials><revremark>Removed &quot;reconnect&quot; action documentation per Amos request. Emphasized that &quot;err&quot; action is not supported. Emphasized that various Squid versions may not support some of the other listed actions.</revremark></revision><revision><revnumber>13</revnumber><date>2015-02-08 12:34:35</date><authorinitials>AmosJeffries</authorinitials><revremark>some minor updates</revremark></revision><revision><revnumber>12</revnumber><date>2015-01-17 06:16:45</date><authorinitials>AmosJeffries</authorinitials><revremark>this was merged long ago and now in a stable as well.</revremark></revision><revision><revnumber>11</revnumber><date>2014-07-17 22:25:45</date><authorinitials>AlexRousskov</authorinitials><revremark>Detailed &quot;server peeking usually precludes bumping&quot; limitation.</revremark></revision><revision><revnumber>10</revnumber><date>2014-07-12 03:36:02</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated current status.</revremark></revision><revision><revnumber>9</revnumber><date>2014-04-16 16:48:07</date><authorinitials>AlexRousskov</authorinitials><revremark>Documented a new ssl_bump action: reconnect.</revremark></revision><revision><revnumber>8</revnumber><date>2014-04-16 16:22:16</date><authorinitials>AlexRousskov</authorinitials><revremark>Started documenting a session resumption limitation.</revremark></revision><revision><revnumber>7</revnumber><date>2014-04-12 21:48:19</date><authorinitials>AlexRousskov</authorinitials><revremark>Added a splice-but-verify configuration example. Detailed err action description a little.</revremark></revision><revision><revnumber>6</revnumber><date>2014-04-12 00:28:09</date><authorinitials>AlexRousskov</authorinitials><revremark>Documented configuration approach and updated current status after resuming the project. Needs more work.</revremark></revision><revision><revnumber>5</revnumber><date>2014-02-04 15:48:48</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated feature details and detailed current status.</revremark></revision><revision><revnumber>4</revnumber><date>2013-11-19 18:04:45</date><authorinitials>AlexRousskov</authorinitials><revremark>updated status</revremark></revision><revision><revnumber>3</revnumber><date>2013-04-01 20:54:22</date><authorinitials>AlexRousskov</authorinitials><revremark>Added lp branch link.</revremark></revision><revision><revnumber>2</revnumber><date>2013-03-29 05:04:46</date><authorinitials>AlexRousskov</authorinitials><revremark>Documented SSL client Hello field forwarding.</revremark></revision><revision><revnumber>1</revnumber><date>2013-03-29 00:29:10</date><authorinitials>AlexRousskov</authorinitials><revremark>Started documenting SSL Peek and Splice.</revremark></revision></revhistory></articleinfo><section><title>Feature: SslBump Peek and Splice</title><itemizedlist><listitem><para><emphasis role="strong">Goal</emphasis>: Make bumping decisions after the origin server name is known, especially when transparently intercepting TLS/SSL.  Avoid bumping non-TLS traffic. </para></listitem><listitem><para><emphasis role="strong">Status</emphasis>: completed. </para></listitem><listitem><para><emphasis role="strong">Version</emphasis>: 3.5 </para></listitem><listitem><para><emphasis role="strong">Developer</emphasis>: <ulink url="https://wiki.squid-cache.org/Features/SslPeekAndSplice/AlexRousskov#">AlexRousskov</ulink> and Christos Tsantilas </para></listitem></itemizedlist><itemizedlist><listitem override="none"/></itemizedlist></section><section><title>Motivation</title><para>&quot;Peek and Splice&quot; is a collection of new <ulink url="https://wiki.squid-cache.org/Features/SslPeekAndSplice/Features/SslBump#">SslBump</ulink> actions and related features introduced in <ulink url="https://wiki.squid-cache.org/Features/SslPeekAndSplice/Squid-3.5#">Squid-3.5</ulink>.  Older Squids used server-first and client-first actions that did not work well many cases. Many SslBump deployments try to minimize potential damage by <emphasis>not</emphasis> bumping sites unless the local policy demands it. Before the new actions became available, the decision to bump was made based on very limited information: </para><itemizedlist><listitem><para>A typical HTTP CONNECT request does not contain many details, and </para></listitem><listitem><para>intercepted TCP connections reveal nothing but IP addresses and port numbers. </para></listitem></itemizedlist><para>Peek and Splice gives admin a way to make bumping decisions later in the TLS handshake process, when client SNI and the server certificate are available. Or when it becomes clear that we are not dealing with a TLS connection at all! </para></section><section><title>Terminology</title><para>In most cases, this page uses <emphasis>TLS</emphasis> to mean <emphasis>TLS or SSL</emphasis>. </para></section><section><title>Overview</title><para>The Peek and Splice feature looks at the TLS Client Hello message and SNI info (if any), sends an identical or similar (to the extent possible) Client Hello message to the server, and then looks at the TLS Server Hello message. </para><para>The final decision to splice, bump, or terminate the connection can be made at any of those steps (but what Squid does at step N affects its ability to splice or bump at step N+1!). </para><para>Please see the <link linkend="Actions">actions table</link> below for definitions of the two &quot;looking at&quot; actions (i.e., peek and stare) as well as various final actions (e.g., &quot;bump&quot;, &quot;splice&quot;, &quot;terminate&quot;, etc.). </para><section><title>Processing steps</title><para>Bumping Squid goes through several TCP and TLS &quot;handshaking&quot; steps. Peeking steps give Squid more information about the client or server but often limit the actions that Squid may perform in the future. The image shows a simplified data flow and related events between a TLS client and a TLS server.  Note that with a bumping proxy between the client and the server <emphasis><emphasis role="underline">the flow is duplicated</emphasis></emphasis> where the first flow is between client and proxy and the second flow between proxy and server.  </para><para><inlinemediaobject><imageobject><imagedata fileref="https://wiki.squid-cache.org/Features/SslPeekAndSplice?action=AttachFile&amp;do=get&amp;target=TLS-handshake-02.png"/></imageobject><textobject><phrase>TLS handshake between client and server</phrase></textobject></inlinemediaobject> </para><para><emphasis role="strong">Step 1:</emphasis> </para><orderedlist numeration="lowerroman"><listitem><para>Get TCP-level info from the client. </para><itemizedlist><listitem><para>In forward proxy environments, also parse the CONNECT request. </para></listitem><listitem><para>In interception environments, create a fake CONNECT request using TCP-level info. </para></listitem></itemizedlist></listitem><listitem><para>Go through the <ulink url="https://wiki.squid-cache.org/Features/SslPeekAndSplice/SquidFaq/OrderIsImportant#Callout_Sequence">Callout Sequence</ulink> with the CONNECT request mentioned above. </para></listitem><listitem><para>Evaluate all <ulink url="http://www.squid-cache.org/Doc/config/ssl_bump#">ssl_bump</ulink> rules and perform the first matching action (splice, bump, peek, stare, or terminate). </para></listitem></orderedlist><para>Step 1 is the only step that is always performed. </para><para>The CONNECT request is logged in access.log. </para><para>Note that for intercepted HTTPS traffic there is no &quot;domain name&quot; available at this point. The log entry will contain only the destination IP address and port. The same is true for some real CONNECT requests in a forward proxy environments. </para><para><emphasis role="strong">Step 2:</emphasis> </para><orderedlist numeration="lowerroman"><listitem><para>Get TLS Client Hello info from the client, including SNI where available. Adjust the CONNECT request from step1 to reflect SNI. </para></listitem><listitem><para>Go through the <ulink url="https://wiki.squid-cache.org/Features/SslPeekAndSplice/SquidFaq/OrderIsImportant#Callout_Sequence">Callout Sequence</ulink> with the adjusted CONNECT request mentioned above. </para></listitem><listitem><para>Evaluate again all <ulink url="http://www.squid-cache.org/Doc/config/ssl_bump#">ssl_bump</ulink> rules and perform the first matching action (splice, bump, peek, stare, or terminate). </para><itemizedlist><listitem><para>Peeking at this step usually makes bumping at step 3 impossible. </para></listitem><listitem><para>Staring at this step usually makes splicing at step 3 impossible. </para></listitem></itemizedlist></listitem></orderedlist><para>Step 2 is only performed if a peek or stare rule matched during the previous step. </para><para>The adjusted CONNECT request is logged in access.log during this step if this step is final (i.e., there is no step 3). However, when splicing, the adjusted CONNECT becomes attached to the resulting tunnel and is not logged until that tunnel is closed. </para><para><emphasis role="strong">Step 3:</emphasis> </para><orderedlist numeration="lowerroman"><listitem><para>Get TLS Server Hello info from the server, including the server certificate. </para></listitem><listitem><para>Validate the TLS server certificate. </para></listitem><listitem><para>Evaluate again all <ulink url="http://www.squid-cache.org/Doc/config/ssl_bump#">ssl_bump</ulink> rules and perform the first matching action (splice, bump, or terminate) for the connection. </para></listitem></orderedlist><para>Step 3 is only performed if a peek or stare rule matched during the previous step. </para><para>The adjusted CONNECT request from the previous step is always logged in access.log during this step (if Squid gets to this step, of course). However, when splicing, the adjusted CONNECT becomes attached to the resulting tunnel and is not logged until that tunnel is closed. </para><para>In most cases, the only meaningful choice at step 3 is whether to terminate the connection. The splicing or bumping decision is usually dictated by either peeking or staring at the previous step. </para><para>Squid configuration has to balance the desire to gain more information (by delaying the final action) with the requirement to perform a certain final action (which sometimes cannot be delayed any further). </para></section><section><title>Actions</title><para>Several actions are possible when a proxy handles a TLS connection. See the <ulink url="http://www.squid-cache.org/Doc/config/ssl_bump#">ssl_bump</ulink> directive in your squid.conf.documented for a list of actions your version of Squid supports. Some actions are only possible during certain processing steps (see above). During a given processing step, Squid (3.5.8 and later) <emphasis>ignores</emphasis> <ulink url="http://www.squid-cache.org/Doc/config/ssl_bump#">ssl_bump</ulink> lines with impossible actions. This helps us keep configuration sane. Processing steps are discussed further below. </para><informaltable><tgroup cols="3"><colspec colname="col_0"/><colspec colname="col_1"/><colspec colname="col_2"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para><emphasis role="strong">Action</emphasis></para></entry><entry colsep="1" rowsep="1"><para><emphasis role="strong">Applicable processing steps</emphasis></para></entry><entry colsep="1" rowsep="1"><para><emphasis role="strong">Description</emphasis></para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para><emphasis role="strong">peek</emphasis></para></entry><entry colsep="1" rowsep="1"><para>step1, step2</para></entry><entry colsep="1" rowsep="1"><para>When a peek rule matches during step1, Squid proceeds to step2 where it parses the TLS Client Hello and extracts SNI (if any). When a peek rule matches during step 2, Squid proceeds to step3 where it parses the TLS Server Hello and extracts server certificate while preserving the possibility of splicing the client and server connections; peeking at the server certificate usually precludes future bumping (see Limitations).</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para><emphasis role="strong">splice</emphasis></para></entry><entry colsep="1" rowsep="1"><para>step1, step2, and sometimes step3</para></entry><entry colsep="1" rowsep="1"><para>Become a TCP tunnel without decoding the connection. The client and the server exchange data as if there is no proxy in between.</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para><emphasis role="strong">stare</emphasis></para></entry><entry colsep="1" rowsep="1"><para>step1, step2</para></entry><entry colsep="1" rowsep="1"><para>When a stare rule matches during step1, Squid proceeds to step2 where it parses the TLS Client Hello and extracts SNI (if any). When a stare rule matches during step2, Squid proceeds to step3 where it parses the TLS Server Hello and extracts server certificate while preserving the possibility of bumping the client and server connections; staring at the server certificate usually precludes future splicing (see Limitations).</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para><emphasis role="strong">bump</emphasis></para></entry><entry colsep="1" rowsep="1"><para>step1, step2, and sometimes step3</para></entry><entry colsep="1" rowsep="1"><para>Establish a TLS connection with the server (using client SNI, if any) and establish a TLS connection with the client (using a mimicked server certificate).  <emphasis role="strong">However</emphasis>, this is not what actually happens right now if a bump rule matches during step1. See bug <ulink url="https://bugs.squid-cache.org/show_bug.cgi?id=4327#">4327</ulink> </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para><emphasis role="strong">terminate</emphasis></para></entry><entry colsep="1" rowsep="1"><para>step1, step2, step3</para></entry><entry colsep="1" rowsep="1"><para>Close client and server connections.</para></entry></row></tbody></tgroup></informaltable><para>Actions splice, bump, and terminate are final actions: They prevent further processing of the <ulink url="http://www.squid-cache.org/Doc/config/ssl_bump#">ssl_bump</ulink> rules. Actions peek and stare allow Squid to proceed to the next SslBump step. </para><informaltable><tgroup cols="3"><colspec colname="col_0"/><colspec colname="col_1"/><colspec colname="col_2"/><tbody><row rowsep="1"><entry align="center" colsep="1" nameend="col_2" namest="col_0" rowsep="1"><para>pre-3.5 actions are listed below for completeness sake only; <emphasis>do not use these with <ulink url="https://wiki.squid-cache.org/Features/SslPeekAndSplice/Squid-3.5#">Squid-3.5</ulink> and newer</emphasis></para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para><emphasis role="strong">client-first</emphasis></para></entry><entry colsep="1" rowsep="1"><para>step1</para></entry><entry colsep="1" rowsep="1"><para>Ancient <ulink url="https://wiki.squid-cache.org/Features/SslPeekAndSplice/Squid-3.1#">Squid-3.1</ulink> style bumping: Establish a secure connection with the client first, then connect to the server. Cannot mimic server certificate well, which causes a lot of problems.</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para><emphasis role="strong">server-first</emphasis></para></entry><entry colsep="1" rowsep="1"><para>step1</para></entry><entry colsep="1" rowsep="1"><para>Old <ulink url="https://wiki.squid-cache.org/Features/SslPeekAndSplice/Squid-3.3#">Squid-3.3</ulink> style bumping: Establish a secure connection with the server first, then establish a secure connection with the client, using a mimicked server certificate. Does not support peeking, which causes various problems.</para><para>When used for intercepted traffic SNI is not available and the server raw-IP will be used in certificates. </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para><emphasis role="strong">none</emphasis></para></entry><entry colsep="1" rowsep="1"><para>step1</para></entry><entry colsep="1" rowsep="1"><para>Same as &quot;splice&quot; but does not support peeking and should not be used in configurations that use those steps.</para></entry></row></tbody></tgroup></informaltable></section><section><title>See Also</title><para>If <ulink url="https://wiki.squid-cache.org/Features/SslPeekAndSplice/Squid-4#">Squid-4</ulink> or later fails to parse an expected TLS Client Hello message, Squid consults <ulink url="http://www.squid-cache.org/Doc/config/on_unsupported_protocol#">on_unsupported_protocol</ulink> directive. </para></section><section><title>Configuration Examples</title><para><emphasis role="strong">IMPORTANT :</emphasis> </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> If you use <emphasis role="strong">dstdomain</emphasis> ACL before the HTTP connection is bumped, please note that it will attempt to match the (fake or real) CONNECT request URI. Depending on your listening ports configuration, browser behavior, the current SslBump step, and other factors, that URI may be just an IP address, and the reverse lookup of that IP address may not be the origin server domain name(s) in the encrypted requests. The <emphasis role="strong">ssl::server_name</emphasis> <ulink url="http://www.squid-cache.org/Doc/config/acl#">acl</ulink> type may use (fake or real) CONNECT request URI, TLS client SNI, and server certificate subject information. It also has knobs to control which bits of information are used. However, it does not perform DNS lookups. Read <ulink url="http://www.squid-cache.org/Doc/config/acl#">acl</ulink> documentation for your Squid version and choose carefully. </para></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Selecting an action only to happen at a particular step can be done using an <emphasis role="strong">at_step</emphasis> type <ulink url="http://www.squid-cache.org/Doc/config/acl#">acl</ulink>. </para></listitem></itemizedlist><para>Some how-to tutorials are available for common policies: </para><para><orderedlist><listitem><ulink url="https://wiki.squid-cache.org/Features/SslPeekAndSplice/ConfigExamples/Intercept/SslBumpExplicit"><emphasis role="strong">ConfigExamples/Intercept/SslBump</emphasis>Explicit</ulink></listitem><listitem><ulink url="https://wiki.squid-cache.org/Features/SslPeekAndSplice/ConfigExamples/Intercept/SslBumpWithIntermediateCA"><emphasis role="strong">ConfigExamples/Intercept/SslBump</emphasis>WithIntermediateCA</ulink></listitem></orderedlist><!--The macro FullSearch caused an error and should be blacklisted. It returned the data '

' which caused the docbook-formatter to choke. Please file a bug.--> </para><screen><![CDATA[# common acls for the following examples:
acl serverIsBank ssl::server_name .bank1.example.com
acl serverIsBank ssl::server_name .bank2.example.net
# extend serverIsBank for all banks that are used by all users
]]><![CDATA[
acl monitoredSites ssl::server_name .foo.example.com
acl monitoredSites ssl::server_name .bar.example.org]]></screen><section><title>Basic Splicing and Bumping</title><para>Only observe TCP/TLS metadata. Do not look at HTTP information. Modify nothing. Useful for logging purposes since the SNI and server certificates are peeked at and can be logged. </para><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> Depending on other settings, Squid may terminate connections if it cannot validate client SNI (Host header forgery detection) or the server certificate. </para><screen><![CDATA[ssl_bump peek all
ssl_bump splice all]]></screen><para>Only bump a set of sites. </para><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> Usually does not work for requests without SNI that go to monitoredSites -- they will not be bumped. </para><screen><![CDATA[ssl_bump bump monitoredSites
ssl_bump peek all
ssl_bump splice all]]></screen><para>Bump All Sites Except Banks </para><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> Usually does not work for requests that go to non-banks -- they will not be bumped. </para><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> Depending on other settings, Squid may terminate connections to banks if Squid cannot validate client SNI (Host header forgery detection) or the server certificate.  </para><screen><![CDATA[ssl_bump splice serverIsBank
ssl_bump peek all
ssl_bump bump all]]></screen></section><section><title>Peek at SNI and Bump</title><para>SNI is obtained by parsing TLS Client Hello during step #2 (which is instructed by <emphasis>ssl_bump peek step1</emphasis>). Parsing TLS Client Hello does <emphasis>not</emphasis> preclude future bumping. If you want to get SNI and bump, then peek at step #1 and bump at the next step (i.e., step #2): </para><screen><![CDATA[acl step1 at_step SslBump1
ssl_bump peek step1
ssl_bump bump monitoredSites !serverIsBank
ssl_bump splice all]]></screen><para>Please note that making decisions based on steps #1 and #2 info alone gives you no knowledge about the TLS server point of view. All your decisions will be based on what the TLS <emphasis>client</emphasis> has told you. This is often not a problem because, in most cases, if the client lies (e.g., sends &quot;bank.example.com&quot; SNI to a &quot;non-bank.example.com&quot; server), the TLS server will refuse to establish the [bumped or spliced at step #2] connection with Squid. However, not all servers will do that and it is trivial to setup a malicious forwarding TLS server that will not. Also, if the client supplied no SNI information at all (e.g., you are dealing with IE on Windows XP), then your ACLs may not have enough information to go on during those first two steps, especially for intercepted connections. </para><para>If you also peek at step #2, you will know the server certificate, but you will no longer be able to bump the connection in most cases (see Limitations below). </para></section><section><title>Peek at SNI and Splice</title><para>The following configuration obtains SNI by parsing TLS Client Hello (due to a matching peek rule at step1) and then either splices bank connections OR stares at the TLS Server Hello (due to a matching stare rule) and bumps non-bank connections (due to the default bump-after-stare rule). </para><screen><![CDATA[ssl_bump peek step1
ssl_bump splice serverIsBank
ssl_bump stare all]]></screen><para>In the above configuration, the decision to splice (if any) is made during step #2 (and only during that step). The decision to bump (if any) is made during step #3 (and only during that step), using the default rule driven by the matching stare rule at step2. That late bumping decision allows Squid to mimic server certificate properties when bumping. The cost (i.e. cons) of that late bumping is the necessity to make the splicing decision based exclusively on client-supplied information. </para><para>This configuration was <ulink url="http://lists.squid-cache.org/pipermail/squid-users/2018-September/019150.html">discussed</ulink> at length on the Squid users mailing list. </para></section></section></section><section><title>Mimicking TLS Client Hello properties when staring</title><para>This section documents TLS Client Hello message fields generated by the ssl_bump stare action. The information in this section is incomplete and somewhat stale. </para><informaltable><tgroup cols="3"><colspec colname="col_0"/><colspec colname="col_1"/><colspec colname="col_2"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para><emphasis role="strong">TLS Client Hello field</emphasis></para></entry><entry colsep="1" rowsep="1"><para><emphasis role="strong">Forwarded?</emphasis></para></entry><entry colsep="1" rowsep="1"><para><emphasis role="strong">Comments</emphasis></para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>TLS/SSL Version</para></entry><entry colsep="1" rowsep="1"><para>yes</para></entry><entry colsep="1" rowsep="1"><para>only SSL v3 and TLS versions.</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Ciphers list</para></entry><entry colsep="1" rowsep="1"><para>yes</para></entry><entry colsep="1" rowsep="1"/></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>SNI extension</para></entry><entry colsep="1" rowsep="1"><para>yes</para></entry><entry colsep="1" rowsep="1"><para>SNI stands for Server Name Indication. It is the hostname of the origin server being contacted, <emphasis role="strong">not</emphasis> a URL domain name.</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Random bytes</para></entry><entry colsep="1" rowsep="1"><para>yes</para></entry><entry colsep="1" rowsep="1"/></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Compression</para></entry><entry colsep="1" rowsep="1"><para>partially</para></entry><entry colsep="1" rowsep="1"><para>Compression request flag is mimicked. If compression is requested by the client, then the compression algorithm in the mimicked message is set by Squid OpenSSL (instead of being copied from the client message). This may be OK because the only widely used algorithm is deflate. It is possible that OpenSSL does not support other compression algorithms.</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Other TLS extensions</para></entry><entry colsep="1" rowsep="1"><para>sometimes</para></entry><entry colsep="1" rowsep="1"><para>We will probably need to mimic at least some of these for splicing TLS connections to work.</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>other</para></entry><entry colsep="1" rowsep="1"><para>sometimes</para></entry><entry colsep="1" rowsep="1"><para>There are probably other fields. We should probably mimic some of them. However, blindly forwarding everything is probably a bad idea because it is likely to lead to TLS negotiation failures during bumping.</para></entry></row></tbody></tgroup></informaltable><para>Please note that for splicing to work at a future step, the Client Hello message must be sent &quot;as is&quot;, without any modifications at all. On the other hand, sending the Client Hello message &quot;as is&quot; precludes Squid from eventually bumping the connection in most real-world use cases. Thus, the decision whether to mimic the Client Hello (as staring does) or send it &quot;as is&quot; (as peeking does) is critical to Squid's ability to splice or bump the connection after the Hello message has been sent. </para></section><section><title>Limitations</title><section><title>Peeking at the server often precludes bumping</title><para>To peek at the server certificate, Squid must forward the entire Client Hello intact. If that Client Hello or the server response contains any TLS extensions that Squid does not support or understand (many do!), then Squid cannot reliably bump the connection because the other two sides of that bumped communication may start using those extensions, confusing Squid's OpenSSL in unpredictable ways. Possible solutions or workarounds (all deficient in various ways): </para><orderedlist numeration="loweralpha"><listitem><para>If bumping is more valuable/important than splicing in your environment, you should &quot;stare&quot; instead of peeking. Staring usually precludes future splicing, of course. Pick your poison. </para></listitem><listitem><para>We could add an ACL that will tell you whether those extensions and other complications are present in Client Hello. This is doable, but if that ACL usually evaluates to &quot;yes&quot;, do we really want to do all this extra development and then complicate Squid configurations? </para></listitem><listitem><para>We could teach Squid to understand more TLS extensions. This may require significant low-level work (because we would have to do what OpenSSL cannot do for us). This approach may eventually cover many popular cases, but will never cover everything and will require ongoing additions, of course. </para></listitem><listitem><para>Squid could ignore the client and/or server extensions and try to bump anyway. The exact results cannot be predicted, but will often be a total transaction failure, possibly with user-visible browser warnings. </para></listitem><listitem><para>We could teach Squid to abandon the current server connection and then bump a newly open one. This is something we do not want to do as it is likely to create an even worse operational problems with Squids being auto-blocked for opening and closing connections in vain. </para></listitem></orderedlist></section><section><title>TLS session resumption</title><para>During TLS session resumption, there is no server certificate for Squid to examine. The initial implementation does not try to find the implied server certificate by caching session information, but even with such a cache (indexed by the session ticket), there is no guarantee that the certificate will be found in the Squid cache. Moreover, session caching itself may require bumping to learn the session ticket (TLS <ulink url="https://tools.ietf.org/html/rfc5077#section-3.3">NewSessionTicket</ulink> message comes after the initial handshake)! The admin has to decide whether sessions missing server certificates are going to be spliced with little or no information available about the server. </para><para>More limitations are TBD. </para></section></section><section><title>Logging</title><section><title>%ssl::bump_mode logformat code</title><para>Squid logs a single access.log record to reflect CONNECT request handling. If you add %ssl::bump_mode to your logformat definition, its value in that record would depend on Squid version: </para><itemizedlist><listitem><para>Squid v3.5 logs the first ssl_bump decision (usually a step1 action); </para></listitem><listitem><para>Squid v4+ logs the final ssl_bump decision (usually the last used ssl_bump action). </para></listitem></itemizedlist><para>If the tunnel is bumped, then each bumped HTTP request is also logged, of course. The %ssl::bump_mode value in those records is the final SslBump decision. Naturally, that value is either &quot;bump&quot; or one of the deprecated bumping actions (i.e. &quot;server-first&quot; or &quot;client-first&quot;). This logging behavior of bumped requests is the same for all modern Squid versions. </para><para>Here are two version-specific tables that document expected %ssl::bump_mode value for CONNECT and bumped requests. </para><para>Squid v3.5 logs: </para><informaltable><tgroup cols="5"><colspec colname="col_0"/><colspec colname="col_1"/><colspec colname="col_2"/><colspec colname="col_3"/><colspec colname="col_4"/><tbody><row rowsep="1"><entry align="center" colsep="1" nameend="col_2" namest="col_0" rowsep="1"><para><emphasis role="strong">ssl_bump configuration</emphasis></para></entry><entry align="center" colsep="1" nameend="col_4" namest="col_3" rowsep="1"><para><emphasis role="strong">logged value</emphasis></para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para><emphasis role="strong">step1</emphasis></para></entry><entry colsep="1" rowsep="1"><para><emphasis role="strong">step2</emphasis></para></entry><entry colsep="1" rowsep="1"><para><emphasis role="strong">step3</emphasis></para></entry><entry colsep="1" rowsep="1"><para> <emphasis role="strong">CONNECT</emphasis> </para></entry><entry colsep="1" rowsep="1"><para> <emphasis role="strong">bumped requests</emphasis> </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>splice  </para></entry><entry colsep="1" rowsep="1"><para> -          </para></entry><entry colsep="1" rowsep="1"><para> -          </para></entry><entry colsep="1" rowsep="1"><para>  splice    </para></entry><entry colsep="1" rowsep="1"><para>   -    </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>bump </para></entry><entry colsep="1" rowsep="1"><para> -           </para></entry><entry colsep="1" rowsep="1"><para> -          </para></entry><entry colsep="1" rowsep="1"><para>  bump    </para></entry><entry colsep="1" rowsep="1"><para>  bump  </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>peek </para></entry><entry colsep="1" rowsep="1"><para> splice </para></entry><entry colsep="1" rowsep="1"><para>  -           </para></entry><entry colsep="1" rowsep="1"><para> peek      </para></entry><entry colsep="1" rowsep="1"><para> - </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>peek </para></entry><entry colsep="1" rowsep="1"><para> bump </para></entry><entry colsep="1" rowsep="1"><para> -           </para></entry><entry colsep="1" rowsep="1"><para> peek      </para></entry><entry colsep="1" rowsep="1"><para> bump   </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>peek </para></entry><entry colsep="1" rowsep="1"><para> peek </para></entry><entry colsep="1" rowsep="1"><para> splice  </para></entry><entry colsep="1" rowsep="1"><para> peek      </para></entry><entry colsep="1" rowsep="1"><para> - </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>peek </para></entry><entry colsep="1" rowsep="1"><para> stare </para></entry><entry colsep="1" rowsep="1"><para> bump </para></entry><entry colsep="1" rowsep="1"><para>  peek       </para></entry><entry colsep="1" rowsep="1"><para> bump </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>stare </para></entry><entry colsep="1" rowsep="1"><para> peek </para></entry><entry colsep="1" rowsep="1"><para> splice  </para></entry><entry colsep="1" rowsep="1"><para> stare      </para></entry><entry colsep="1" rowsep="1"><para> - </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>stare </para></entry><entry colsep="1" rowsep="1"><para> stare </para></entry><entry colsep="1" rowsep="1"><para> bump </para></entry><entry colsep="1" rowsep="1"><para>  stare       </para></entry><entry colsep="1" rowsep="1"><para> bump </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>server-first </para></entry><entry colsep="1" rowsep="1"><para> -           </para></entry><entry colsep="1" rowsep="1"><para> -          </para></entry><entry colsep="1" rowsep="1"><para>  server-first    </para></entry><entry colsep="1" rowsep="1"><para>  server-first  </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>client-first </para></entry><entry colsep="1" rowsep="1"><para> -           </para></entry><entry colsep="1" rowsep="1"><para> -          </para></entry><entry colsep="1" rowsep="1"><para>  client-first   </para></entry><entry colsep="1" rowsep="1"><para>  client-first  </para></entry></row></tbody></tgroup></informaltable><para>Squid v4+ logs: </para><informaltable><tgroup cols="5"><colspec colname="col_0"/><colspec colname="col_1"/><colspec colname="col_2"/><colspec colname="col_3"/><colspec colname="col_4"/><tbody><row rowsep="1"><entry align="center" colsep="1" nameend="col_2" namest="col_0" rowsep="1"><para><emphasis role="strong">ssl_bump configuration</emphasis></para></entry><entry align="center" colsep="1" nameend="col_4" namest="col_3" rowsep="1"><para><emphasis role="strong">logged value</emphasis></para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para><emphasis role="strong">step1</emphasis></para></entry><entry colsep="1" rowsep="1"><para><emphasis role="strong">step2</emphasis></para></entry><entry colsep="1" rowsep="1"><para><emphasis role="strong">step3</emphasis></para></entry><entry colsep="1" rowsep="1"><para> <emphasis role="strong">CONNECT</emphasis> </para></entry><entry colsep="1" rowsep="1"><para> <emphasis role="strong">bumped requests</emphasis> </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>splice </para></entry><entry colsep="1" rowsep="1"><para> -          </para></entry><entry colsep="1" rowsep="1"><para> -          </para></entry><entry colsep="1" rowsep="1"><para>  splice    </para></entry><entry colsep="1" rowsep="1"><para>   -    </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>bump </para></entry><entry colsep="1" rowsep="1"><para> -           </para></entry><entry colsep="1" rowsep="1"><para> -          </para></entry><entry colsep="1" rowsep="1"><para>  bump    </para></entry><entry colsep="1" rowsep="1"><para>  bump  </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>peek </para></entry><entry colsep="1" rowsep="1"><para> splice </para></entry><entry colsep="1" rowsep="1"><para>  -           </para></entry><entry colsep="1" rowsep="1"><para> splice      </para></entry><entry colsep="1" rowsep="1"><para> - </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>peek </para></entry><entry colsep="1" rowsep="1"><para> bump </para></entry><entry colsep="1" rowsep="1"><para> -           </para></entry><entry colsep="1" rowsep="1"><para> bump      </para></entry><entry colsep="1" rowsep="1"><para> bump   </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>peek </para></entry><entry colsep="1" rowsep="1"><para> peek </para></entry><entry colsep="1" rowsep="1"><para> splice  </para></entry><entry colsep="1" rowsep="1"><para> splice     </para></entry><entry colsep="1" rowsep="1"><para> - </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>peek </para></entry><entry colsep="1" rowsep="1"><para> stare </para></entry><entry colsep="1" rowsep="1"><para> bump </para></entry><entry colsep="1" rowsep="1"><para>  bump      </para></entry><entry colsep="1" rowsep="1"><para> bump </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>stare </para></entry><entry colsep="1" rowsep="1"><para> peek </para></entry><entry colsep="1" rowsep="1"><para> splice  </para></entry><entry colsep="1" rowsep="1"><para> splice     </para></entry><entry colsep="1" rowsep="1"><para> - </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>stare </para></entry><entry colsep="1" rowsep="1"><para> stare </para></entry><entry colsep="1" rowsep="1"><para> bump </para></entry><entry colsep="1" rowsep="1"><para>  bump       </para></entry><entry colsep="1" rowsep="1"><para> bump </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>server-first </para></entry><entry colsep="1" rowsep="1"><para> -           </para></entry><entry colsep="1" rowsep="1"><para> -          </para></entry><entry colsep="1" rowsep="1"><para>  server-first    </para></entry><entry colsep="1" rowsep="1"><para>  server-first  </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>client-first </para></entry><entry colsep="1" rowsep="1"><para> -           </para></entry><entry colsep="1" rowsep="1"><para> -          </para></entry><entry colsep="1" rowsep="1"><para>  client-first   </para></entry><entry colsep="1" rowsep="1"><para>  client-first  </para></entry></row></tbody></tgroup></informaltable><para>The difference between the two tables is in the CONNECT column: Rows with multiple SslBump steps differ. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/Features/SslPeekAndSplice/CategoryFeature#">CategoryFeature</ulink> </para></section></section></article>