<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/ServiceOverload</title><revhistory><revision><revnumber>2</revnumber><date>2011-04-26 06:41:43</date><authorinitials>AlexRousskov</authorinitials><revremark>fixed on-overload option spelling: most squid.conf suboption names use dashes and not underscores</revremark></revision><revision><revnumber>1</revnumber><date>2011-03-18 18:32:35</date><authorinitials>AlexRousskov</authorinitials><revremark>Documented Max-Connections support plans</revremark></revision></revhistory></articleinfo><section><title>Feature: Service Overload Handling (ICAP Max-Connections and more)</title><itemizedlist><listitem><para><emphasis role="strong">Goal</emphasis>: Make Squid behaviour during [adaptation] service overload configurable </para></listitem><listitem><para><emphasis role="strong">Status</emphasis>: <emphasis>In progress</emphasis>; only Phase1 work is scheduled for now </para></listitem><listitem><para><emphasis role="strong">ETA</emphasis>: May 2011 </para></listitem><listitem><para><emphasis role="strong">Version</emphasis>: Squid 3.2 </para></listitem><listitem><para><emphasis role="strong">Developer</emphasis>: <ulink url="https://wiki.squid-cache.org/Features/ServiceOverload/AlexRousskov#">AlexRousskov</ulink> <ulink url="https://wiki.squid-cache.org/Features/ServiceOverload/ChristosTsantilas#">ChristosTsantilas</ulink> </para></listitem><listitem><para><emphasis role="strong">More</emphasis>: <ulink url="http://bugs.squid-cache.org/show_bug.cgi?id=2055">bug 2055</ulink> </para></listitem></itemizedlist></section><section><title>Overview</title><para>Squid should support ICAP Max-Connections feature because it allows Squid to bypass or wait for overloaded ICAP servers instead of crashing those servers with more traffic. Similar overload handling features would be useful for some slow eCAP services, especially optional ones. </para><para>Correct handling of Max-Connections is difficult both because the interface is poorly specified (Does the maximum describe the server, the service, or the client/server pair limit? Do pipelined requests count?), because the best action is service-dependent, and because the number of available connection slots may be a shared resource from SMP Squid point of view. The first attempt to provide reliable Max-Connections support has stalled due, in part, to some of the above complexities. This project revives and extends that original effort. </para><para>The project is split in several phases to speed up feature availability and track progress  </para></section><section><title>Phase 1: ICAP basics</title><para>Implement ICAP Max-Connections feature to limit the number of connection opened by Squid to the ICAP service. If the service indicated the Max-Connections threshold in its earlier OPTIONS response and the threshold has been reached, Squid can be configured to do one of the following: </para><itemizedlist><listitem><para>Block: send and HTTP error response to the subscriber </para></listitem><listitem><para>Bypass: ignore the &quot;over-connected&quot; ICAP service </para></listitem><listitem><para>Wait: wait (in a FIFO queue) for an ICAP connection slot </para></listitem><listitem><para>Force: proceed, ignoring the Max-Connections limit </para></listitem></itemizedlist><para>The configuration is done using <ulink url="http://www.squid-cache.org/Doc/config/icap_service#">icap_service</ulink> on-overload=block|bypass|wait|force parameter.  </para><para>Currently, Squid ignores the Max-Connections limit, essentially implementing the Force behaviour. The Wait option becomes the new default behaviour for essential services and Bypass option becomes the new behaviour for optional services. </para><para>Squid warns the first time a service becomes overloaded, indicating the chosen Squid behaviour. </para><para>SMP Squid assumes that all workers share the same adaptation services and will divide service-supplied Max-Connections value by the number of workers to arrive at per-worker limit. </para><para>Developer notes: Use general adaptation service classes where possible because similar support will be added to eCAP later. Be extra careful with passing connection descriptors from the ICAP <ulink url="https://wiki.squid-cache.org/Features/ServiceOverload/ServiceRep#">ServiceRep</ulink> class to the waiting ICAP transaction because the transaction job may terminate while the message with the descriptor is pending. We probably need a custom Dialer that would return the descriptor to the <ulink url="https://wiki.squid-cache.org/Features/ServiceOverload/ServiceRep#">ServiceRep</ulink> object if the transaction is gone (or close it if both the service and the transaction are gone). </para></section><section><title>Phase 2: ICAP extras</title><para>Add support for max-conn service option to specify the Max-Connections limit regardless of whether the service responds with its own idea what the limit is. </para><para>Share the current number of service connections among the SMP workers. </para><para>Squid warns when a service becomes overloaded using some intelligent algorithm to prevent too-frequent notifications (TBD). </para></section><section><title>Phase 3: eCAP</title><para>Support eCAP Max-Connections meta header as well as max-conn and on-overload <ulink url="http://www.squid-cache.org/Doc/config/ecap_service#">ecap_service</ulink> parameters, counting each concurrent eCAP transaction as &quot;connection&quot;. </para></section><section><title>Phase 4: Load balancing</title><para>Account for service being in an <ulink url="http://www.squid-cache.org/Doc/config/adaptation_service_set#">adaptation_service_set</ulink> when making bypass-related decisions for essential services. When the first service in a set is overloaded, we should probably use the second service instead of blocking the message or bypassing the services. In other words, overload should be treated as a recoverable transaction error, <emphasis>provided</emphasis> there are more services in the <ulink url="http://www.squid-cache.org/Doc/config/adaptation_service_set#">adaptation_service_set</ulink> to try. This approach would be useful for other adaptation errors as well. </para><para>We could also add an <ulink url="http://www.squid-cache.org/Doc/config/adaptation_service_set#">adaptation_service_set</ulink> parameter to indicate whether all services in the set should be used in a round-robin, least-loaded, next-on-failure, or reshuffle-on-failure fashion. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/Features/ServiceOverload/CategoryFeature#">CategoryFeature</ulink> </para></section></article>