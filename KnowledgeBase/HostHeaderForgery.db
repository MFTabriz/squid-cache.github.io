<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>KnowledgeBase/HostHeaderForgery</title><revhistory><revision><revnumber>10</revnumber><date>2019-02-06 03:13:37</date><authorinitials>AmosJeffries</authorinitials><revremark>mention persistent connection workaround for CDN issues</revremark></revision><revision><revnumber>9</revnumber><date>2018-09-25 12:06:32</date><authorinitials>AmosJeffries</authorinitials><revremark>dns_packet_max is disabled by default contrary to the outdated text here.</revremark></revision><revision><revnumber>8</revnumber><date>2016-10-26 22:34:20</date><authorinitials>AmosJeffries</authorinitials><revremark>add mention of SSL-bump, and 8.8.8.8 issues that are becoming a FAQ</revremark></revision><revision><revnumber>7</revnumber><date>2014-07-15 06:45:49</date><authorinitials>AmosJeffries</authorinitials><revremark>mention tunnel in solutions to remote-machine capture situations</revremark></revision><revision><revnumber>6</revnumber><date>2012-07-24 01:32:12</date><authorinitials>AmosJeffries</authorinitials><revremark>mention policy routing as an extra hint on solutions.</revremark></revision><revision><revnumber>5</revnumber><date>2012-04-25 22:20:10</date><authorinitials>AmosJeffries</authorinitials><revremark>update status of DNS verify failure handling</revremark></revision><revision><revnumber>4</revnumber><date>2012-02-06 23:09:40</date><authorinitials>AmosJeffries</authorinitials><revremark>add mention of dnsmasq case</revremark></revision><revision><revnumber>3</revnumber><date>2011-12-13 21:30:20</date><authorinitials>AmosJeffries</authorinitials><revremark>some small text polishing. mention AD GPO auto-config options</revremark></revision><revision><revnumber>2</revnumber><date>2011-12-13 09:55:37</date><authorinitials>AmosJeffries</authorinitials><revremark>mention the infection case. does happen, but we cant do more than mention it.</revremark></revision><revision><revnumber>1</revnumber><date>2011-12-13 09:48:31</date><authorinitials>AmosJeffries</authorinitials><revremark>document the secruity alert cause, meaning and problems to resolve if it appears.</revremark></revision></revhistory></articleinfo><section><title>Host header forgery detected</title><para><emphasis role="strong">Symptoms</emphasis> </para><screen><![CDATA[SECURITY ALERT: Host header forgery detected on ... (local IP does not match any domain IP)
SECURITY ALERT: By user agent: ...
SECURITY ALERT: on URL: ...]]></screen><para><emphasis role="strong">Explanation</emphasis> </para><para>This is an alert generated as part of a new security feature added in <ulink url="https://wiki.squid-cache.org/KnowledgeBase/HostHeaderForgery/Squid-3.2#">Squid-3.2</ulink> to protect the network against hijacking by malicious web scripts. </para><para>As outlined in advisory <ulink url="http://www.squid-cache.org/Advisories/SQUID-2011_1.txt">SQUID-2011:1</ulink> these scripts are able to bypass browser security measures and spread infections through the network. They do so by forging the <emphasis>Host:</emphasis> headers on HTTP traffic going through an interception proxy. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> When port 443 is intercepted the client SNI value used in a generated CONNECT request can have this check performed. If that SNI name does not resolve to the destination server IP(s) this message will be output and TLS halted. </para></listitem></itemizedlist><para>To avoid this vulnerability Squid has resolved the domain name the client was supposedly contacting and determined that the IP the HTTP request was going to does not belong to that domain name. </para><itemizedlist><listitem><para>The first line of the three cites: </para><itemizedlist><listitem><para>the <emphasis role="strong">local=</emphasis> (packet destination IP) address of the domain the client was connecting to, </para></listitem><listitem><para>the <emphasis role="strong">remote=</emphasis> (packet source IP) address of the client making the connection, </para></listitem><listitem><para>and the reason for the alert. </para><itemizedlist><listitem override="none"><para>In this case it is <emphasis role="strong">&quot;local IP does not match any domain IP&quot;</emphasis>. </para></listitem><listitem override="none"><para>With <ulink url="http://www.squid-cache.org/Doc/config/host_verify_strict#">host_verify_strict</ulink> enabled there are other checks that can alert. </para></listitem></itemizedlist></listitem></itemizedlist></listitem><listitem><para>The second and third lines are self explanatory. </para></listitem></itemizedlist><para><emphasis role="strong">Fix</emphasis> </para><itemizedlist><listitem><para>use the <ulink url="https://wiki.squid-cache.org/KnowledgeBase/HostHeaderForgery/SquidFaq/ConfiguringBrowsers#Fully_Automatic_Configuration">WPAD/PAC</ulink> protocol to <emphasis role="strong">automatically configure</emphasis> the browser agents instead of intercepting traffic. </para><itemizedlist><listitem override="none"><para>OR </para></listitem></itemizedlist></listitem><listitem><para>use an Active Directory(R) GPO to <emphasis role="strong">automatically configure</emphasis> the browser agents instead of intercepting traffic. </para><itemizedlist><listitem override="none"><para>OR </para></listitem></itemizedlist></listitem><listitem><para>configure the browsers manually </para></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> all of these methods make the client browser agent aware of the proxy. This causes the browser to send a differently formatted HTTP request which avoids both the security vulnerability and checks which are displaying the alert. </para></listitem></itemizedlist><para>You may also determine from the details mentioned in the alert that the client has being hijacked or infected. In this case the proper fix may involve other actions to remove the infection which we will not cover here. </para><para><emphasis role="strong">Workaround</emphasis> </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> As of May 2012, <ulink url="https://wiki.squid-cache.org/KnowledgeBase/HostHeaderForgery/Squid-3.2#">Squid-3.2.0.18</ulink> will pass traffic which fails these validation checks to the same origin as intended by the client. But will disable caching, route error recovery and peer routing in order to do so safely. The intention in future is to support those features safely for this traffic. </para></listitem></itemizedlist><para>There really are no workarounds. Only fixes. Although there may be some things configured in the network which are causing the alert to happen when it should not. </para><para>The below details are mandatory configuration for NAT intercept or TPROXY proxies. Some of them appeared previously to be optional due to old Squid bugs which have now been fixed. </para><itemizedlist><listitem><para>ensure that NAT is performed on the same box as Squid. </para><itemizedlist><listitem override="none"><para>Squid <emphasis role="strong">MUST</emphasis> have access to the NAT systems records of what the original destination IP was. Without that information all traffic will get a 409 HTTP error and log this alert. </para></listitem><listitem override="none"><para>When operating Squid on a different machine to your router use <emphasis role="strong">Policy Routing</emphasis> or a tunnel to deliver traffic to squid. Do not perform destination NAT (DNAT, REDIRECT, Port Forwarding) on the router machine before the traffic hits Squid. </para></listitem></itemizedlist></listitem><listitem><para>ensure that the DNS servers Squid uses are the same as those used by the client(s). </para><itemizedlist><listitem override="none"><para>Certain popular CDN hosting networks use load balancing systems to determine which website IPs to return in the DNS query response. These are based on the querying DNS resolvers IP. If Squid and the client are using different resolvers there is an increased chance of different results being given. Which can lead to this alert. </para></listitem></itemizedlist></listitem><listitem><para>ensure that your DNS servers are obeying the IP rotation TTL for that domain name. </para><itemizedlist><listitem override="none"><para>Certain CDN networks load balance by rotating a set of IPs in and out of service with each TTL cycle. Storing the website IPs longer than the TTL permits is a violation of DNS protocol which produces incorrect DNS responses periodically. This alert is just one of the more visible side effects that violation causes. </para></listitem></itemizedlist></listitem><listitem><para>ensure that the commercial 8.8.8.8 service is not being used directly. </para><itemizedlist><listitem override="none"><para>This service is known to be particularly bad with rotation of lookup results on each query - much faster than even the TTL for the zones it is serving. </para></listitem><listitem override="none"><para>If you really need to use this service at all a local DNS resolver should be setup that uses it as upstream forwarder. The local network machines can use that local resolver to access DNS. </para></listitem></itemizedlist></listitem></itemizedlist><para>These are optional and may not be possible, but is useful when they work: </para><itemizedlist><listitem><para>enable EDNS (extended-DNS jumbogram) and large UDP packet support. </para><itemizedlist><listitem override="none"><para>Some popular domains are hosted on more IPs than will fit in a regular DNS query response. Their responses may appear inconsistent as IPs appear and disappear in the small set the regular DNS packet displays. </para></listitem><listitem override="none"><para><ulink url="https://wiki.squid-cache.org/KnowledgeBase/HostHeaderForgery/Squid-3.2#">Squid-3.2</ulink> can attempt to use EDNS to get larger packets with all IPs of these domains by setting the <ulink url="http://www.squid-cache.org/Doc/config/dns_packet_max#">dns_packet_max</ulink> directive. This reduces Squids chance of loosing the IP the client is connecting to but requires both your resolver to support EDNS and network to support jumbograms. </para></listitem></itemizedlist></listitem><listitem><para>restrict HTTP persistent (keep-alive) connections. </para><itemizedlist><listitem override="none"><para>Since the issue with CDNs is basically their DNS responses changing too rapidly the long lifetime of HTTP connections can exceed that change and cause false failures. </para></listitem><listitem override="none"><para>The <ulink url="http://www.squid-cache.org/Doc/config/client_lifetime#">client_lifetime</ulink> can be configured to similarly short times to reduce the occurrence of these mismatches. The default 1 day is tuned to match DNS recommended best practice TTL. </para></listitem><listitem override="none"><para>Alternatively <ulink url="http://www.squid-cache.org/Doc/config/client_persistent_connections#">client_persistent_connections</ulink> can be set to <emphasis role="strong">off</emphasis> to disable HTTP keep-alive entirely. </para></listitem></itemizedlist></listitem></itemizedlist><para><emphasis role="strong">Alternative Causes</emphasis> </para><itemizedlist><listitem><para>Interception performed at the DNS layer by the use of <emphasis>dnsmasq</emphasis> tool or other DNS trickery altering the IP destination the clients receive for a domain lookup. </para></listitem></itemizedlist><para>In these cases <ulink url="https://wiki.squid-cache.org/KnowledgeBase/HostHeaderForgery/Squid-3.2#">Squid-3.2</ulink> hijacking protection will pass the traffic through to the clients destination IP address <emphasis role="strong">without</emphasis> redirecting to any specific other IP. Additional Destination-NAT configuration is required to identify the packets and ensure they are delivered to the correct site regardless of any other details. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/KnowledgeBase/HostHeaderForgery/CategoryKnowledgeBase#">CategoryKnowledgeBase</ulink> <ulink url="https://wiki.squid-cache.org/KnowledgeBase/HostHeaderForgery/CategoryErrorMessages#">CategoryErrorMessages</ulink> </para></section></article>