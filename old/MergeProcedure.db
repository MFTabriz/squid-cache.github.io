<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>MergeProcedure</title><revhistory><revision><revnumber>31</revnumber><date>2019-07-16 14:47:44</date><authorinitials>AlexRousskov</authorinitials><revremark>Replaced the overly prescriptive &quot;rebased on top of master&quot; checklist item with a description of the desired merge properties.</revremark></revision><revision><revnumber>30</revnumber><date>2018-10-25 23:35:34</date><authorinitials>AlexRousskov</authorinitials><revremark>Documented that Anubis is currently operating in guarded_run mode -- M-cleared-for-merge is required for merging.</revremark></revision><revision><revnumber>29</revnumber><date>2018-10-25 23:30:31</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated PR instructions to reflect the current automation practice/limitations. Also detailed 65/72 character line limits.</revremark></revision><revision><revnumber>28</revnumber><date>2018-02-23 19:09:33</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated automation documentation to reflect the current status, including the introduction of the Anubis bot.</revremark></revision><revision><revnumber>27</revnumber><date>2017-09-18 20:26:48</date><authorinitials>AlexRousskov</authorinitials><revremark>Spelled out what was meant by fast-forward merging, including the default (and, hence, excessive) `--ff` git merge parameter.</revremark></revision><revision><revnumber>26</revnumber><date>2017-09-18 20:16:25</date><authorinitials>AlexRousskov</authorinitials><revremark>Added PR branch rebasing to the list of possible future features. For now, only fast-forward is safe because it means (post-review commits aside) the reviewers saw what is being committed.</revremark></revision><revision><revnumber>25</revnumber><date>2017-09-13 19:05:54</date><authorinitials>AlexRousskov</authorinitials><revremark>Fixed the location of the Automation link added in the previous commit.</revremark></revision><revision><revnumber>24</revnumber><date>2017-09-13 18:58:50</date><authorinitials>AlexRousskov</authorinitials><revremark>Added a draft description of automated master commits.</revremark></revision><revision><revnumber>23</revnumber><date>2017-08-02 17:09:23</date><authorinitials>AlexRousskov</authorinitials><revremark>Added basic PR requirements.</revremark></revision><revision><revnumber>22</revnumber><date>2017-08-02 06:41:34</date><authorinitials>AlexRousskov</authorinitials><revremark>Added links to newly created GitHints.</revremark></revision><revision><revnumber>21</revnumber><date>2017-08-02 04:51:41</date><authorinitials>AlexRousskov</authorinitials><revremark>Added &quot;git diff --check&quot; to the checklist.</revremark></revision><revision><revnumber>20</revnumber><date>2017-08-02 01:03:16</date><authorinitials>AlexRousskov</authorinitials><revremark>Moved a misplaced phrase to DeveloperResources.</revremark></revision><revision><revnumber>19</revnumber><date>2017-08-02 00:58:02</date><authorinitials>AlexRousskov</authorinitials><revremark>Removed stale Squid2 and bzr info. Streamlined to clarify the process. Needs more work; I hope to add a PR section or page soon.</revremark></revision><revision><revnumber>18</revnumber><date>2015-10-18 22:59:53</date><authorinitials>AmosJeffries</authorinitials><revremark>update now that 3.x is no longer the only release version</revremark></revision><revision><revnumber>17</revnumber><date>2015-08-27 15:54:39</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>16</revnumber><date>2013-05-13 08:22:14</date><authorinitials>AmosJeffries</authorinitials><revremark>lets simplify. just make this [PATCH] subject and either format contains the required unified diff for readability.</revremark></revision><revision><revnumber>15</revnumber><date>2012-11-05 09:28:27</date><authorinitials>AmosJeffries</authorinitials><revremark>squid-2 is now end of life. No more code submissions accepted. move the general help guidelines into their own section.</revremark></revision><revision><revnumber>14</revnumber><date>2011-11-15 10:50:05</date><authorinitials>AmosJeffries</authorinitials><revremark>highlight squid-dev in submission details.</revremark></revision><revision><revnumber>13</revnumber><date>2011-03-20 23:10:23</date><authorinitials>AmosJeffries</authorinitials><revremark>bzr page updates</revremark></revision><revision><revnumber>12</revnumber><date>2010-10-21 12:54:14</date><authorinitials>AmosJeffries</authorinitials><revremark>link updates and spelling</revremark></revision><revision><revnumber>11</revnumber><date>2010-08-22 23:03:02</date><authorinitials>AmosJeffries</authorinitials><revremark>mention the squid-3 syntax requirement details in merge procedure.</revremark></revision><revision><revnumber>10</revnumber><date>2010-05-21 19:12:04</date><authorinitials>Henrik Nordström</authorinitials></revision><revision><revnumber>9</revnumber><date>2010-02-10 23:34:26</date><authorinitials>AmosJeffries</authorinitials><revremark>tweak the srcformat info.</revremark></revision><revision><revnumber>8</revnumber><date>2009-09-09 05:17:14</date><authorinitials>AmosJeffries</authorinitials><revremark>correct code styling guidelines (sync squid-2 with dvel.* website) and some typos</revremark></revision><revision><revnumber>7</revnumber><date>2009-01-17 06:08:07</date><authorinitials>AmosJeffries</authorinitials><revremark>astyle is 1.22 not 2.*</revremark></revision><revision><revnumber>6</revnumber><date>2009-01-05 16:35:09</date><authorinitials>AmosJeffries</authorinitials><revremark>Squid-3 astyle</revremark></revision><revision><revnumber>5</revnumber><date>2008-09-04 05:36:41</date><authorinitials>AlexRousskov</authorinitials><revremark>negative vote by any core developer blocks the submission regardless of any positive votes</revremark></revision><revision><revnumber>4</revnumber><date>2008-09-03 15:22:46</date><authorinitials>AlexRousskov</authorinitials><revremark>polished formatting and restructured common and Squid3 text; these changes are not meant to change the procedure itself</revremark></revision><revision><revnumber>3</revnumber><date>2008-09-03 14:14:44</date><authorinitials>AlexRousskov</authorinitials><revremark>clarified what developers are often able to provide and which developers can do that</revremark></revision><revision><revnumber>2</revnumber><date>2008-07-19 20:28:47</date><authorinitials>Henrik Nordström</authorinitials></revision><revision><revnumber>1</revnumber><date>2008-07-18 15:46:15</date><authorinitials>AmosJeffries</authorinitials><revremark>merge procedures as they exist currently</revremark></revision></revhistory></articleinfo><section><title>Squid Merge Procedure</title><para>The requirements outlined in this document are meant to speedup acceptance of code changes while reducing rewrites, minimizing conflicts, and maintaining high quality of the committed code. If the requirements need changing, please discuss <emphasis>before</emphasis> violating them. Other than that, please use common sense and do what you think is in the best interest of Squid. </para><orderedlist numeration="arabic"><listitem><para><link linkend="Before_you_start_coding">#Before_you_start_coding</link>, make sure your future changes are welcomed and coordinate your plans with other developers. </para></listitem><listitem><para>Implement your changes while following <ulink url="https://wiki.squid-cache.org/MergeProcedure/SquidCodingGuidelines#">SquidCodingGuidelines</ulink>. Use git for version control (see <ulink url="https://wiki.squid-cache.org/MergeProcedure/GitHints#">GitHints</ulink>). </para></listitem><listitem><para>Complete <link linkend="Submission_Checklist">#Submission_Checklist</link>. </para></listitem><listitem><para>Submit a <link linkend="Pull_Request">#Pull_Request</link> on GitHub. </para></listitem><listitem><para>Monitor for automated test failures and work with reviewers to get enough <link linkend="Votes">#Votes</link>, <ulink url="https://wiki.squid-cache.org/MergeProcedure/GitHints#Update_a_previously_submitted_pull_request">updating</ulink> your pull request as needed. </para></listitem><listitem><para>Remind Core Developers to merge your eligible pull request as needed (until merging is <link linkend="Automation">automated</link>). </para></listitem><listitem><para>Enjoy your code becoming official! </para></listitem><listitem><para>Support your changes by addressing bug reports and answering related development questions. </para></listitem></orderedlist><section><title>Before you start coding</title><para>Before spending time coding, please discuss your plans on the <ulink url="http://www.squid-cache.org/Support/mailing-lists.html#squid-dev">squid-dev</ulink> mailing list so that others can </para><itemizedlist><listitem><para>confirm that the proposed feature is not already supported and is welcomed, </para></listitem><listitem><para>assist you in finding the best way to add your feature, and </para></listitem><listitem><para>prevent duplication of effort (somebody else might be working on similar changes already). </para></listitem></itemizedlist></section><section><title>Submission Checklist</title><para>If you are sure that an item does not apply to your specific situation, just skip it (at your own risk). </para><orderedlist numeration="arabic"><listitem><para>The code is ready to be published and distributed under the Squid licensing terms. </para></listitem><listitem><para>Release notes updated: <emphasis role="strong">doc/release-notes/release-X.sgml</emphasis>. Don't worry about the HTML or TXT files, they are automatically built by the maintainer. Only the SGML files need updating. </para></listitem><listitem><para>The feature sponsor is added to the SPONSORS.list file. </para></listitem><listitem><para>Copyright statement and license for newly imported code are added to the CREDITS file. </para></listitem><listitem><para>Development branch can be merged into the official master branch without conflicts and the merge result contains nothing but the proposed new code/changes. </para></listitem><listitem><para><emphasis>git diff --check upstream/master</emphasis> produces no warnings/errors and exits with zero status code. Adjust remote (i.e., &quot;upstream&quot;) to match the official repository (i.e., <emphasis>github.com:squid-cache/squid.git</emphasis>) as needed. </para></listitem><listitem><para><emphasis role="strong">./test-builds.sh</emphasis> succeeds. In the unlikely event the test fails because of the bugs in the official code, file a bug report or discuss on squid-dev. Your future pull request will get stuck if it cannot pass these basic build tests! </para></listitem></orderedlist></section><section><title>Pull Request</title><para>All commits to the official repository require a GitHub pull request (PR). This requirement ensures that all official changes are peer reviewed, and all official branches are always in working order (to the extent our testing can detect bugs, of course). It also helps reduce commit noise and backporting overheads. This section documents PR requirements. See <ulink url="https://wiki.squid-cache.org/MergeProcedure/GitHints#">GitHints</ulink> for PR submission recipes. </para><orderedlist numeration="arabic"><listitem><para>Please complete <link linkend="Submission_Checklist">#Submission_Checklist</link> before making a pull request. If you really need to post a PR earlier, then start your PR title with a &quot;[WIP] &quot; prefix (six characters indicating a &quot;work in progress&quot;) and explain why you are posting an unchecked PR in the PR comment. By default, WIP PRs are not reviewed, but they do go through CI tests. </para></listitem><listitem><para>Please use English and plain text formatting. </para></listitem><listitem><para>PR title is the first line of the anticipated commit message. Be specific but succinct. Do not exceed <ulink url="https://github.com/measurement-factory/anubis#commit-message">65</ulink> characters. </para></listitem><listitem><para>PR description is the anticipated commit message body (following the first line described above and a blank line). Avoid detailing your changes (your changes should speak for themselves!). Focus on <emphasis>why</emphasis> you changed the code and on the anticipated <emphasis>impact</emphasis> of your changes. Do not exceed <ulink url="https://github.com/measurement-factory/anubis#commit-message">72</ulink> characters per line. </para></listitem><listitem><para>By default, individual PR branch commits will be <link linkend="Automation">automatically</link> squash-merged. Thus, you may leave intermediate commits in your branch when posting your PR -- a reviewer should ignore them and review their cumulative result instead. Avoid squashing <emphasis>during</emphasis> GitHub review iterations. </para></listitem><listitem><para><emphasis>During</emphasis> GitHub review iterations, avoid merging fresh master (or target branch) changes into your PR branch unless such an update becomes necessary. After the PR is approved, your PR branch will be <link linkend="Automation">automatically</link> merged into then-current target branch. </para></listitem><listitem><para>A PR commit not authored by you should have the right author set (via <emphasis>git commit --author=...</emphasis> or equivalent). </para></listitem></orderedlist><para>If you cannot submit your changes in the form of a pull request, find a developer who can do that for you. </para></section><section><title>Votes</title><para>The first matching rule wins. A submission is automatically counted as one positive vote from the submitter. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Any developer may vote. </para><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> These rules are not yet fully enforced on GitHub but they (or their next revision) will be. For now, GitHub will not allow to merge your pull request without a core developer (other than you) approval, but all the voting rules still apply. </para></listitem><listitem><para>One negative vote by a core developer blocks the merge until resolved. </para></listitem><listitem><para>Two positive votes from core developers accept the submission (with a high priority for merging). </para></listitem><listitem><para>Any three positive votes accept the submission. </para></listitem><listitem><para>Submissions older than 10 days without negative votes are accepted. </para></listitem></itemizedlist></section><section><title>Exceptions</title><para>In truly exceptional situations (that ought to be disclosed and discussed as soon as possible): </para><orderedlist numeration="arabic"><listitem><para>Core developers may commit any changes immediately. </para></listitem><listitem><para>Within 10 days of the commit, core developers may remove any submission without prior notice or discussion. A post-factum notice (and discussion) are still expected on squid-dev. </para></listitem></orderedlist><section><title>Core Developers</title><para>The <ulink url="https://wiki.squid-cache.org/MergeProcedure/WhoWeAre#">core developers</ulink> mentioned above are experienced developers with serious long-term dedication and contribution to the Squid Project as a whole and Squid code in particular. They are usually active on squid-dev and often review submissions. Core folks have collective responsibility for the Squid Project and may use their super powers to resolve conflicts or prevent disasters. </para></section></section><section><title>Automation</title><para>The &quot;trusted master&quot; principle enforced by merge automation states that the master branch automatically gets all <emphasis>trusted</emphasis> code changes and nothing else. In this context, an trusted code change is, by definition, a non-empty sequence of git commits that satisfies the following requirements: </para><orderedlist numeration="lowerroman"><listitem><para>the sequence is (the beginning of) an <link linkend="Votes">approved</link> pull request branch on GitHub, </para></listitem><listitem><para>the sequence can be merged into master without conflicts, and </para></listitem><listitem><para>the last commit in the sequence has passed all the required QA tests. </para></listitem></orderedlist><para>Currently, PR branches are squashed when merging. Squashing significantly reduces master noise and ensures that each master commit is trusted because automated tests interrogate the to-be-committed (and usually the latest) PR branch revision. If needed, we can find a way to mark the trusted commits specially while merging unsquashed branches under exceptional circumstances. </para><para>Currently, the approval of earlier PR branch revisions automatically extends to all future branch revisions (until manually withdrawn) but that may change or even become configurable on a per-PR basis. </para><para>Automated master commits are performed by a program called <emphasis>merge bot</emphasis>. Only the merge bot has the rights to modify master. The Squid Project is currently using the <ulink url="https://github.com/measurement-factory/anubis#readme">Anubis</ulink> merge bot with the following configuration: </para><informaltable><tgroup cols="3"><colspec colname="col_0"/><colspec colname="col_1"/><colspec colname="col_2"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> <emphasis role="strong">Field</emphasis> </para></entry><entry colsep="1" rowsep="1"><para><emphasis role="strong">Description</emphasis> </para></entry><entry colsep="1" rowsep="1"><para><emphasis role="strong">Value</emphasis> </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> <emphasis>github_login</emphasis> </para></entry><entry colsep="1" rowsep="1"><para> The bot uses this GitHub user account for all GitHub communications, including target branch updates. This user needs to have write access to the repository. </para></entry><entry colsep="1" rowsep="1"><para> &quot;squid-anubis&quot; </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> <emphasis>staging_branch</emphasis> </para></entry><entry colsep="1" rowsep="1"><para> The name of the bot-maintained git branch used for testing PR changes as if they were merged into their target branch. </para></entry><entry colsep="1" rowsep="1"><para> auto </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> <emphasis>necessary_approvals</emphasis> </para></entry><entry colsep="1" rowsep="1"><para> The minimal number of core developers required for a PR to be merged. PRs with fewer votes are not merged, regardless of their age. </para></entry><entry colsep="1" rowsep="1"><para> 1 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> <emphasis>sufficient_approvals</emphasis> </para></entry><entry colsep="1" rowsep="1"><para> The minimal number of core developers required for a PR to be merged fast (i.e., without waiting for <code>config::voting_delay_max</code>) </para></entry><entry colsep="1" rowsep="1"><para> 2 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> <emphasis>voting_delay_min</emphasis> </para></entry><entry colsep="1" rowsep="1"><para> The minimum merging age of a PR. Younger PRs are not merged, regardless of the number of votes. The PR age string should comply with <ulink url="https://github.com/mike182uk/timestring">timestring</ulink> parser. </para></entry><entry colsep="1" rowsep="1"><para> &quot;2d&quot; </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> <emphasis>voting_delay_max</emphasis> </para></entry><entry colsep="1" rowsep="1"><para> The maximum merging age of a PR that has fewer than <code>config::sufficient_approvals</code> votes. The PR age string should comply with <ulink url="https://github.com/mike182uk/timestring">timestring</ulink> parser. </para></entry><entry colsep="1" rowsep="1"><para> &quot;10d&quot; </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> <emphasis>staging_checks</emphasis> </para></entry><entry colsep="1" rowsep="1"><para> The expected number of CI tests executed against the staging branch. </para></entry><entry colsep="1" rowsep="1"><para> 2 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> <emphasis>guarded_run</emphasis> </para></entry><entry colsep="1" rowsep="1"><para> Only PRs (manually) labeled <code>M-cleared-for-merge</code> are merged by Anubis. </para></entry><entry colsep="1" rowsep="1"><para> true </para></entry></row></tbody></tgroup></informaltable></section></section></article>