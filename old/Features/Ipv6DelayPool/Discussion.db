<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/Ipv6DelayPool/Discussion</title><revhistory><revision><revnumber>1</revnumber><date>2009-09-22 09:27:58</date><authorinitials>FrancescoChemolli</authorinitials></revision></revhistory></articleinfo><para>See <ulink url="https://wiki.squid-cache.org/Features/Ipv6DelayPool/Discussion/Features/Ipv6DelayPool#">Discussed Page</ulink> </para><!--rule (<hr>) is not applicable to DocBook--><para> <anchor id="C1"/> I'd like to see this as the starting point for an overhaul of the delay pools concept: there is the potential to be much more flexible than we currently are, for instance basing our design on class 5 delay pools. In the end, such a system is made up of two parts: a classification mechanism, which returns a pool key (or a set of pool keys) out of a request, and an enforcement mechanism which is part of the forwarding loop and takes care of consuming the adequate pool(s) and stalling the forwarding when needed. Assigning more than one pool to a request is IMO a good thing, as it allows a more flexible bandwidth management. The mechanism should be that ALL pools assigned to a request get consumed, and the strictest bandwidth is enforced. </para><para>-- <ulink url="https://wiki.squid-cache.org/Features/Ipv6DelayPool/Discussion/FrancescoChemolli#">FrancescoChemolli</ulink> <!--The macro DateTime caused an error and should be blacklisted. It returned the data '2009-09-22 09:27:58' which caused the docbook-formatter to choke. Please file a bug.--> </para></article>