<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/SslServerCertValidator</title><revhistory><revision><revnumber>4</revnumber><date>2014-12-01 10:14:07</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>3</revnumber><date>2014-12-01 10:10:45</date><authorinitials>AmosJeffries</authorinitials><revremark>link helper protocol details from AddonHelpers page</revremark></revision><revision><revnumber>2</revnumber><date>2013-01-20 01:24:11</date><authorinitials>AmosJeffries</authorinitials><revremark>was merged for release in 3.4 a month ago.</revremark></revision><revision><revnumber>1</revnumber><date>2012-07-04 03:41:33</date><authorinitials>AlexRousskov</authorinitials><revremark>initial feature documentation; explained why the helper should be contacted after OpenSSL validation, regardless of that validation result</revremark></revision></revhistory></articleinfo><section><title>Feature: SSL Server Certificate Validator</title><itemizedlist><listitem><para><emphasis role="strong">Goal</emphasis>: Allow external code to perform SSL/TLS server certificates checks that go beyond OpenSSL validation. </para></listitem><listitem><para><emphasis role="strong">Status</emphasis>: completed. </para></listitem><listitem><para><emphasis role="strong">Version</emphasis>: v3.4 </para></listitem><listitem><para><emphasis role="strong">Developer</emphasis>: <ulink url="https://wiki.squid-cache.org/Features/SslServerCertValidator/AlexRousskov#">AlexRousskov</ulink> </para></listitem><listitem><para><emphasis role="strong">More</emphasis>: Not needed without <ulink url="https://wiki.squid-cache.org/Features/SslServerCertValidator/Features/SslBump#">SslBump</ulink>. </para></listitem></itemizedlist></section><section><title>Motivation</title><para>Awaken by DigiNotar CA <ulink url="http://blog.mozilla.org/security/2011/08/29/fraudulent-google-com-certificate/">compromise</ulink>, various web agents now try harder to validate SSL certificates (see 2011 squid-dev thread titled &quot;<ulink url="http://comments.gmane.org/gmane.comp.web.squid.devel/16034">SSL Bump Certificate Blacklist</ulink>&quot; for a good introduction). From user point of view, an SSL bumping Squid is the ultimate authority on server certificate validation, so we need to go beyond basic OpenSSL checks as well. </para><para>Various protocols and other validation approaches are floating around: CRLs, OCSP, SCVP, DNSSEC DANE, SSL Notaries, etc. There is no apparent winner at the moment so we are in a stage of local experimentation through trial-and-error. We have seriously considered implementing one of the above mentioned approaches in Squid, but it looks like it would be better to add support for a general validation helper instead, so that admins can experiment with different approaches. </para></section><section><title>Implementation sketch</title><para>The helper will be optionally consulted after an internal OpenSSL validation we do now, regardless of that validation results. The helper will receive: </para><itemizedlist><listitem><para>the origin server certificate [chain], </para></listitem><listitem><para>the intended domain name, and </para></listitem><listitem><para>a list of OpenSSL validation errors (if any). </para></listitem></itemizedlist><para>If the helper decides to honor an OpenSSL error or report another validation error(s), the helper will return: </para><itemizedlist><listitem><para>the validation error name (see <emphasis>%err_name</emphasis> error page macro and <emphasis>%err_details</emphasis> <ulink url="http://www.squid-cache.org/Doc/config/logformat#">logformat</ulink> code), </para></listitem><listitem><para>error reason (<emphasis>%ssl_lib_error</emphasis> macro), </para></listitem><listitem><para>the offending certificate (<emphasis>%ssl_subject</emphasis> and <emphasis>%ssl_ca_name</emphasis> macros), and </para></listitem><listitem><para>the list of all other discovered errors </para></listitem></itemizedlist><para>The returned information mimics what the internal OpenSSL-based validation code collects now. Returned errors, if any, will be fed to <ulink url="http://www.squid-cache.org/Doc/config/sslproxy_cert_error#">sslproxy_cert_error</ulink>, triggering the existing SSL error processing code. </para><para>Helper responses will be cached to reduce validation performance burden (indexed by validation query parameters). </para><section><title>Helper communication protocol</title><para>This interface is similar to the SSL certificate generation interface. </para><para>Input <emphasis>line</emphasis> received from Squid: </para><screen><![CDATA[request size [kv-pairs]]]></screen><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> <emphasis>line</emphasis> refers to a logical input. <emphasis role="strong">body</emphasis> may contain \n characters so each line in this format is delimited by a 0x01 byte instead of the standard \n byte. </para><glosslist><glossentry><glossterm>request</glossterm><glossdef><itemizedlist><listitem override="none"><para>The type of action being requested. Presently the code <emphasis role="strong">cert_validate</emphasis> is the only request made. </para></listitem></itemizedlist></glossdef></glossentry><glossentry><glossterm>size</glossterm><glossdef><itemizedlist><listitem override="none"><para>Total size of the following request bytes taken by the <emphasis role="strong">key=pair</emphasis> parameters. </para></listitem></itemizedlist></glossdef></glossentry><glossentry><glossterm>kv-pairs</glossterm><glossdef><itemizedlist><listitem override="none"><para>An optional list of key=value parameters separated by new lines. Supported parameters are: </para><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> host </para></entry><entry colsep="1" rowsep="1"><para> FQDN host name or the domain </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> proto_version </para></entry><entry colsep="1" rowsep="1"><para> The SSL/TLS version </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> cipher </para></entry><entry colsep="1" rowsep="1"><para> The SSL/TLS cipher being used </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> cert_<emphasis><emphasis role="strong">ID</emphasis></emphasis> </para></entry><entry colsep="1" rowsep="1"><para> Server certificate. The ID is an index number for this certificate. This parameter exist as many as the server certificates are</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> error_name_<emphasis><emphasis role="strong">ID</emphasis></emphasis> </para></entry><entry colsep="1" rowsep="1"><para> The openSSL certificate validation error. The ID is an index number for this error </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> error_cert_<emphasis><emphasis role="strong">ID</emphasis></emphasis> </para></entry><entry colsep="1" rowsep="1"><para> The ID of the certificate which caused error_name_ID </para></entry></row></tbody></tgroup></informaltable></listitem></itemizedlist></glossdef></glossentry></glosslist><para>Example request: </para><screen><![CDATA[0 cert_validate 1519 host=dmz.example-domain.com
cert_0=-----BEGIN CERTIFICATE-----
MIID+DCCA2GgAwIBAgIJAIDcHRUxB2O4MA0GCSqGSIb3DQEBBAUAMIGvMQswCQYD
...
YpVJGt5CJuNfCcB/
-----END CERTIFICATE-----
error_name_0=X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT
error_cert_0=cert0]]></screen><para>Result line sent back to Squid: </para><screen><![CDATA[result size kv-pairs]]></screen><glosslist><glossentry><glossterm>result</glossterm><glossdef><itemizedlist><listitem override="none"><para>One of the result codes: </para><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> OK </para></entry><entry colsep="1" rowsep="1"><para> Success. Certificate validated. </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> ERR </para></entry><entry colsep="1" rowsep="1"><para> Success. Certificate not validated. </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> BH </para></entry><entry colsep="1" rowsep="1"><para> Failure. The helper encountered a problem. </para></entry></row></tbody></tgroup></informaltable></listitem></itemizedlist></glossdef></glossentry><glossentry><glossterm>size</glossterm><glossdef><itemizedlist><listitem override="none"><para>Total size of the following response bytes taken by the <emphasis role="strong">key=pair</emphasis> parameters. </para></listitem></itemizedlist></glossdef></glossentry><glossentry><glossterm>kv-pairs</glossterm><glossdef><itemizedlist><listitem override="none"><para>A list of key=value parameters separated by new lines. The supported parameters are: </para><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> cert_<emphasis><emphasis role="strong">ID</emphasis></emphasis> </para></entry><entry colsep="1" rowsep="1"><para> A certificate send from helper to squid. The <emphasis role="strong">ID</emphasis> is an index number for this certificate </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> error_name_<emphasis><emphasis role="strong">ID</emphasis></emphasis> </para></entry><entry colsep="1" rowsep="1"><para> The openSSL error name for the error <emphasis role="strong">ID</emphasis> </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> error_reason_<emphasis><emphasis role="strong">ID</emphasis></emphasis></para></entry><entry colsep="1" rowsep="1"><para> A reason for the error <emphasis role="strong">ID</emphasis></para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> error_cert_<emphasis><emphasis role="strong">ID</emphasis></emphasis> </para></entry><entry colsep="1" rowsep="1"><para> The broken certificate. It can be one of the certificates sent by helper to squid or one of those sent by squid to helper</para></entry></row></tbody></tgroup></informaltable></listitem></itemizedlist></glossdef></glossentry></glosslist><para>Example response message: </para><screen><![CDATA[ERR 1444 cert_10=-----BEGIN CERTIFICATE-----
MIIDojCCAoqgAwIBAgIQE4Y1TR0/BvLB+WUF1ZAcYjANBgkqhkiG9w0BAQUFADBr
...
398znM/jra6O1I7mT1GvFpLgXPYHDw==
-----END CERTIFICATE-----
error_name_0=X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT
error_reason_0=Checked by Cert Validator
error_cert_0=cert_10]]></screen></section><section><title>Design decision points</title><para>Why should the helper be consulted <emphasis>after</emphasis> OpenSSL validation? This allows the helper to use and possibly adjust OpenSSL-detected errors. We could add an <code>squid.conf</code> option to control consultation order, but we could not find a good use case to justify its overheads. </para><para>Why should the helper be consulted even if OpenSSL <emphasis>already declared</emphasis> a certificate invalid? OpenSSL may get it wrong. For example, its CRL might be out of date or simply not configured correctly. We could add an <code>squid.conf</code> option to control whether the helper is consulted after an OpenSSL-detected error, but since such errors should be rare, the option will likely add overheads to the common case without bringing any functionality advantages for the rare erronous case. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/Features/SslServerCertValidator/CategoryFeature#">CategoryFeature</ulink> </para></section></section></article>