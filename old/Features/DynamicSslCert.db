<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/DynamicSslCert</title><revhistory><revision><revnumber>37</revnumber><date>2020-11-27 09:47:00</date><authorinitials>FrancescoChemolli</authorinitials><revremark>fix chown code in example. Thanks to cybermeme for notifying of the issue</revremark></revision><revision><revnumber>36</revnumber><date>2018-04-28 14:13:01</date><authorinitials>AmosJeffries</authorinitials><revremark>fix typos</revremark></revision><revision><revnumber>35</revnumber><date>2018-04-28 14:11:33</date><authorinitials>AmosJeffries</authorinitials><revremark>fix broken wiki link</revremark></revision><revision><revnumber>34</revnumber><date>2016-08-09 23:56:55</date><authorinitials>AmosJeffries</authorinitials><revremark>add openssl command option for V3 CA certificate creation</revremark></revision><revision><revnumber>33</revnumber><date>2015-06-05 22:35:04</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>32</revnumber><date>2015-02-08 19:09:56</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>31</revnumber><date>2015-02-08 02:58:31</date><authorinitials>AmosJeffries</authorinitials><revremark>update the RSA and hash bits to current standard. mention config file settings relevant to OpenSSL Cert Usage extensions</revremark></revision><revision><revnumber>30</revnumber><date>2015-01-31 09:23:33</date><authorinitials>AmosJeffries</authorinitials><revremark>add GnuTLS CA cert creation commands</revremark></revision><revision><revnumber>29</revnumber><date>2015-01-31 00:01:28</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>28</revnumber><date>2015-01-31 00:00:43</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>27</revnumber><date>2015-01-30 23:42:35</date><authorinitials>AmosJeffries</authorinitials><revremark>markup CA cert creation so other configs can use it. set CA cert location to /etc/squid/ssl_cert with stricter security permissions.</revremark></revision><revision><revnumber>26</revnumber><date>2013-12-22 04:36:14</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>25</revnumber><date>2012-04-20 17:30:55</date><authorinitials>AlexRousskov</authorinitials><revremark>Added a link to BumpSslServerFirst which is addressing the documented Limitation.</revremark></revision><revision><revnumber>24</revnumber><date>2012-04-20 17:23:47</date><authorinitials>AlexRousskov</authorinitials><revremark>Changed CA certificate file name to avoid an implication that it is a server certificate.</revremark></revision><revision><revnumber>23</revnumber><date>2012-03-08 01:35:17</date><authorinitials>AlexRousskov</authorinitials><revremark>Polished scope description. SslBump purpose/motivation belongs to the SslBump feature page.</revremark></revision><revision><revnumber>22</revnumber><date>2012-03-08 00:51:36</date><authorinitials>Marcus Kool</authorinitials></revision><revision><revnumber>21</revnumber><date>2012-03-08 00:45:54</date><authorinitials>Marcus Kool</authorinitials><revremark>substitute old sslBump keyword by new ssl-bump keyword. Add one line of explanation of what sslBump is.</revremark></revision><revision><revnumber>20</revnumber><date>2012-02-15 18:42:50</date><authorinitials>AlexRousskov</authorinitials><revremark>Fixed link.</revremark></revision><revision><revnumber>19</revnumber><date>2012-02-15 18:40:49</date><authorinitials>AlexRousskov</authorinitials><revremark>Explained that self-signed certificate prepared using wiki instructions becomes a Root CA. Warned about a common industry practice of using subordinate root certificates to avoid importing.</revremark></revision><revision><revnumber>18</revnumber><date>2011-12-06 22:55:46</date><authorinitials>AmosJeffries</authorinitials><revremark>mention re-initializing the certificate database when changing CA.</revremark></revision><revision><revnumber>17</revnumber><date>2011-12-06 22:49:19</date><authorinitials>AmosJeffries</authorinitials><revremark>add to FAQ and feature supported lists.</revremark></revision><revision><revnumber>16</revnumber><date>2011-08-10 17:58:13</date><authorinitials>AlexRousskov</authorinitials><revremark>Mentioned possibility of SNI support for bumped intercepted client connections.</revremark></revision><revision><revnumber>15</revnumber><date>2011-06-22 23:44:38</date><authorinitials>AmosJeffries</authorinitials><revremark>correct the default ssl_db directory location</revremark></revision><revision><revnumber>14</revnumber><date>2010-12-01 17:04:17</date><authorinitials>AlexRousskov</authorinitials><revremark>documented that DynCert do not currently work with intercepted connections; this limitation is a FAQ</revremark></revision><revision><revnumber>13</revnumber><date>2010-11-19 13:25:14</date><authorinitials>AmosJeffries</authorinitials><revremark>branch merged into trunk</revremark></revision><revision><revnumber>12</revnumber><date>2010-06-09 14:27:59</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated status, added a link to the latest patch</revremark></revision><revision><revnumber>11</revnumber><date>2010-03-25 17:00:32</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated ETA.</revremark></revision><revision><revnumber>10</revnumber><date>2009-12-14 16:22:04</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated status, removed stale branch pointer</revremark></revision><revision><revnumber>9</revnumber><date>2009-12-03 16:09:39</date><authorinitials>AlexRousskov</authorinitials><revremark>Polished build instructions</revremark></revision><revision><revnumber>8</revnumber><date>2009-11-23 21:04:41</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated status, added usage hints; updated stale implementation discussion</revremark></revision><revision><revnumber>7</revnumber><date>2009-07-23 20:15:50</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated status</revremark></revision><revision><revnumber>6</revnumber><date>2009-02-07 20:17:00</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated status</revremark></revision><revision><revnumber>5</revnumber><date>2008-12-17 05:30:07</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated status</revremark></revision><revision><revnumber>4</revnumber><date>2008-11-14 15:55:54</date><authorinitials>AlexRousskov</authorinitials><revremark>added a link to lp branch</revremark></revision><revision><revnumber>3</revnumber><date>2008-11-14 15:53:48</date><authorinitials>AlexRousskov</authorinitials><revremark>Updated status</revremark></revision><revision><revnumber>2</revnumber><date>2008-10-30 14:57:50</date><authorinitials>AlexRousskov</authorinitials></revision><revision><revnumber>1</revnumber><date>2008-09-15 19:17:03</date><authorinitials>AlexRousskov</authorinitials><revremark>initial documentation</revremark></revision></revhistory></articleinfo><section><title>Dynamic SSL Certificate Generation</title><itemizedlist><listitem><para><emphasis role="strong">Goal</emphasis>: Reduce the number of &quot;certificate mismatch&quot; browser warnings when impersonating a site using the <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Features/SslBump#">SslBump</ulink> feature </para></listitem><listitem><para><emphasis role="strong">Status</emphasis>: complete </para></listitem><listitem><para><emphasis role="strong">Version</emphasis>: 3.2 </para></listitem><listitem><para><emphasis role="strong">Developer</emphasis>: <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/AlexRousskov#">AlexRousskov</ulink>, Andrew Balabohin </para></listitem><listitem><para><emphasis role="strong">More</emphasis>: Squid v3.1 (r9820) <ulink url="http://www.squid-cache.org/mail-archive/squid-dev/201003/0201.html">implementation</ulink>; requires <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Features/SslBump#">SslBump</ulink> </para></listitem></itemizedlist></section><section><title>Details</title><para>This page describes dynamic SSL certificate generation feature for <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Features/SslBump#">SslBump</ulink> environments. </para><section><title>Motivation</title><para><ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Features/SslBump#">SslBump</ulink> users know how many certificate warnings a single complex site (using dedicated image, style, and/or advertisement servers for embedded content) can generate. The warnings are legitimate and are caused by Squid-provided site certificate. Two things may be wrong with that certificate: </para><orderedlist numeration="upperalpha"><listitem><para>Squid certificate is not signed by a trusted authority. </para></listitem><listitem><para>Squid certificate name does not match the site domain name. </para></listitem></orderedlist><para>Squid can do nothing about (A), but in most targeted environments, users will trust the &quot;man in the middle&quot; authority and install the corresponding root certificate. </para><para>To avoid mismatch (B), the DynamicSslCert feature concentrates on generating site certificates that match the requested site domain name. Please note that the browser site name check does not really add much security in an SslBump environment where the user already trusts the &quot;man in the middle&quot;. The check only adds warnings and creates page rendering problems in browsers that try to reduce the number of warnings by blocking some embedded content. </para></section><section><title>Usage hints</title><para>Here is the quick guide of how to make Dynamic SSL Certificate Generation feature work with your Squid installation. This simple document does not include all possible configurations. </para><section><title>Build Squid</title><para>Add SSL Bump and certificate generation options when building Squid. Dynamic generation of SSL certificates is not enabled by default: </para><itemizedlist><listitem override="none"><screen><![CDATA[./configure --enable-ssl --enable-ssl-crtd ...
make all
make install]]></screen></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> NOTE: <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Squid-3.5#">Squid-3.5</ulink> requires <emphasis role="strong">--with-openssl</emphasis> instead of --enable-ssl </para></listitem></itemizedlist></section><section><title>Create Self-Signed Root CA Certificate</title><para>This certificate will be used by Squid to generate dynamic certificates for proxied sites. For all practical purposes, this certificate becomes a <ulink url="http://en.wikipedia.org/wiki/Root_certificate">Root certificate</ulink> and you become a Root CA. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-error.png" width="16"/></imageobject><textobject><phrase>{X}</phrase></textobject></inlinemediaobject> If your certificate is compromised, any user trusting (knowingly or otherwise) your Root certificate may not be able to detect man-in-the-middle attacks orchestrated by others. </para></listitem></itemizedlist><para>Create directory to store the certificate (the exact location is not important): </para><itemizedlist><listitem override="none"><screen><![CDATA[cd /etc/squid
mkdir ssl_cert
chown squid:squid ssl_cert
chmod 700 ssl_cert
cd ssl_cert]]></screen></listitem></itemizedlist><para>Create self-signed certificate (you will be asked to provide information that will be incorporated into your certificate): </para><itemizedlist><listitem><para>using OpenSSL: </para></listitem><listitem override="none"><screen><![CDATA[openssl req -new -newkey rsa:2048 -sha256 -days 365 -nodes -x509 -extensions v3_ca -keyout myCA.pem  -out myCA.pem]]></screen></listitem><listitem><para>using GnuTLS certtool: </para></listitem><listitem override="none"><screen><![CDATA[certtool --generate-privkey --outfile ca-key.pem
]]><![CDATA[
certtool --generate-self-signed --load-privkey ca-key.pem --outfile myCA.pem]]></screen></listitem></itemizedlist><para>You can also specify some required additional CA's attributes in openssl.cfg to reduce the questions: </para><screen><![CDATA[[ v3_req ]
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
[ v3_ca ]
keyUsage = cRLSign, keyCertSign]]></screen></section><section><title>Create a DER-encoded certificate to import into users' browsers</title><itemizedlist><listitem override="none"><screen><![CDATA[openssl x509 -in myCA.pem -outform DER -out myCA.der]]></screen></listitem></itemizedlist><para>The result file (<emphasis role="strong">myCA.der</emphasis>) should be imported into the 'Authorities' section of users' browsers. </para><para>For example, in FireFox: </para><orderedlist numeration="arabic"><listitem><para>Open 'Preferences' </para></listitem><listitem><para>Go to the 'Advanced' section, 'Encryption' tab </para></listitem><listitem><para>Press the 'View Certificates' button and go to the 'Authorities' tab </para></listitem><listitem><para>Press the 'Import' button, select the .der file that was created previously and pres 'OK' </para></listitem></orderedlist><para>In theory, you must either import your root certificate into browsers or instruct users on how to do that. Unfortunately, it is apparently a <ulink url="https://www.computerworld.com/s/article/9224082/Trustwave_admits_issuing_man_in_the_middle_digital_certificate_Mozilla_debates_punishment">common practice</ulink> among well-known Root CAs to issue <emphasis>subordinate</emphasis> root certificates. If you have obtained such a subordinate root certificate from a Root CA already trusted by your users, you do not need to import your certificate into browsers. However, going down this path may result in <ulink url="https://bugzilla.mozilla.org/show_bug.cgi?id=724929">removal of the well-known Root CA certificate</ulink> from browsers around the world. Such a removal will make your local SslBump-based infrastructure inoperable until you import your certificate, but that may only be the beginning of your troubles. Will the affected Root CA go after <emphasis>you</emphasis> to recoup their world-wide damages? What will your users do when they learn that you have been decrypting their traffic without their consent? </para></section><section><title>Configure Squid</title><para>Open squid.conf for editing, find <ulink url="http://www.squid-cache.org/Doc/config/http_port#">http_port</ulink> option and add certificate-related options. For example: </para><itemizedlist><listitem override="none"><screen><![CDATA[http_port 3128 ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB cert=/etc/squid/ssl_cert/myCA.pem]]></screen></listitem></itemizedlist><para>You will also need to add <ulink url="http://www.squid-cache.org/Doc/config/ssl_bump#">ssl_bump</ulink> rules enabling HTTPS decryption. see <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Features/SslPeekAndSplice#">peek-n-splice</ulink> for newer <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Squid-3.5#">Squid-3.5</ulink> or later details. see <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Features/SslBump#">SSL-Bump</ulink> for older <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Squid-3.3#">Squid-3.3</ulink> or <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Squid-3.4#">Squid-3.4</ulink> details. </para><para>Additional configuration options (see below) can be added to squid.conf to tune the certificate helper configuration, but they are not required. If omitted, default values will be used. </para><itemizedlist><listitem override="none"><screen><![CDATA[sslcrtd_program /usr/local/squid/libexec/ssl_crtd -s /usr/local/squid/var/lib/ssl_db -M 4MB
sslcrtd_children 5]]></screen></listitem></itemizedlist><para><ulink url="http://www.squid-cache.org/Doc/config/sslcrtd_program#">sslcrtd_program</ulink> default disk cache size is 4MB ('-M 4MB' above), which in general will be enough to store ~1000 certificates. If Squid is used in busy environments this may need to be increased, as well as the number of <ulink url="http://www.squid-cache.org/Doc/config/sslcrtd_children#">sslcrtd_children</ulink>. </para><para>Prepare directory for caching certificates: </para><itemizedlist><listitem override="none"><screen><![CDATA[/usr/local/squid/libexec/ssl_crtd -c -s /usr/local/squid/var/lib/ssl_db]]></screen></listitem></itemizedlist><para>The above command initializes the SSL database for storing cached certificates. More information about the ssl_ctrld program can be found in <code>/usr/local/squid/libexec/ssl_crtd -h</code> output. </para><para>If you run a multi-Squid environment with several certificates caching locations, you may also need to use the '-n' option when initializing ssl_db. The option sets the initial database serial number, which is incremented and used in each new certificate. To avoid serial number overlapping among instances, the initial serial may need to be set manually. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> NOTE: whenever you change the signing CA be sure to erase and re-initialize the certificate database. It contains signed certificates and clients may experience connectivity problems when the signing CA no longer matches your configured CA. </para></listitem></itemizedlist><para>After the SSL DB is initialized, make the directory writable for the squid user such as 'nobody': </para><itemizedlist><listitem override="none"><screen><![CDATA[chown -R nobody /usr/local/squid/var/lib/ssl_db]]></screen></listitem></itemizedlist><para>Now you can start Squid, modify users' browsers settings to use the proxy (if needed), and make sure that the signing certificate is correctly imported into the browsers. If everything was done correctly, Squid should process HTTPS sites without any warnings. </para></section></section><section><title>Limitations</title><itemizedlist><listitem override="none"><informaltable><tgroup cols="1"><colspec colname="col_0"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> <emphasis role="strong">This section is outdated. The below limitations were resolved in <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Squid-3.5#">Squid-3.5</ulink> by <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Features/SslPeekAndSplice#">peek-n-splice</ulink> </emphasis> </para></entry></row></tbody></tgroup></informaltable></listitem></itemizedlist><section><title>No dynamically generated certificates for intercepted connections</title><para>While <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Features/SslBump#">SslBump</ulink> itself works fine in transparent redirection environments (e.g. those using WCCP or iptables), dynamic certificate generation does not: To generate the certificate dynamically, Squid must know the server domain name. That information is not available at the time the HTTPS client TCP connection is intercepted and bumped. Currently, you cannot use dynamic certificate generation for transparent connections until <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Features/BumpSslServerFirst#">bump-server-first</ulink> is supported. </para><para>We believe it is technically possible to implement dynamic certificate generation for transparent connections. Doing so requires turning Squid transaction handling steps upside down, so that the secure connection with the server is established <emphasis>before</emphasis> the secure connection with the client. The implementation will be difficult, but it will allow Squid to get the server name from the server certificate and use that to generate a fake server certificate to give to the client. This connect-to-server-first approach can even support SNI. See <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/Features/BumpSslServerFirst#">bump-server-first</ulink> feature for more information. </para><para>While this limitation is significant, it does not render the feature useless, of course. Many corporate deployments do not intercept connections but need to generate certificates. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/Features/DynamicSslCert/CategoryFeature#">CategoryFeature</ulink> </para></section></section></section></article>