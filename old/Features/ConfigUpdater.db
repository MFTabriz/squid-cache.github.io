<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/ConfigUpdater</title><revhistory><revision><revnumber>5</revnumber><date>2015-09-21 05:43:29</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>4</revnumber><date>2012-10-30 00:57:42</date><authorinitials>AmosJeffries</authorinitials><revremark>There are more updates to this in 3.3</revremark></revision><revision><revnumber>3</revnumber><date>2012-06-08 08:24:01</date><authorinitials>AmosJeffries</authorinitials><revremark>update for started and add laundry list of other issues to fix.</revremark></revision><revision><revnumber>2</revnumber><date>2009-04-09 02:06:17</date><authorinitials>AmosJeffries</authorinitials><revremark>link to HotConf these are related</revremark></revision><revision><revnumber>1</revnumber><date>2009-04-08 00:36:04</date><authorinitials>AmosJeffries</authorinitials><revremark>created</revremark></revision></revhistory></articleinfo><section><title>Feature: squid.conf migration</title><itemizedlist><listitem><para><emphasis role="strong">Goal</emphasis>: To easing the upgrade path for squid.conf between squid versions. </para></listitem><listitem><para><emphasis role="strong">Status</emphasis>: started </para></listitem><listitem><para><emphasis role="strong">ETA</emphasis>: unknown </para></listitem><listitem><para><emphasis role="strong">Version</emphasis>:  </para></listitem><listitem><para><emphasis role="strong">Developer</emphasis>: <ulink url="https://wiki.squid-cache.org/Features/ConfigUpdater/AmosJeffries#">AmosJeffries</ulink> </para></listitem></itemizedlist></section><section><title>Details</title><para>Currently users are left with manually reading the release notes or online help with every upgrade between versions of Squid. When upgrading across several versions for example Squid 2.5 to 3.1 there are multiple sets of detailed release notes to wade through. </para><para>Starting with <ulink url="https://wiki.squid-cache.org/Features/ConfigUpdater/Squid-3.2#">Squid-3.2</ulink> obsolete config directives are identified and upgrade instructions are printed out when <code>squid -k parse</code> command is used, or to cache.log if Squid is simply run without checking the config validity. </para><para>This project will have the side effect of also replacing all the obscure <emphasis role="strong">Bungled Config</emphasis> messages with meaningful instructions for both what is wrong with the config line and what to do about it. </para><section><title>Issues</title><itemizedlist><listitem><para>sometimes old single tag options have been replaced by more complex options nested within another setting. For example the multiple Squid-2.5 httpd_* options migrate to sub-options on a specific <ulink url="http://www.squid-cache.org/Doc/config/http_port#">http_port</ulink> tag. </para></listitem><listitem><para>squid developers are continually improving squid.conf settings and the systems behind them so the system must be easily updated. </para></listitem><listitem><para>might be done best as a built-in parser processing path. However the current parsers (plural!) and configure startup/restart/reload/shutdown pathways all need to be re-worked properly before this can be built-in. see <ulink url="https://wiki.squid-cache.org/Features/ConfigUpdater/Features/HotConf#">Features/HotConf</ulink> for details on that work. </para></listitem><listitem><para>some options are supported, but not by the current set of ./configure options. The parser #if-#endif need to be re-worked to provide instructions about when directive to re-build squid with to get the option. </para><itemizedlist><listitem override="none"><para>NP: this is already done for <emphasis>directives</emphasis> but not for sub-options where the directive is parsed (ie  <emphasis> <ulink url="http://www.squid-cache.org/Doc/config/http_port#">http_port</ulink> ... sslcacert=/foo </emphasis> still comes up as bungled config). </para></listitem></itemizedlist></listitem></itemizedlist></section><section><title>Malformed Config Logic</title><para>Some common mistakes users have trouble with are caused by wrong config being &quot;accepted&quot; by Squid but not having the effect they expected. Having the parser detect these cases and warn about them would be good. </para><itemizedlist><listitem><para>access lists being configured when the relevant protocol has no ports open (ie <ulink url="http://www.squid-cache.org/Doc/config/icp_port#">icp_port</ulink> disabled and <ulink url="http://www.squid-cache.org/Doc/config/icp_access#">icp_access</ulink> configured) </para></listitem><listitem><para>&quot;!all&quot; token being used on a one-line fast ACL (ie <code> access_log /var/log/access.log squid !all</code>) preventing the line from ever matching. It is useful trick on multi-line access lists, but on single-lines not so much. </para></listitem><listitem><para>allow/deny all being used halfway down a multi-line access list. In complex configs these are not always obvious. The parser could scan for and report these cases when found. </para></listitem><listitem><para>detecting the more general case where a line is testing an ACL which can never produce a match. Neither line two or three below can ever match. <emphasis role="strong">But</emphasis> line 2 can be there in order to trigger ACL &quot;something&quot;. </para></listitem></itemizedlist><screen><![CDATA[ http_access allow foo
 http_access deny something foo
 http_access deny foo somethingelse]]></screen><itemizedlist><listitem><para>a series of allow or deny lines followed by the same with just <emphasis role="strong">all</emphasis>. NP: Might be wanted if the foo and bar ACL have certain types (external, auth, ident, dst, srcdomain) but for most types they will be useless config. </para></listitem></itemizedlist><screen><![CDATA[http_access deny foo
http_access deny bar
http_access deny all]]></screen><itemizedlist><listitem><para>delay pool with <ulink url="http://www.squid-cache.org/Doc/config/delay_parameters#">delay_parameters</ulink> limits all set to <emphasis>-1/-1</emphasis>. </para></listitem><listitem><para>directives configured to their default value. Not a major problem, but one worth logging to help simplify large config files. Particularly now that modern Squid have a default for each directive. </para></listitem></itemizedlist><section><title>Solutions</title><para>Stuff done in <ulink url="https://wiki.squid-cache.org/Features/ConfigUpdater/Squid-3.2#">Squid-3.2</ulink>: </para><itemizedlist><listitem><para>obsolete directives are kept in <code>cf.data.pre</code> with the type <emphasis role="strong">obsolete</emphasis>. The documentation comments are printed as upgrade instructions on how to handle the directives (remove or change). </para></listitem><listitem><para>alias directives are detected. A deprecation message is printed out instructing that the config be changed to the new name. </para></listitem><listitem><para>directives for components missing from the build are ignored. A message indicating the missing component or build requirements is logged. </para></listitem></itemizedlist><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/Features/ConfigUpdater/CategoryFeature#">CategoryFeature</ulink> </para></section></section></section></article>