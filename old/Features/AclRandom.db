<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/AclRandom</title><revhistory><revision><revnumber>10</revnumber><date>2011-06-09 01:20:46</date><authorinitials>AmosJeffries</authorinitials><revremark>example #2 shodul have 1:3, 1:2, 1:1 ratio of split for even spread.</revremark></revision><revision><revnumber>9</revnumber><date>2011-01-27 16:31:33</date><authorinitials>AmosJeffries</authorinitials><revremark>typos. float starting with . are not matched by the parser.</revremark></revision><revision><revnumber>8</revnumber><date>2010-10-28 11:48:26</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>7</revnumber><date>2010-10-28 07:54:00</date><authorinitials>FrancescoChemolli</authorinitials><revremark>Fixed text for features-listing</revremark></revision><revision><revnumber>6</revnumber><date>2010-08-01 12:29:40</date><authorinitials>AmosJeffries</authorinitials><revremark>another example: balance between peers and direct.</revremark></revision><revision><revnumber>5</revnumber><date>2010-01-18 09:18:45</date><authorinitials>AmosJeffries</authorinitials><revremark>add configuratino examples and correct some typos</revremark></revision><revision><revnumber>4</revnumber><date>2009-11-01 07:57:04</date><authorinitials>AmosJeffries</authorinitials><revremark>done.</revremark></revision><revision><revnumber>3</revnumber><date>2009-10-31 13:50:34</date><authorinitials>AmosJeffries</authorinitials><revremark>typo</revremark></revision><revision><revnumber>2</revnumber><date>2009-10-31 13:42:38</date><authorinitials>AmosJeffries</authorinitials><revremark>taking this on. its been wanted for some time and has several uses.</revremark></revision><revision><revnumber>1</revnumber><date>2009-09-21 15:35:50</date><authorinitials>FrancescoChemolli</authorinitials><revremark>added</revremark></revision></revhistory></articleinfo><section><title>Feature: ACL type &quot;Random&quot;</title><itemizedlist><listitem><para><emphasis role="strong">Goal</emphasis>: Implement an ACL type which would match randomly with a given probability. </para></listitem><listitem><para><emphasis role="strong">Status</emphasis>: complete </para></listitem><listitem><para><emphasis role="strong">Version</emphasis>: 3.2 </para></listitem><listitem><para><emphasis role="strong">Developer</emphasis>: <ulink url="https://wiki.squid-cache.org/Features/AclRandom/AmosJeffries#">AmosJeffries</ulink> </para></listitem><listitem><para><emphasis role="strong">More</emphasis>: Bug <ulink url="https://bugs.squid-cache.org/show_bug.cgi?id=1239#">1239</ulink> </para></listitem></itemizedlist></section><section><title>Details</title><para>The ACL of type &quot;random&quot; will accept a single value in one of three formats: </para><itemizedlist><listitem><para>A:B - matching randomly an average A requests for every B non-matches. A and B may not be zero. </para></listitem><listitem><para>A/B - matching randomly an average of A requests out of total B requests. A and B may not be zero. </para></listitem><listitem><para>0.NNNN - matching randomly any given request with 0.NNNN probability. </para><itemizedlist><listitem override="none"><para>Range is between zero to one, excluding zero and one themselves. </para></listitem></itemizedlist></listitem></itemizedlist><para>All three of these matches are proportional. The first two formats are provided for ease of configuration. They are converted to a decimal threshold as shown in the third format. </para><para>Every test, a new random number is generated and checked against the stored value. If the random number is within the threshold range of possibility the ACL will match. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> To debug this ACL use <ulink url="http://www.squid-cache.org/Doc/config/debug_options#">debug_options</ulink> 28,3 and watch for lines beginning with &quot;ACL Random&quot;. </para></listitem></itemizedlist></section><section><title>Use Cases</title><section><title>Uplink Load Balancing</title><para>When used within <ulink url="http://www.squid-cache.org/Doc/config/tcp_outgoing_address#">tcp_outgoing_address</ulink> or <ulink url="http://www.squid-cache.org/Doc/config/tcp_outgoing_tos#">tcp_outgoing_tos</ulink> selection this ACL permits load to be roughly split between multiple links based on their relative capacity. </para><para>This requires some additional configuration at the operating system level to ensure that the address or TOS values assigned are routed out the appropriate uplink. It is no use doing this in Squid if all traffic ends up going out the default anyway. </para><itemizedlist><listitem><para><emphasis role="strong"> Example 1:</emphasis> Split two uplinks roughly 50% of traffic each: </para></listitem></itemizedlist><screen><![CDATA[acl fiftyPercent random 0.5
]]><![CDATA[
# a random 50% go here
tcp_outgoing_address 192.0.2.1 fiftyPercent
]]><![CDATA[
# the rest go here
tcp_outgoing_address 192.0.2.2
]]><![CDATA[
# NP: operating system required to route packets from 192.0.2.1 and 192.0.2.2 out separate uplinks.]]></screen><itemizedlist><listitem><para><emphasis role="strong">Example 2:</emphasis> Split traffic one third to each of three peers. </para></listitem></itemizedlist><screen><![CDATA[acl third random 1/3
acl half random 1/2
]]><![CDATA[
# 33% traffic goes here
cache_peer_access peerOne allow third
cache_peer_access peerOne deny all
]]><![CDATA[
# 33% traffic goes here
cache_peer_access peerTwo allow half
cache_peer_access peerTwo deny all
]]><![CDATA[
# remaining traffic goes here
cache_peer_access peerOne allow all]]></screen><itemizedlist><listitem><para><emphasis role="strong">Example 3:</emphasis> Split traffic one third to each of two peers and direct. </para></listitem></itemizedlist><screen><![CDATA[acl third random 1/3
acl half random 1/2
]]><![CDATA[
# 33% traffic goes direct
always_direct allow third
]]><![CDATA[
# 33% traffic goes here (half of what did not go direct already)
cache_peer_access peerOne deny half
cache_peer_access peerOne allow all
]]><![CDATA[
# remaining traffic goes here
cache_peer_access peerTwo allow all
]]><![CDATA[
# NP: if both peers are down DIRECT will be used as a backup.]]></screen></section><section><title>Log sampling of traffic</title><para>When used in <ulink url="http://www.squid-cache.org/Doc/config/access_log#">access_log</ulink> directives this ACL permits a small random proportion of requests to be logged. Rather than all traffic or some only matching fixed criteria. </para><itemizedlist><listitem><para><emphasis role="strong">Example 1:</emphasis> Log one line randomly out of every 100 requests. </para></listitem></itemizedlist><screen><![CDATA[# log 1, skip 99
acl logSmallSample random 1:99
]]><![CDATA[
# small log 1 of every 100 requests...
access_log /var/log/squid/access-sample.log squid logSmallSample
]]><![CDATA[
# old style complete log
access_log /var/log/squid/access.log squid]]></screen></section><section><title>Others?</title><para>Other use cases may be possible. If you know of one not already covered here we are interested to know what it is. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/Features/AclRandom/CategoryFeature#">CategoryFeature</ulink> </para></section></section></article>