<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/MultiCast</title><revhistory><revision><revnumber>7</revnumber><date>2013-07-22 00:37:09</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>6</revnumber><date>2010-04-08 03:59:07</date><authorinitials>AmosJeffries</authorinitials><revremark>format updates.</revremark></revision><revision><revnumber>5</revnumber><date>2010-04-08 03:45:13</date><authorinitials>AmosJeffries</authorinitials><revremark>this is a feature</revremark></revision><revision><revnumber>4</revnumber><date>2008-05-18 19:38:56</date><authorinitials>localhost</authorinitials><revremark>converted to 1.6 markup</revremark></revision><revision><revnumber>3</revnumber><date>2006-08-29 12:13:08</date><authorinitials>kinkie</authorinitials><revremark>integration fixups</revremark></revision><revision><revnumber>2</revnumber><date>2006-03-03 09:25:24</date><authorinitials>kinkie</authorinitials></revision><revision><revnumber>1</revnumber><date>2006-01-25 21:30:56</date><authorinitials>kinkie</authorinitials></revision></revhistory></articleinfo><section><title>Feature: Multicast ICP cluster</title><itemizedlist><listitem><para><emphasis role="strong">Goal</emphasis>: Bandwidth and delay reduction using multicast to optimize cluster traffic. </para></listitem><listitem><para><emphasis role="strong">Status</emphasis>: completed. </para></listitem><listitem><para><emphasis role="strong">Version</emphasis>: 2.x </para></listitem></itemizedlist></section><section><title>Details</title><para>Multicast is essentially the ability to send one IP packet to multiple receivers.  Multicast is often used for audio and video conferencing systems. </para><section><title>How do I know if my network has multicast?</title><para>One way is to ask someone who manages your network.  If your network manager doesn't know, or looks at you funny, then you probably don't have it. </para><para>Another way is to use the <emphasis>mtrace</emphasis> program, which can be found on the  <ulink url="ftp://parcftp.xerox.com/pub/net-research/ipmulti/">Xerox PARC FTP site</ulink>.  Mtrace is similar to traceroute.  It will tell you about the multicast path between your site and another.  For example: </para><screen><![CDATA[> mtrace mbone.ucar.edu
mtrace: WARNING: no multicast group specified, so no statistics printed
Mtrace from 128.117.64.29 to 192.172.226.25 via group 224.2.0.1
Querying full reverse path... * switching to hop-by-hop:
0  oceana-ether.nlanr.net (192.172.226.25)
-1  avidya-ether.nlanr.net (192.172.226.57)  DVMRP  thresh^ 1
-2  mbone.sdsc.edu (198.17.46.39)  DVMRP  thresh^ 1
-3  * nccosc-mbone.dren.net (138.18.5.224)  DVMRP  thresh^ 48
-4  * * FIXW-MBONE.NSN.NASA.GOV (192.203.230.243)  PIM/Special  thresh^ 64
-5  dec3800-2-fddi-0.SanFrancisco.mci.net (204.70.158.61)  DVMRP  thresh^ 64
-6  dec3800-2-fddi-0.Denver.mci.net (204.70.152.61)  DVMRP  thresh^ 1
-7  mbone.ucar.edu (192.52.106.7)  DVMRP  thresh^ 64
-8  mbone.ucar.edu (128.117.64.29)
Round trip time 196 ms; total ttl of 68 required.]]></screen></section><section><title>Should I be using Multicast ICP?</title><para>Short answer: <emphasis role="underline">No, probably not</emphasis>. </para><para>Reasons why you SHOULD use Multicast: </para><itemizedlist><listitem><para>It reduces the number of times Squid calls <emphasis>sendto()</emphasis> to put a UDP packet onto the network. </para></listitem><listitem><para>Its trendy and cool to use Multicast. </para></listitem></itemizedlist><para>Reasons why you SHOULD NOT use Multicast: </para><itemizedlist><listitem><para>Multicast tunnels/configurations/infrastructure are often unstable. You may lose multicast connectivity but still have unicast connectivity. </para></listitem><listitem><para>Multicast does not simplify your Squid configuration file.  Every trusted neighbor cache must still be specified. </para></listitem><listitem><para>Multicast does not reduce the number of ICP replies being sent around. It does reduce the number of ICP queries sent, but not the number of replies. </para></listitem><listitem><para>Multicast exposes your cache to some privacy issues.  There are no special emissions required to join a multicast group.  Anyone may join your group and eavesdrop on ICP query messages.  However, the scope of your multicast traffic can be controlled such that it does not exceed certain boundaries. </para></listitem></itemizedlist><para>We only recommend people to use Multicast ICP over network infrastructure which they have close control over.  In other words, only use Multicast over your local area network, or maybe your wide area network if you are an ISP.  We think it is probably a bad idea to use Multicast ICP over congested links or commodity backbones. </para></section></section><section><title>Configuration - Sending</title><para>To configure Squid to send ICP queries to a Multicast address, you need to create another neighbour cache entry specified as <emphasis>multicast</emphasis>. For example: </para><screen><![CDATA[cache_peer 224.9.9.9 multicast 0 3130 ttl=64]]></screen><itemizedlist><listitem><para>224.9.9.9 is a sample multicast group address. </para></listitem><listitem><para><emphasis>multicast</emphasis> indicates that this is a special type of neighbour. </para></listitem><listitem><para>The HTTP-port argument is ignored for multicast peers, but the ICP-port (3130) is very important. </para></listitem><listitem><para>The final argument, <emphasis>ttl=64</emphasis> specifies the multicast TTL value for queries sent to this </para></listitem></itemizedlist><para>address. </para><itemizedlist><listitem><para>It is probably a good idea to increment the minimum TTL by a few to provide a margin for error and changing conditions. </para></listitem></itemizedlist><para>You must also specify which of your neighbours will respond to your multicast queries, since it would be a bad idea to implicitly trust any ICP reply from an unknown address. </para><itemizedlist><listitem><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note that ICP replies are sent back to <emphasis>unicast</emphasis> addresses; they are NOT multicast, so Squid has no indication whether a reply is from a regular query or a multicast </para></listitem></itemizedlist><para>query. </para><para>To configure your multicast group neighbours, use the <ulink url="http://www.squid-cache.org/Doc/config/cache_peer#">cache_peer</ulink> directive and the <emphasis>multicast-responder</emphasis> option: </para><screen><![CDATA[cache_peer cache1 sibling 3128 3130 multicast-responder
cache_peer cache2 sibling 3128 3130 multicast-responder]]></screen><para>Here all fields are relevant. </para><itemizedlist><listitem><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/attention.png" width="15"/></imageobject><textobject><phrase>&lt;!&gt;</phrase></textobject></inlinemediaobject> The ICP port number (3130) must be the same as in the <ulink url="http://www.squid-cache.org/Doc/config/cache_peer#">cache_peer</ulink> line defining the multicast peer above. </para></listitem><listitem><para>The third field must either be <emphasis>parent</emphasis> or <emphasis>sibling</emphasis> to indicate how Squid should treat replies. </para></listitem><listitem><para>With the <emphasis>multicast-responder</emphasis> flag set for a peer, Squid will NOT send ICP queries to it directly (i.e. unicast) but will send to the special <emphasis role="strong">multicast</emphasis> group <ulink url="http://www.squid-cache.org/Doc/config/cache_peer#">cache_peer</ulink> instead. </para></listitem></itemizedlist><section><title>How do I know what Multicast TTL to use?</title><para>The Multicast TTL (which is specified on the <ulink url="http://www.squid-cache.org/Doc/config/cache_peer#">cache_peer</ulink> line of your multicast group) determines how &quot;far&quot; your ICP queries will go.  In the Mbone, there is a certain TTL threshold defined for each network interface or tunnel.  A multicast packet's TTL must be larger than the defined TTL for that packet to be forwarded across that link. </para><para>For example, the <emphasis>mrouted</emphasis> manual page recommends: </para><screen><![CDATA[32   for links that separate sites within an organization.
64   for links that separate communities or organizations, and are attached to the Internet MBONE.
128  for links that separate continents on the MBONE.]]></screen><para>A good way to determine the TTL you need is to run <emphasis>mtrace</emphasis> as shown above and look at the last line.  It will show you the minimum TTL required to reach the other host. </para><para>If you set you TTL too high, then your ICP messages may travel &quot;too far&quot; and will be subject to eavesdropping by others. If you're only using multicast on your LAN, as we suggest, then your TTL will be quite small, for example <emphasis>ttl=4</emphasis>. </para></section></section><section><title>Configuration - Receive and respond</title><para>You must tell Squid to join a multicast group address with the <ulink url="http://www.squid-cache.org/Doc/config/mcast_groups#">mcast_groups</ulink> directive. </para><para>For example: </para><screen><![CDATA[mcast_groups  224.9.9.9]]></screen><para>Of course, all members of your Multicast ICP group will need to use the exact same multicast group address. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/attention.png" width="15"/></imageobject><textobject><phrase>&lt;!&gt;</phrase></textobject></inlinemediaobject> Choose a multicast group address with care!  If two organizations </para></listitem></itemizedlist><para>happen to choose the same multicast address, then they may find that their groups &quot;overlap&quot; at some point.  This will be especially true if one of the querying caches uses a large TTL value.  There are two ways to reduce the risk of group overlap: </para><itemizedlist><listitem><para>Use a unique group address </para></listitem><listitem><para>Limit the scope of multicast messages with TTLs or administrative scoping. </para></listitem></itemizedlist><para>Using a unique address is a good idea, but not without some potential problems.  If you choose an address randomly, how do you know that someone else will not also randomly choose the same address?  NLANR has been assigned a block of multicast addresses by the IANA for use in situations such as this.  If you would like to be assigned one of these addresses, please  <ulink url="mailto:nlanr-cache@nlanr.net">write to us</ulink>.  However, note that NLANR or IANA have no authority to prevent anyone from using an address assigned to you. </para><para>Limiting the scope of your multicast messages is probably a better solution.  They can be limited with the TTL value discussed above, or with some newer techniques known as administratively scoped addresses.  Here you can configure well-defined boundaries for the traffic to a specific address.  The RFC <ulink url="https://tools.ietf.org/rfc/rfc2365#">2365</ulink> (Administratively Scoped IP Multicast) describes this. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/Features/MultiCast/CategoryFeature#">CategoryFeature</ulink> Back to the <ulink url="https://wiki.squid-cache.org/Features/MultiCast/SquidFaq#">SquidFaq</ulink> </para></section></article>