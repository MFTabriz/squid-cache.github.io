<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/BearerAuthentication</title><revhistory><revision><revnumber>5</revnumber><date>2018-07-26 02:50:34</date><authorinitials>AmosJeffries</authorinitials><revremark>some typo scorrections and update info about fake helper (no longer provided).</revremark></revision><revision><revnumber>4</revnumber><date>2014-05-29 05:54:47</date><authorinitials>AmosJeffries</authorinitials><revremark>update for current status now that the module works</revremark></revision><revision><revnumber>3</revnumber><date>2013-11-13 20:11:11</date><authorinitials>AmosJeffries</authorinitials><revremark>better to fix our wiki-links than remove them. that way all the unrelated wikilinks get fixed at the same time.</revremark></revision><revision><revnumber>2</revnumber><date>2013-11-13 13:32:59</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>FIXED: The RFC autourl  is not directing to the RFC, is it a bug in the wiki?</revremark></revision><revision><revnumber>1</revnumber><date>2013-02-20 10:40:42</date><authorinitials>AmosJeffries</authorinitials><revremark>create</revremark></revision></revhistory></articleinfo><section><title>Feature: Bearer Authentication</title><itemizedlist><listitem><para><emphasis role="strong">Goal</emphasis>: Make Squid support Bearer authentication protocol. </para></listitem><listitem><para><emphasis role="strong">Status</emphasis>: nearly completed. </para></listitem><listitem><para><emphasis role="strong">Version</emphasis>: 3.5+ </para></listitem><listitem><para><emphasis role="strong">Developer</emphasis>: <ulink url="https://wiki.squid-cache.org/Features/BearerAuthentication/AmosJeffries#">AmosJeffries</ulink> </para></listitem><listitem><para><emphasis role="strong">More Info</emphasis>: RFC <ulink url="https://tools.ietf.org/rfc/rfc6750#">6750</ulink> </para></listitem></itemizedlist></section><section><title>Details</title><para><emphasis role="strong">Bearer</emphasis> is an HTTP authentication scheme created as part of OAuth 2.0 in RFC <ulink url="https://tools.ietf.org/rfc/rfc6750#">6750</ulink>. A client wanting to access to a service is required to locate a control server trusted by that service, authenticate itself against the control server and retrieve an opaque token. The opaque token is delivered using HTTP authentication headers to the HTTP service which grants or denies access. </para><section><title>Security Implications</title><para>Bearer tokens can be used in two ways which vary a great deal in their security. </para><para>The token is opaque to all but the OAuth control server issuing it and the validator verifying it. They do not necessarily contain client credentials in any form, when they do the encryption method used to encode details into them is arbitrarily secure. </para><para>However, the token itself may in certain configurations be intercepted and replayed (re-used) by a third-party to gain access to the service for a short time. When the token is generated as a random blob or as a container for encrypted user identity they are equivalent to Digest nonce. </para><orderedlist numeration="arabic"><listitem><para>In secure form the Bearer tokens are treated as nonce and may not be replayed. Nonce tokens are: </para><itemizedlist><listitem><para>more secure than NTLM and traditional (user:pass) Basic authentication, </para></listitem><listitem><para>more secure than weak forms of Digest authentication, </para></listitem><listitem><para>roughly matching enhanced (user:encoded-token) Basic authentication, </para></listitem><listitem><para>roughly matching (or less) secure as strong forms of Digest authentication with true nonce behaviour, </para></listitem><listitem><para>less secure than Negotiate authentication. </para></listitem></itemizedlist></listitem><listitem><para>In weak form Bearer tokens replay is permitted during a TTL. The level of risk grows with longer TTL. Bearer using a short but non-zero TTL is: </para><itemizedlist><listitem><para>more secure than traditional (user:pass) Basic authentication, </para></listitem><listitem><para>roughly matching NTLM authentication and weak forms of Digest authentication, </para></listitem><listitem><para>roughly matching enhanced (user:encoded-token) Basic authentication, </para></listitem><listitem><para>less secure than strong forms of Digest authentication with true nonce behaviour, </para></listitem><listitem><para>less secure than Negotiate authentication. </para></listitem></itemizedlist></listitem></orderedlist><para><emphasis role="strong">NOTE:</emphasis> <inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-error.png" width="16"/></imageobject><textobject><phrase>{X}</phrase></textobject></inlinemediaobject> <emphasis role="strong">Due to the weak security offered by OAuth it is advised to only use Bearer authentication over HTTPS connections</emphasis> </para><para>See <ulink url="https://wiki.squid-cache.org/Features/BearerAuthentication/Features/Authentication#">Features/Authentication</ulink> for details on other schemes supported by Squid and how authentication in general works. </para></section><section><title>How does it work in Squid?</title><para>Bearer is at the one time both very simple and somewhat complex. Squids part has been kept intentionally minor and simple to improve the overall system security. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> squid only implements the <emphasis role="strong">Autorization header field</emphasis> Bearer tokens. Alternative <emphasis>Form field</emphasis> method is not compatible with HTTP proxy needs and method <emphasis>URI query parameter</emphasis> is too insecure to be trustworthy. </para></listitem></itemizedlist><para>The authentication helper is left to perform all of the risky security encryption and validation processes. Any credentials or tokens presented by the client are passed untouched to the helper. The helper supplies Squid with user name for logging and TTL values for managing the token on later requests. </para><para>The protocol lines used to do this are described below. </para><para>Input line received from Squid: </para><screen><![CDATA[channel-ID b64token [key-extras]]]></screen><glosslist><glossentry><glossterm>channel-ID</glossterm><glossdef><itemizedlist><listitem override="none"><para>This is an ID for the line to support concurrent lookups. </para></listitem></itemizedlist></glossdef></glossentry><glossentry><glossterm>b64token</glossterm><glossdef><itemizedlist><listitem override="none"><para>The opaque credentials token field sent by the client in HTTP headers. </para></listitem></itemizedlist></glossdef></glossentry><glossentry><glossterm>key-extras</glossterm><glossdef><itemizedlist><listitem override="none"><para>Additional parameters passed to the helper which may be configured with <ulink url="http://www.squid-cache.org/Doc/config/auth_param#">auth_param</ulink> <emphasis>key_extras</emphasis> parameter. Only available in <ulink url="https://wiki.squid-cache.org/Features/BearerAuthentication/Squid-3.5#">Squid-3.5</ulink> and later. </para></listitem></itemizedlist></glossdef></glossentry></glosslist><para>Result line sent back to Squid: </para><screen><![CDATA[channel-ID result [kv-pair]]]></screen><glosslist><glossentry><glossterm>channel-ID</glossterm><glossdef><itemizedlist><listitem override="none"><para>The concurrency <emphasis role="strong">channel-ID</emphasis> as received. It must be sent back to Squid unchanged as the first entry on the line. </para></listitem></itemizedlist></glossdef></glossentry><glossentry><glossterm>result</glossterm><glossdef><itemizedlist><listitem override="none"><para>One of the result codes: </para><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> OK </para></entry><entry colsep="1" rowsep="1"><para> Success. Valid credentials. </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> ERR </para></entry><entry colsep="1" rowsep="1"><para> Success. Invalid credentials. </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> BH </para></entry><entry colsep="1" rowsep="1"><para> Failure. The helper encountered a problem. </para></entry></row></tbody></tgroup></informaltable></listitem></itemizedlist></glossdef></glossentry><glossentry><glossterm>kv-pair</glossterm><glossdef><itemizedlist><listitem override="none"><para>One or more key=value pairs. The key names reserved on this interface: </para><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> clt_conn_tag=... </para></entry><entry colsep="1" rowsep="1"><para> Tag the client TCP connection (<ulink url="https://wiki.squid-cache.org/Features/BearerAuthentication/Squid-3.5#">Squid-3.5</ulink>) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> group=... </para></entry><entry colsep="1" rowsep="1"><para> reserved </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> message=... </para></entry><entry colsep="1" rowsep="1"><para> A message string that Squid can display on an error page. </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> tag=... </para></entry><entry colsep="1" rowsep="1"><para> reserved </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> ttl=... </para></entry><entry colsep="1" rowsep="1"><para> The duration for which this result may be used.</para><para>If not provided the token treated as already stale (a nonce). </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> user=... </para></entry><entry colsep="1" rowsep="1"><para> The label to be used by Squid for this client request as <emphasis role="strong">&quot;username&quot;</emphasis>. </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> *_=... </para></entry><entry colsep="1" rowsep="1"><para> Key names ending in (_) are reserved for local administrators use. </para></entry></row></tbody></tgroup></informaltable></listitem></itemizedlist></glossdef></glossentry></glosslist></section><section><title>What do I need to do to support Bearer on Squid?</title><para>Just like any other security protocol, support for Bearer in Squid is made up by two parts: </para><orderedlist numeration="arabic"><listitem><para>code within Squid to talk to the client. </para><itemizedlist><listitem><para><ulink url="https://wiki.squid-cache.org/Features/BearerAuthentication/Squid-3.5#">Squid-3.5</ulink> or later built with <code>--enable-auth-bearer</code> </para></listitem></itemizedlist></listitem><listitem><para>one or more authentication helpers which perform the grunt work. </para><itemizedlist><listitem><para>As yet there are no helpers freely available. </para></listitem></itemizedlist></listitem></orderedlist><para>Of course the protocol needs to be enabled in the configuration file for everything to work. </para><screen><![CDATA[auth_param bearer program /usr/sbin/your-helper
auth_param bearer realm Squid
auth_param bearer scope proxy]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> All other bearer parameters are optional. see <ulink url="http://www.squid-cache.org/Doc/config/auth_param#">auth_param</ulink> BEARER section for more details. </para></listitem></itemizedlist></section><section><title>Testing</title><section><title>Testing Squid</title><para>Send any URL with a GET or any other request via Squid. </para><screen><![CDATA[squidclient http://example.com/]]></screen><para>Squid when setup correctly replies with <emphasis>Proxy-Authenticate: Bearer</emphasis> like shown: </para><screen><![CDATA[HTTP/1.1 407 Proxy Authentication Required
Server: squid/3.5.0
Date: Thu, 12 Jan 2012 03:41:33 GMT
Proxy-Authenticate: Bearer realm="Squid", scope="proxy"
...]]></screen><para>Sending any URL with a GET and Bearer token via Squid. </para><screen><![CDATA[squidclient -H 'Proxy-Authorization: Bearer abcd\n' http://example.com/]]></screen><para>Squid when setup correctly replies with the requested resource like shown: </para><screen><![CDATA[HTTP/1.1 200 OK
...]]></screen></section></section><section><title>Troubleshooting</title><para>Bearer authentication is debugged with level 29. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/Features/BearerAuthentication/CategoryFeature#">CategoryFeature</ulink> </para></section></section></article>