<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/HTTP2</title><revhistory><revision><revnumber>13</revnumber><date>2018-05-20 07:41:22</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>12</revnumber><date>2018-05-20 07:35:05</date><authorinitials>AmosJeffries</authorinitials><revremark>GnuTLS additions in Squid-4 makes some progress on these requirements.</revremark></revision><revision><revnumber>11</revnumber><date>2015-06-20 03:32:08</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>10</revnumber><date>2015-05-14 23:59:20</date><authorinitials>AmosJeffries</authorinitials><revremark>RFCs are now available</revremark></revision><revision><revnumber>9</revnumber><date>2014-10-14 05:02:15</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>8</revnumber><date>2014-07-31 08:15:34</date><authorinitials>AmosJeffries</authorinitials><revremark>but the timetable</revremark></revision><revision><revnumber>7</revnumber><date>2013-11-26 21:08:58</date><authorinitials>AmosJeffries</authorinitials><revremark>status update</revremark></revision><revision><revnumber>6</revnumber><date>2013-07-30 10:20:26</date><authorinitials>AmosJeffries</authorinitials><revremark>list difference from SPDY to HTTP/2 since we talk about it being loosly based on SPDY. add more steps necessary for consideration when implementing HTTP/2 in Squid</revremark></revision><revision><revnumber>5</revnumber><date>2013-07-30 10:05:25</date><authorinitials>AmosJeffries</authorinitials><revremark>update for HTTP/2 details now that the specification is out and we are in squid-3.5 development</revremark></revision><revision><revnumber>4</revnumber><date>2013-07-30 09:25:56</date><authorinitials>AmosJeffries</authorinitials><revremark>IETF chose SPDY as the basis of HTTP/2.0</revremark></revision><revision><revnumber>3</revnumber><date>2012-09-26 23:45:43</date><authorinitials>AmosJeffries</authorinitials><revremark>update to mention HTTP/2 relationship to SPDY</revremark></revision><revision><revnumber>2</revnumber><date>2012-03-19 04:08:51</date><authorinitials>AmosJeffries</authorinitials><revremark>update issues that need to be resolved for SPDY</revremark></revision><revision><revnumber>1</revnumber><date>2011-12-23 02:23:09</date><authorinitials>AmosJeffries</authorinitials><revremark>created</revremark></revision></revhistory></articleinfo><section><title>Feature: HTTP/2.0 support</title><itemizedlist><listitem><para><emphasis role="strong">Goal</emphasis>: HTTP/2.0 compliance. </para></listitem></itemizedlist><itemizedlist><listitem><para><emphasis role="strong">Status</emphasis>: Design groundwork underway. </para></listitem><listitem><para><emphasis role="strong">ETA</emphasis>: unknown </para></listitem><listitem><para><emphasis role="strong">Version</emphasis>: TBC </para></listitem><listitem><para><emphasis role="strong">Developer</emphasis>: <ulink url="https://wiki.squid-cache.org/Features/HTTP2/AmosJeffries#">AmosJeffries</ulink> </para></listitem><listitem><para><emphasis role="strong">More</emphasis>: </para><itemizedlist><listitem><para>RFC <ulink url="https://tools.ietf.org/rfc/rfc7540#">7540</ulink> </para></listitem><listitem><para>RFC <ulink url="https://tools.ietf.org/rfc/rfc7541#">7541</ulink> </para></listitem><listitem><para>Bug <ulink url="https://bugs.squid-cache.org/show_bug.cgi?id=4248#">4248</ulink> </para></listitem><listitem><para><ulink url="http://http2.github.io/"/> </para></listitem></itemizedlist></listitem></itemizedlist></section><section><title>Details</title><para>HTTP/2 was designed loosly based on the SPDY experimental protocol for framing HTTP requests in a multiplexed fashion over SSL connections. Avoiding the pipeline issues which HTTP has with its dependency on stateful &quot;\r\n&quot; frame boundaries. </para><para>HTTP/2 has some major differences however: </para><itemizedlist><listitem><para>HTTP/2 contains a magic connection prefix for automated protocol switching with HTTP/1.1 and HTTP/1.0 </para></listitem><listitem><para>Frame layout has been significantly optimized for HTTP messaging outside web browser usages. </para></listitem><listitem><para>TLS is optional </para></listitem><listitem><para>Compression algorithms have been rewoven specifically for HTTP performance and to avoid security vulnerabilities in gzip compression as used in SPDY. </para></listitem><listitem><para>Several frame types and flow control semantics from SPDY have been dropped or optimized away. </para></listitem></itemizedlist><para>Squid will support HTTP/2 formally and only support desired SPDY features which are IEFT approved and placed in the HTTP/2 specification. </para><section><title>Traffic from client to Squid</title><para>To implement a HTTP/2 receiving port in Squid we need to: </para><itemizedlist><listitem><para>duplicate the HTTP client connection manager (ConnStateData, ClientSocketContext, ClientHttpRequest class triplet) </para><itemizedlist><listitem><para>update the new version to decapsulate/encapsulate with HTTP/2 framing on read/write </para></listitem><listitem><para>update the new manager to handle multiple parallel data pipeline channels (&quot;streams&quot; in the HTTP/2 grammar). At present there is only one active context and an idle pipeline queue. HTTP/2 requires a minimum of 100 in parallel. </para></listitem></itemizedlist></listitem><listitem><para>avoiding direct reads or writes to the client socket </para><itemizedlist><listitem><para>mostly done as of <ulink url="https://wiki.squid-cache.org/Features/HTTP2/Squid-3.2#">Squid-3.2</ulink> but there are a few exceptions, ie tunnel and ssl-bump. </para></listitem></itemizedlist></listitem><listitem><para>implement HTTP/2 header parser and packer routines </para></listitem><listitem><para>implement the HTTP/2 compression (HPACK) algorithms: </para><itemizedlist><listitem><para>string-literal encoder </para></listitem><listitem><para>Huffman encoder/decoder </para></listitem></itemizedlist></listitem><listitem><para>implement Upgrade header support: </para><itemizedlist><listitem><para>for h2c label </para></listitem><listitem><para>for TLS/* </para></listitem></itemizedlist></listitem><listitem><para>implement TLS for systems where OpenSSL is not available. </para><itemizedlist><listitem><para>Including ALPN extension support </para></listitem><listitem><para>Possibly also NPN extension support </para></listitem><listitem><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-error.png" width="16"/></imageobject><textobject><phrase>{X}</phrase></textobject></inlinemediaobject> this is only required because browser manufacturers refuse once again to implement proxy support for HTTP/2 over port 80 or 3128. Notable exception being MSIE which is being friendly to proxies. </para></listitem></itemizedlist></listitem></itemizedlist><section><title>Progress</title><para><emphasis role="strong">Completed: (in <ulink url="https://wiki.squid-cache.org/Features/HTTP2/Squid-3.5#">Squid-3.5</ulink>)</emphasis> </para><itemizedlist><listitem><para>Solve Bug <ulink url="https://bugs.squid-cache.org/show_bug.cgi?id=3371#">3371</ulink> interference with our ability to detect and relay HTTP/2 transparently </para></listitem></itemizedlist><para><emphasis role="strong">Completed: (in <ulink url="https://wiki.squid-cache.org/Features/HTTP2/Squid-4#">Squid-4</ulink>)</emphasis> </para><itemizedlist><listitem><para>Implement TLS support using GnuTLS for systems where OpenSSL is not available. </para></listitem></itemizedlist><para><emphasis role="strong">Completed: (in http2 branch)</emphasis> </para><itemizedlist><listitem><para>Detection of the HTTP/2 connection header magic octets in port 80 intercepted traffic </para></listitem><listitem><para>Implement branching points for HTTP/2 frame parser </para></listitem></itemizedlist><para><emphasis role="strong">Underway:</emphasis> </para><itemizedlist><listitem><para>Parsing HTTP/2 request </para></listitem></itemizedlist></section></section><section><title>Traffic from Squid to servers</title><para>To implement a server gateway in Squid we need to: </para><itemizedlist><listitem><para>add a new HTTP/2.0 server connection pool similar but different to the HTTP/1.1 idle pconn pool </para><itemizedlist><listitem><para>without timeout closures on the pool (timeout is relative to last use, not pooling time). </para></listitem><listitem><para>holding the connections which are actively in use but can be shared with more server requests. </para></listitem><listitem><para>pooling at the level of stateful connection manager object (<ulink url="https://wiki.squid-cache.org/Features/HTTP2/HttpStateData#">HttpStateData</ulink> presently) not stateless TCP connection details (Comm::Connection) </para></listitem></itemizedlist></listitem><listitem><para>duplicate the HTTP server connection manager </para><itemizedlist><listitem><para>update the new version to encapsulate/decapsulate with HTTP/2 framing on read/write </para></listitem><listitem><para>update the new manager to handle multiple parallel data pipelines. </para></listitem></itemizedlist></listitem><listitem><para>implement mandatory transport layer compression / decompression. </para><itemizedlist><listitem><para>shared with receiving socket code, but different state tables </para></listitem></itemizedlist></listitem><listitem><para>implement HTTP/2 header parser and packer routines </para><itemizedlist><listitem><para>shared with receiving socket code </para></listitem></itemizedlist></listitem><listitem><para>implement TLS for systems where OpenSSL is not available. </para><itemizedlist><listitem><para>including ALPN extension support </para></listitem></itemizedlist></listitem></itemizedlist><section><title>Progress</title><itemizedlist><listitem override="none"><para><emphasis role="strong">None yet.</emphasis> </para></listitem></itemizedlist><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/Features/HTTP2/CategoryFeature#">CategoryFeature</ulink> </para></section></section></section></article>