<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>Features/Optimizations</title><revhistory><revision><revnumber>8</revnumber><date>2015-09-21 04:39:23</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>7</revnumber><date>2009-03-08 10:23:42</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>6</revnumber><date>2008-05-18 19:38:56</date><authorinitials>localhost</authorinitials><revremark>converted to 1.6 markup</revremark></revision><revision><revnumber>5</revnumber><date>2008-02-19 00:02:01</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>4</revnumber><date>2008-01-14 14:29:11</date><authorinitials>AdrianChadd</authorinitials></revision></revhistory></articleinfo><section><title>Feature: Optimizations</title><itemizedlist><listitem><para><emphasis role="strong">Goal</emphasis>: Waste less CPU </para></listitem><listitem><para><emphasis role="strong">Status</emphasis>: in progress </para></listitem><listitem><para><emphasis role="strong">ETA</emphasis>: unknown </para></listitem><listitem><para><emphasis role="strong">Developer</emphasis>: <ulink url="https://wiki.squid-cache.org/Features/Optimizations/AdrianChadd#">AdrianChadd</ulink>, <ulink url="https://wiki.squid-cache.org/Features/Optimizations/AmosJeffries#">AmosJeffries</ulink>, everyone </para></listitem><listitem><para><emphasis role="strong">More</emphasis>: Current work at <ulink url="http://devel.squid-cache.org/changesets/squid/s27_adri.html"/> </para></listitem></itemizedlist><section><title>Optimize the easy parts</title><para>Get rid of some unneeded duplicate copying of information </para><itemizedlist><listitem><para>There's a copy from the http.c server-side code (via storeAppend()) to the client_side.c client-side code (via storeClientCopy()) - in progress in s27_adri branch. </para></listitem><listitem><para>There's a copy out from the store memory into the client-side layer (via storeClientCopy()) - integrated into Squid-2.HEAD </para></listitem></itemizedlist></section><section><title>Optimise the hard parts</title><itemizedlist><listitem><para>The data copying involved in parsing http headers, URLs, and such from requests and replies - in progress in s27_adri branch. </para></listitem></itemizedlist></section><section><title>Implement scatter-gather IO</title><para>Avoid having to use the packer to pack HTTP request/reply and headers into a buffer before write()ing to the network-side; this won't really be worth it until the copies are eliminated (above) and the <ulink url="https://wiki.squid-cache.org/Features/Optimizations/Features/StackableIO#">stackable IO model</ulink> is in. </para><para>Use readv() to read into partially-filled large buffers - the goal is to use larger buffers in the store memory if applicable to hold an entire object in on memory allocation. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/Features/Optimizations/CategoryFeature#">CategoryFeature</ulink> </para></section></section></article>