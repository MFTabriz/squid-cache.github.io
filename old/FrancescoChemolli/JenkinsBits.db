<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>FrancescoChemolli/JenkinsBits</title><revhistory><revision><revnumber>7</revnumber><date>2017-01-02 14:36:47</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>6</revnumber><date>2015-11-11 16:34:20</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>5</revnumber><date>2015-11-11 16:32:34</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>4</revnumber><date>2015-11-11 16:20:06</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>3</revnumber><date>2015-11-11 16:19:35</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>2</revnumber><date>2015-11-11 16:18:49</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>1</revnumber><date>2015-11-11 16:16:58</date><authorinitials>FrancescoChemolli</authorinitials></revision></revhistory></articleinfo><para><ulink url="https://wiki.squid-cache.org/FrancescoChemolli/JenkinsBits/TableOfContents#">TableOfContents</ulink> </para><section><title>Accessing Slaves</title><screen><![CDATA[for (String slave: Jenkins.instance.getSlaves()) {
    println slave;
}]]></screen></section><section><title>iltering slaves by label substring</title><screen><![CDATA[def result = []
for (Slave slave: Jenkins.instance.getSlaves()) {
//    println slave.getNodeName() + ": " + slave.getNodeDescription() + ", " + slave.getLabelString();
    if ( slave.getLabelString().contains("farm")) {
      result += slave.getNodeName()
    }
}
println result.toString()]]></screen></section><section><title>Code for filtering</title><para>In <ulink url="https://github.com/jenkinsci/matrix-project-plugin/blob/master/src/main/java/hudson/matrix/FilterScript.java"/> </para><para> Need to add binding for slaves accessor in apply at about line 88. </para></section><section><title>possible alternate approach</title><para>define a parameter plugin which sets a parameter as the node name, or NODE_NAME env variable. </para><para> See for instance <ulink url="https://wiki.jenkins-ci.org/display/JENKINS/Global+Variable+String+Parameter+Plugin"/> </para></section><section><title>pipelines</title><para>attempt 1: </para><screen><![CDATA[stage "test-build"
node('farm') {
    // clean workspace
    step([$class: 'WsCleanup'])
    // setup env..
    // copy the deployment unit from another Job
    step ([$class: 'CopyArtifact',
          projectName: '5-prepare-tarball',
          filter: 'squid-*-r*.tar.gz']);
    step ([$class: 'CopyArtifact',
          projectName: '5-prepare-tarball',
          filter: 'test-suite-r*.tar.gz']);
    sh "tar xfz squid-*-r*.tar.gz"
    squiddir = sh(returnStdout: true, script: 'ls squid-* | grep -v gz$').trim()
    dir(squiddir) {
        sh 'tar xfz ../test-suite-r*.tar.gz'
        sh './test-builds.sh --verbose --aggressively-use-config-cache'
    }
}]]></screen><!--rule (<hr>) is not applicable to DocBook--><para> Discuss this page using the &quot;Discussion&quot; link in the main menu </para></section></article>