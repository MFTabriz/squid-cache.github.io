<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>SquidFaq/OrderIsImportant</title><revhistory><revision><revnumber>5</revnumber><date>2016-07-31 11:33:45</date><authorinitials>AmosJeffries</authorinitials><revremark>move callout sequence to architecture page</revremark></revision><revision><revnumber>4</revnumber><date>2016-07-31 02:09:40</date><authorinitials>AlexRousskov</authorinitials><revremark>Documented processing order in the callout sequence. Could not find a better place to put that user-level info. TODO: Document what happens before/after.</revremark></revision><revision><revnumber>3</revnumber><date>2011-02-11 01:46:34</date><authorinitials>AmosJeffries</authorinitials><revremark>more auth order complexity.</revremark></revision><revision><revnumber>2</revnumber><date>2009-12-18 01:30:21</date><authorinitials>AmosJeffries</authorinitials><revremark>some typos</revremark></revision><revision><revnumber>1</revnumber><date>2009-12-18 01:20:22</date><authorinitials>AmosJeffries</authorinitials><revremark>rough hack we can point newbies at. probably needs adding to.</revremark></revision></revhistory></articleinfo><section><title>Order Is Important!</title><itemizedlist><listitem><para>Order is important </para></listitem><listitem><para>Order is critical </para></listitem></itemizedlist><para>This is by far the No. 1 most repeated comment in the Squid user help lists.  Squid with its traditional &quot;Bungled config line&quot; is not exactly helpful either when it comes to notifying what the problem is. </para><section><title>Why?</title><para>Squid process its config file from the top down. Left to right. Creating internal configuration information as it goes. </para><para>To create a metaphor there is a simple everyday procedure one performs to enter a locked door. Unlock, open, and walk through. Get them out of order. For example &quot;unlock, walk, open&quot; is possibly valid. But will result in some pain when actually done that way and will not result in the opener being on the far side of the doorway. </para><para>Similarly there are groups of actions which are individually configured in squid.conf. But the order determines what the final situation is. </para></section><section><title>Modes</title><para>Modern Squid run multiple <emphasis>modes</emphasis> of operation simultaneously. </para><para>The order of <ulink url="http://www.squid-cache.org/Doc/config/http_access#">http_access</ulink> forward-proxy and reverse-proxy configuration options determines whether a reverse-proxy website visitor is able to reach the website. They also determine whether that website is able to perform HTTPS, AJAX, JSON, or other advanced website operations beyond plain simple HTTP. see the relevant <ulink url="https://wiki.squid-cache.org/SquidFaq/OrderIsImportant/SquidFaq/ReverseProxy#How_do_I_set_it_up.3F">SquidFaq/ReverseProxy#How_do_I_set_it_up.3F</ulink> example for specific order details. Generally the reverse-proxy needs to be first. </para><para>The order and placement of <ulink url="http://www.squid-cache.org/Doc/config/debug_options#">debug_options</ulink> directives determines what debug levels are run during processing of the configuration file and later during normal running of Squid. </para></section><section><title>Authentication</title><para>The order of <ulink url="http://www.squid-cache.org/Doc/config/auth_param#">auth_param</ulink> <emphasis role="strong">program</emphasis> directives determines how Squid reports the authentication options to Browsers. This has visible effects on what type of authentication is performed. see <ulink url="https://wiki.squid-cache.org/SquidFaq/OrderIsImportant/Features/Authentication#">Features/Authentication</ulink> for details and recommended ordering. </para><para><ulink url="http://www.squid-cache.org/Doc/config/acl#">acl</ulink> <emphasis role="strong">proxy_auth</emphasis> and <ulink url="http://www.squid-cache.org/Doc/config/external_acl_type#">external_acl_type</ulink> using <emphasis role="strong">%LOGIN</emphasis> must be defined after <ulink url="http://www.squid-cache.org/Doc/config/auth_param#">auth_param</ulink>. Squid will warn about authentication being used but not setup here. </para><para><ulink url="http://www.squid-cache.org/Doc/config/external_acl_type#">external_acl_type</ulink> using <emphasis role="strong">%LOGIN</emphasis> will trigger authentication challenges if those credentials are not present. The placement of these tests affects which rules around them require authentication. </para><para>Similarly <ulink url="http://www.squid-cache.org/Doc/config/acl#">acl</ulink> testing authentication placement left-to-right on their line determins whether the test bypasses, fails or triggers an auth challenges. </para></section><section><title>Access Controls</title><para><ulink url="http://www.squid-cache.org/Doc/config/acl#">acl</ulink> definition lines must be specified before any point at which they are mentioned for use. </para><para>The order of individual access controls affects other lines of the same type. For example each <ulink url="http://www.squid-cache.org/Doc/config/http_access#">http_access</ulink> is run in order and affect each other, but not any <ulink url="http://www.squid-cache.org/Doc/config/cache_peer_access#">cache_peer_access</ulink> in between. </para><para>This goes for each type of access directive. see <ulink url="https://wiki.squid-cache.org/SquidFaq/OrderIsImportant/SquidFaq/SquidAcl#Access_Lists">SquidFaq/SquidAcl#Access_Lists</ulink> for a list of access types. </para><para>The order of individual words on each access control line is even more critical. This can mean the difference between having an access control line match or skip. Or whether Squid can process 300 or 3 thousand requests per second. see <ulink url="https://wiki.squid-cache.org/SquidFaq/OrderIsImportant/SquidFaq/SquidAcl#Common_Mistakes">SquidFaq/SquidAcl#Common_Mistakes</ulink> for details on how ordering of individual line words works. </para></section><section><title>Major Transaction Milestones</title><para>A typical HTTP transaction goes through a sequence of checks and may be shared with external helpers/services. Since these checks and services may modify the transaction and/or its metadata, it is often critical to know the order of their execution. For example, does the request target URI get rewritten before or after the store ID helper runs? There is currently no comprehensive documentation covering every major transaction milestone, but this section may answer many related FAQs. </para><section><title>Callout Sequence</title><para>The following sequence of checks and adjustments is applied to most HTTP requests. This sequence starts after Squid parses the request header and ends before Squid starts satisfying the request from the cache or origin server. The checks are listed here in the order of their execution: </para><orderedlist numeration="arabic"><listitem><para>Host header forgery checks </para></listitem><listitem><para><ulink url="http://www.squid-cache.org/Doc/config/http_access#">http_access</ulink> directive </para></listitem><listitem><para>ICAP/eCAP <ulink url="https://wiki.squid-cache.org/SquidFaq/OrderIsImportant/SquidFaq/ContentAdaptation#">adaptation</ulink> </para></listitem><listitem><para><ulink url="http://www.squid-cache.org/Doc/config/url_rewrite_program#">redirector</ulink> </para></listitem><listitem><para><ulink url="http://www.squid-cache.org/Doc/config/adapted_http_access#">adapted_http_access</ulink> directive </para></listitem><listitem><para><ulink url="http://www.squid-cache.org/Doc/config/store_id#">store_id</ulink> directive </para></listitem><listitem><para>clientInterpretRequestHeaders() </para></listitem><listitem><para><ulink url="http://www.squid-cache.org/Doc/config/cache#">cache</ulink> directive </para></listitem><listitem><para>ToS marking </para></listitem><listitem><para>nf marking </para></listitem><listitem><para><ulink url="http://www.squid-cache.org/Doc/config/ssl_bump#">ssl_bump</ulink> directive </para></listitem><listitem><para>callout sequence error handling </para></listitem></orderedlist><para>A failed check may prevent subsequent checks from running. </para><para>A typical HTTP transaction (i.e., a pair of HTTP request and response messages) goes through the above sequence once. However, multiple transactions may participate in processing of a single &quot;web page download&quot;, confusing Squid admins. While all experienced Squid admins know that a single web page may contain dozens and sometimes hundreds of resources, each triggering an HTTP transaction, those multiple transactions may happen even when requesting a single resource and even when using simple command-line tools like curl or wget. </para><para>Internal Squid requests may cause even more confusion. For example, when <ulink url="https://wiki.squid-cache.org/SquidFaq/OrderIsImportant/Features/HTTPS#Bumping_direct_SSL.2FTLS_connections">SslBump</ulink> is in use, Squid may create several fake CONNECT transactions for a given TLS connection, and each CONNECT may go through the above motions. If you use SslBump for intercepted port 443 traffic, then shortly after a new connection is accepted by Squid, SslBump creates a fake CONNECT request with TCP level information, and that CONNECT request goes through the above sequence (matching step SslBump1 ACL if any). If an &quot;ssl_bump peek&quot; or &quot;ssl_bump stare&quot; rule matches during that first SslBump step, then SslBump code gets SNI and creates a second fake CONNECT request that goes through the same sequence again. </para><para>Your Squid directives and helpers must be prepared to deal with multiple [CONNECT] requests per connection. </para></section></section><section><title>Others</title><para>Some others have a simpler interaction, but ordering is still important. </para><itemizedlist><listitem><para>refresh_pattern - top down first pattern match wins. </para></listitem><listitem><para>delay_pools + delay_class + delay_parameters - must be added in that order: pools, class, parameters. </para></listitem><listitem><para>cache_peer - order of individual cache_peer entries affects selection of default and first-available peer. </para></listitem></itemizedlist></section></section></article>