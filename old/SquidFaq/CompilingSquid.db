<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>SquidFaq/CompilingSquid</title><revhistory><revision><revnumber>43</revnumber><date>2017-01-26 00:34:06</date><authorinitials>AlexRousskov</authorinitials><revremark>Grammar.</revremark></revision><revision><revnumber>42</revnumber><date>2017-01-26 00:33:07</date><authorinitials>AlexRousskov</authorinitials><revremark>Squid v3.4 auto-enables C++11 support as well.</revremark></revision><revision><revnumber>41</revnumber><date>2017-01-26 00:24:29</date><authorinitials>AlexRousskov</authorinitials><revremark>Fixed C++11 support requirements: C++11 is only required starting with v4, not v3.2.</revremark></revision><revision><revnumber>40</revnumber><date>2014-04-24 15:47:16</date><authorinitials>AmosJeffries</authorinitials><revremark>add how-to on cross-compiling</revremark></revision><revision><revnumber>39</revnumber><date>2013-10-29 09:33:35</date><authorinitials>AmosJeffries</authorinitials><revremark>fix platforms sections for windows. add RHEL and CentOS includes</revremark></revision><revision><revnumber>38</revnumber><date>2013-10-28 22:12:01</date><authorinitials>FrancescoChemolli</authorinitials><revremark>updated section on compiler requirements</revremark></revision><revision><revnumber>37</revnumber><date>2010-03-19 05:41:04</date><authorinitials>AmosJeffries</authorinitials><revremark>updates to compiling information.</revremark></revision><revision><revnumber>36</revnumber><date>2010-02-19 01:59:18</date><authorinitials>AmosJeffries</authorinitials><revremark>shuffle more bits to OS-specific pages.</revremark></revision><revision><revnumber>35</revnumber><date>2009-12-04 12:18:35</date><authorinitials>AmosJeffries</authorinitials><revremark>shuffle windows bits to the windows page.</revremark></revision><revision><revnumber>34</revnumber><date>2009-12-04 12:10:08</date><authorinitials>AmosJeffries</authorinitials><revremark>shuffle Debain specifics to the Debian page.</revremark></revision><revision><revnumber>33</revnumber><date>2009-11-13 13:31:06</date><authorinitials>AmosJeffries</authorinitials><revremark>Link FreeBSD page for any specific build help.</revremark></revision><revision><revnumber>32</revnumber><date>2009-11-13 02:11:26</date><authorinitials>AmosJeffries</authorinitials><revremark>shuffle solaris specifics to the solaris page. bind8 has no excuses now.</revremark></revision><revision><revnumber>31</revnumber><date>2009-11-13 01:49:09</date><authorinitials>AmosJeffries</authorinitials><revremark>TinyCOBOL link update.</revremark></revision><revision><revnumber>30</revnumber><date>2009-04-26 04:55:27</date><authorinitials>AmosJeffries</authorinitials><revremark>move binary package Q&amp;A to a page about binary packages</revremark></revision><revision><revnumber>29</revnumber><date>2009-04-17 22:42:47</date><authorinitials>AmosJeffries</authorinitials><revremark>add pidfile settings to Debian build instrauctions</revremark></revision><revision><revnumber>28</revnumber><date>2009-01-11 04:36:03</date><authorinitials>AmosJeffries</authorinitials><revremark>Debian needs Makefile.am and Makefile.in patched when bootstrap not available.</revremark></revision><revision><revnumber>27</revnumber><date>2008-12-01 23:53:19</date><authorinitials>AmosJeffries</authorinitials><revremark>update list of common options to mention some are default-on in squid-3</revremark></revision><revision><revnumber>26</revnumber><date>2008-11-22 13:15:54</date><authorinitials>AmosJeffries</authorinitials><revremark>add logdir info for debian.</revremark></revision><revision><revnumber>25</revnumber><date>2008-11-01 01:53:09</date><authorinitials>AmosJeffries</authorinitials><revremark>typo</revremark></revision><revision><revnumber>24</revnumber><date>2008-09-18 13:49:31</date><authorinitials>AmosJeffries</authorinitials><revremark>update link to binaries info, remove obsolete entries.</revremark></revision><revision><revnumber>23</revnumber><date>2008-09-18 13:24:56</date><authorinitials>AmosJeffries</authorinitials><revremark>another typo</revremark></revision><revision><revnumber>22</revnumber><date>2008-09-18 13:24:23</date><authorinitials>AmosJeffries</authorinitials><revremark>3.0 no longer depends on uudecode.</revremark></revision><revision><revnumber>21</revnumber><date>2008-09-18 13:17:16</date><authorinitials>AmosJeffries</authorinitials><revremark>typo</revremark></revision><revision><revnumber>20</revnumber><date>2008-08-25 11:44:47</date><authorinitials>AmosJeffries</authorinitials><revremark>bind 8.x is a security threat now. discourage its use.</revremark></revision><revision><revnumber>19</revnumber><date>2008-08-25 11:40:19</date><authorinitials>AmosJeffries</authorinitials><revremark>bump example squid version numbers from 2.5 to 2.6</revremark></revision><revision><revnumber>18</revnumber><date>2008-05-18 19:38:57</date><authorinitials>localhost</authorinitials><revremark>converted to 1.6 markup</revremark></revision><revision><revnumber>17</revnumber><date>2008-04-25 04:35:59</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>16</revnumber><date>2008-04-25 04:34:48</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>15</revnumber><date>2008-04-24 04:06:16</date><authorinitials>AmosJeffries</authorinitials><revremark>add RedHat options</revremark></revision><revision><revnumber>14</revnumber><date>2008-02-19 02:22:30</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>13</revnumber><date>2008-02-19 01:51:28</date><authorinitials>AmosJeffries</authorinitials><revremark>Structure the Q&amp;A so they make sense as an article and easy to find things with less duplicated.</revremark></revision><revision><revnumber>12</revnumber><date>2007-09-05 15:40:52</date><authorinitials>GuidoSerassio</authorinitials></revision><revision><revnumber>11</revnumber><date>2007-03-10 10:20:15</date><authorinitials>GuidoSerassio</authorinitials><revremark>Added build using MinGW on Windows</revremark></revision><revision><revnumber>10</revnumber><date>2006-09-09 07:54:32</date><authorinitials>GuidoSerassio</authorinitials><revremark>Missing link to Windows binaries</revremark></revision><revision><revnumber>9</revnumber><date>2006-09-09 07:51:12</date><authorinitials>GuidoSerassio</authorinitials><revremark>Added missing paragraph from Squid FAQ</revremark></revision><revision><revnumber>8</revnumber><date>2006-09-02 02:01:15</date><authorinitials>Henrik Nordstr√∂m</authorinitials><revremark>Deleted the old DNS hack info. No longer relevant  with the internal DNS client.</revremark></revision><revision><revnumber>7</revnumber><date>2006-08-24 23:34:02</date><authorinitials>kinkie</authorinitials></revision><revision><revnumber>6</revnumber><date>2006-06-04 05:40:13</date><authorinitials>ReubenFarrelly</authorinitials><revremark>Various cleanups, update examples to use Squid 2.5STABLE rather than Squid-1.1</revremark></revision><revision><revnumber>5</revnumber><date>2006-03-03 09:19:03</date><authorinitials>kinkie</authorinitials></revision><revision><revnumber>4</revnumber><date>2006-02-07 22:17:10</date><authorinitials>kinkie</authorinitials><revremark>Put patches as attachments rather than inline</revremark></revision><revision><revnumber>3</revnumber><date>2006-02-07 22:07:27</date><authorinitials>kinkie</authorinitials><revremark>Minor markup fixes</revremark></revision><revision><revnumber>2</revnumber><date>2006-01-27 18:40:34</date><authorinitials>kinkie</authorinitials><revremark>Added link to index; minor markup fixes</revremark></revision><revision><revnumber>1</revnumber><date>2006-01-24 12:10:26</date><authorinitials>kinkie</authorinitials></revision></revhistory></articleinfo><section><title>Compiling Squid</title><section><title>Which file do I download to get Squid?</title><para>That depends on the version of Squid you have chosen to try. The list of current versions released can be found at <ulink url="http://www.squid-cache.org/Versions/"/>. Each version has a page of release bundles. Usually you want the release bundle that is listed as the most current. </para><para>You must download a source archive file of the form squid-x.y.tar.gz or squid-x.y.tar.bz2 (eg, squid-2.6.STABLE14.tar.bz2). </para><para>We recommend you first try one of our <ulink url="http://www.squid-cache.org/Mirrors/http-mirrors.html">mirror sites</ulink> for the actually download. They are usually faster. </para><para>Alternatively, the main Squid WWW site  <ulink url="http://www.squid-cache.org/">www.squid-cache.org</ulink>, and FTP site <ulink url="ftp://www.squid-cache.org/pub/">ftp.squid-cache.org</ulink> have these files. </para><para>Context diffs are usually available for upgrading to new versions. These can be applied with the <emphasis>patch</emphasis> program (available from <ulink url="ftp://ftp.gnu.org/gnu/patch">the GNU FTP site</ulink> or your distribution). </para></section><section><title>Do you have pre-compiled binaries available?</title><para>see <ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/SquidFaq/BinaryPackages#">SquidFaq/BinaryPackages</ulink> </para></section><section><title>How do I compile Squid?</title><para>You must run the <emphasis>configure</emphasis> script yourself before running <emphasis>make</emphasis>.  We suggest that you first invoke <emphasis>./configure --help</emphasis> and make a note of the configure options you need in order to support the features you intend to use.  Do not compile in features you do not think you will need. </para><screen><![CDATA[% tar xzf squid-2.6.RELEASExy.tar.gz
% cd squid-2.6.RELEASExy
% ./configure --with-MYOPTION --with-MYOPTION2 etc
% make]]></screen><itemizedlist><listitem override="none"><para>.. and finally install... </para></listitem></itemizedlist><screen><![CDATA[% make install]]></screen><para>Squid  will by default, install into <emphasis>/usr/local/squid</emphasis>. If you wish to install somewhere else, see the <emphasis>--prefix</emphasis> option for configure. </para><section><title>What kind of compiler do I need?</title><para>You will need a C++ compiler: </para><itemizedlist><listitem><para>To compile Squid v3, any decent C++ compiler would do. Almost all modern Unix systems come with pre-installed C++ compilers which work just fine. </para></listitem><listitem><para>To compile Squid v4 and later, you will need a C++11-compliant compiler. Most recent Unix distributions come with pre-installed compilers that support C++11. </para></listitem></itemizedlist><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> Squid v3.4 and v3.5 automatically enable C++11 support in the compiler if ./configure detects such support. Later Squid versions require C++11 support while earlier ones may fail to build if C++11 compliance is enforced by the compiler. </para><para>If you are uncertain about your system's C compiler, The GNU C compiler is widely available and supplied in almost all operating systems. It is also well tested with Squid.  If your OS does not come with GCC you may download it from <ulink url="ftp://ftp.gnu.org/gnu/gcc">the GNU FTP site</ulink>. In addition to <emphasis role="strong">gcc</emphasis> and <emphasis role="strong">g++</emphasis>, you may also want or need to install the <emphasis role="strong">binutils</emphasis> package and a number of libraries, depending on the feature-set you want to enable. </para><para><ulink url="http://www.llvm.org">Clang</ulink> is a popular alternative to gcc, especially on BSD systems. It also generally works quite fine for building Squid. Other alternatives which are or were tested in the past were Intel's C++ compiler and Sun's SunStudio. Microsoft Visual C++ is another target the Squid developers aim for, but at the time of this writing (April 2014) still quite a way off. </para><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> Please note that due to a bug in clang's support for atomic operations, squid doesn't build on clang older than 3.2. </para></section><section><title>What else do I need to compile Squid?</title><para>You will need the automake toolset for compiling from Makefiles. </para><para>You will need <ulink url="http://www.perl.com/">Perl</ulink> installed on your system. </para><para>Each feature you choose to enable may also require additional libraries or tools to build. </para></section><section><title>How do I cross-compile Squid ?</title><para>Use the ./configure option <emphasis role="strong">--host</emphasis> to specify the cross-compilation tuplet for the machine which Squid will be installed on. The <ulink url="http://www.gnu.org/software/automake/manual/html_node/Cross_002dCompilation.html">autotools manual</ulink> has some simple documentation for this and other cross-configuration options - in particular what they mean is a very useful detail to know. </para><para>Additionally, Squid is created using several custom tools which are themselves created during the build process. This requires a C++ compiler to generate binaries which can run on the build platform. The <emphasis role="strong">HOSTCXX=</emphasis> parameter needs to be provided with the name or path to this compiler. </para></section><section><title>How do I apply a patch or a diff?</title><para>You need the <emphasis>patch</emphasis> program.  You should probably duplicate the entire directory structure before applying the patch.  For example, if you are upgrading from squid-2.6.STABLE13 to 2.6.STABLE14, you would run these commands: </para><screen><![CDATA[cp -rl squid-2.6.STABLE13 squid-2.6.STABLE14
cd squid-2.6.STABLE14
zcat /tmp/squid-2.6.STABLE13-STABLE14.diff.gz | patch -p1]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Squid-2 patches require the <emphasis role="strong">-p1</emphasis> option. </para><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Squid-3 patches require the <emphasis role="strong">-p0</emphasis> option. </para></listitem></itemizedlist><para>After the patch has been applied, you must rebuild Squid from the very beginning, i.e.: </para><screen><![CDATA[make distclean
./configure [--option --option...]
make
make install]]></screen><para>If your <emphasis>patch</emphasis> program seems to complain or refuses to work, you should get a more recent version, from the <ulink url="ftp://ftp.gnu.ai.mit.edu/pub/gnu/">GNU FTP site</ulink>, for example. </para><para>Ideally you should use the patch command which comes with your OS. </para></section><section><title>configure options</title><para>The configure script can take numerous options.  The most useful is <emphasis>--prefix</emphasis> to install it in a different directory. The default installation directory is <emphasis>/usr/local/squid</emphasis>/.  To change the default, you could do: </para><screen><![CDATA[% cd squid-x.y.z
% ./configure --prefix=/some/other/directory/squid]]></screen><para>Some OS require files to be installed in certain locations. See the OS specific instructions below for ./configure options required to make those installations happen correctly. </para><para>Type </para><screen><![CDATA[% ./configure --help]]></screen><para>to see all available options.  You will need to specify some of these options to enable or disable certain features. Some options which are used often include: </para><screen><![CDATA[--prefix=PREFIX         install architecture-independent files in PREFIX
                        [/usr/local/squid]
--enable-dlmalloc[=LIB] Compile & use the malloc package by Doug Lea
--enable-gnuregex       Compile GNUregex
--enable-xmalloc-debug  Do some simple malloc debugging
--enable-xmalloc-debug-trace
                        Detailed trace of memory allocations
--enable-xmalloc-statistics
                        Show malloc statistics in status page
--enable-async-io       Do ASYNC disk I/O using threads
--enable-icmp           Enable ICMP pinging and network measurement
--enable-delay-pools    Enable delay pools to limit bandwidth usage
--enable-useragent-log  Enable logging of User-Agent header
--enable-kill-parent-hack
                        Kill parent on shutdown
--enable-cachemgr-hostname[=hostname]
                        Make cachemgr.cgi default to this host
--enable-htpc           Enable HTCP protocol
--enable-forw-via-db    Enable Forw/Via database
--enable-cache-digests  Use Cache Digests
                        see http://www.squid-cache.org/Doc/FAQ/FAQ-16.html]]></screen><para>These are also commonly needed by Squid-2, but are now defaults in Squid-3. </para><screen><![CDATA[--enable-carp           Enable CARP support
--enable-snmp           Enable SNMP monitoring
--enable-err-language=lang
                        Select language for Error pages (see errors dir)]]></screen></section></section><section><title>Building Squid on ...</title><section><title>BSD/OS or BSDI</title><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-error.png" width="16"/></imageobject><textobject><phrase>{X}</phrase></textobject></inlinemediaobject> Known Problem: </para><screen><![CDATA[cache_cf.c: In function `parseConfigFile':
cache_cf.c:1353: yacc stack overflow before `token'
...]]></screen><para>You may need to upgrade your gcc installation to a more recent version. Check your gcc version with </para><screen><![CDATA[  gcc -v]]></screen><para>If it is earlier than 2.7.2, you might consider upgrading. Gcc 2.7.2 is very old and not widely supported. </para></section><section><title><ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/KnowledgeBase/CentOS">CentOS</ulink></title><screen><![CDATA[# You will need the usual build chain
yum install -y perl gcc autoconf automake make sudo wget
]]><![CDATA[
# and some extra packages
yum install libxml2-devel libcap-devel
]]><![CDATA[
# to bootstrap and build from bzr needs also the packages
yum install libtool-ltdl-devel]]></screen><para>The following ./configure options install Squid into the CentOS structure properly:  </para><screen><![CDATA[  --prefix=/usr
  --includedir=/usr/include
  --datadir=/usr/share
  --bindir=/usr/sbin
  --libexecdir=/usr/lib/squid
  --localstatedir=/var
  --sysconfdir=/etc/squid]]></screen></section><section><title><ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/KnowledgeBase/Debian">Debian, Ubuntu</ulink></title><para>Many versions of Ubuntu and Debian are routinely build-tested and unit-tested as part of our <ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/BuildFarm#">BuildFarm</ulink> and are known to compile OK. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> The Linux system layout differs markedly from the Squid defaults. The following ./configure options are needed to install Squid into the Debian / Ubuntu standard filesystem locations: </para></listitem></itemizedlist><screen><![CDATA[--prefix=/usr \
--localstatedir=/var \
--libexecdir=${prefix}/lib/squid \
--datadir=${prefix}/share/squid \
--sysconfdir=/etc/squid \
--with-default-user=proxy \
--with-logdir=/var/log/squid \
--with-pidfile=/var/run/squid.pid]]></screen><para>Plus, of course, any custom configuration options you may need. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-error.png" width="16"/></imageobject><textobject><phrase>{X}</phrase></textobject></inlinemediaobject> For Debian Jesse (8), Ubuntu Oneiric (11.10), or older <emphasis role="strong">squid3</emphasis> packages; the above <emphasis>squid</emphasis> labels should have a <emphasis role="strong">3</emphasis> appended. </para></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-error.png" width="16"/></imageobject><textobject><phrase>{X}</phrase></textobject></inlinemediaobject> Remember these are only defaults. Altering squid.conf you can point the logs at the right path anyway without either the workaround or the patching. </para></listitem></itemizedlist><para>As always, additional libraries may be required to support the features you want to build. The default package dependencies can be installed using: </para><screen><![CDATA[aptitude build-dep squid]]></screen><para>This requires only that your sources.list contain the <emphasis role="strong">deb-src</emphasis> repository to pull the source package information. Features which are not supported by the distribution package will need investigation to discover the dependency package and install it. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> The usual one requested is <emphasis role="strong">libssl-dev</emphasis> for SSL support. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> However, please note that <ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/Squid-3.5#">Squid-3.5</ulink> is not compatible with OpenSSL v1.1+. As of Debian Squeeze, or Ubuntu Zesty the <emphasis role="strong">libssl1.0-dev</emphasis> package must be used instead. This is resolved in the <ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/Squid-4#">Squid-4</ulink> packages. </para></listitem></itemizedlist></listitem></itemizedlist><section><title>Init Script</title><para>The init.d script is part of the official Debain/Ubuntu packaging. It does not come with Squid directly. So you will need to download a copy from <ulink url="https://alioth.debian.org/plugins/scmgit/cgi-bin/gitweb.cgi?p=pkg-squid/pkg-squid3.git;a=blob_plain;f=debian/squid.rc"/> to /etc/init.d/squid </para></section></section><section><title><ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/KnowledgeBase/Fedora">Fedora</ulink></title><para>Rebuilding the binary rpm is most easily done by installing the <code>fedpkg</code> tool: </para><screen><![CDATA[yum install fedpkg]]></screen><para>Cloning the package: </para><screen><![CDATA[fedpkg clone -a squid]]></screen><para>And then using <code>fedpkg mockbuild</code> to rebuild the package: </para><screen><![CDATA[cd squid
fedpkg mockbuild]]></screen></section><section><title><ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/KnowledgeBase/FreeBSD">FreeBSD, NetBSD, OpenBSD</ulink></title><para>The <ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/SquidFaq/CompilingSquid#">general build instructions</ulink> should be all you need. </para><para>However, if you wish to integrate patching of Squid with patching of your other FreeBSD packages, it might be easiest to install Squid from the Ports collection. As of FreeBSD 12.2, the available ports are: </para><itemizedlist><listitem><para><code>/usr/ports/www/squid3</code> - Squid 3.5.28 </para></listitem><listitem><para><code>/usr/ports/www/squid3</code> - Squid 4.10 </para></listitem></itemizedlist><para>To install squid-4: </para><screen><![CDATA[ cd /usr/ports/www/squid
 make install clean]]></screen></section><section><title><ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/KnowledgeBase/Windows">Windows</ulink></title><itemizedlist><listitem override="none"><para>These instructions apply to building <emphasis role="strong">Squid-3.x</emphasis>. Squid-2 package are available for download. See the  </para></listitem></itemizedlist><para><emphasis role="strong">New configure options:</emphasis> </para><itemizedlist><listitem><para>--enable-win32-service </para></listitem></itemizedlist><para><emphasis role="strong">Updated configure options:</emphasis> </para><itemizedlist><listitem><para>--enable-default-hostsfile </para></listitem></itemizedlist><para><emphasis role="strong">Unsupported configure options:</emphasis> </para><itemizedlist><listitem><para>--with-large-files: No suitable build environment is available on both Cygwin and MinGW, but --enable-large-files works fine </para></listitem></itemizedlist><section><title>Compiling with Cygwin</title><itemizedlist><listitem override="none"><para><emphasis role="strong">This section needs re-writing. Is has very little in compiling Squid and much about installation.</emphasis> </para></listitem></itemizedlist><para>In order to compile Squid, you need to have Cygwin fully installed. </para><para>The usage of the Cygwin environment is very similar to other Unix/Linux environments, and -devel version of libraries must be installed. </para><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> <inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> </para></entry><entry colsep="1" rowsep="1"><para>Squid will by default, install into <emphasis>/usr/local/squid</emphasis>. If you wish to install somewhere else, see the <emphasis>--prefix</emphasis> option for configure.</para></entry></row></tbody></tgroup></informaltable><para>Now, add a new Cygwin user - see the Cygwin user guide - and map it to SYSTEM, or create a new NT user, and a matching Cygwin user and they become the squid runas users. </para><para>Read the squid FAQ on permissions if you are using CYGWIN=ntsec. </para><para>When that has completed run: </para><screen><![CDATA[squid -z]]></screen><para>If that succeeds, try: </para><screen><![CDATA[squid -N -D -d1]]></screen><para>Squid should start. Check that there are no errors. If everything looks good, try browsing through squid. </para><para>Now, configure <emphasis>cygrunsrv</emphasis> to run Squid as a service as the chosen username. You may need to check permissions here. </para></section><section><title>Compiling with MinGW</title><para>In order to compile squid using the MinGW environment, the packages MSYS, MinGW and msysDTK must be installed. Some additional libraries and tools must be downloaded separately: </para><itemizedlist><listitem><para>OpenSSL: <ulink url="http://www.slproweb.com/products/Win32OpenSSL.html">Shining Light Productions Win32 OpenSSL</ulink> </para></listitem><listitem><para>libcrypt: <ulink url="http://sourceforge.net/projects/mingwrep/">MinGW packages repository</ulink> </para></listitem><listitem><para>db-1.85: <ulink url="http://tiny-cobol.sourceforge.net/download.php">TinyCOBOL download area</ulink> </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> 3.2+ releases require a newer 4.6 or later version of libdb </para></listitem></itemizedlist></listitem></itemizedlist><para>Before building Squid with SSL support, some operations are needed (in the following example OpenSSL is installed in C:\OpenSSL and MinGW in C:\MinGW): </para><itemizedlist><listitem><para>Copy C:\OpenSSL\lib\MinGW content to C:\MinGW\lib </para></listitem><listitem><para>Copy C:\OpenSSL\include\openssl content to C:\MinGW\include\openssl </para></listitem><listitem><para>Rename C:\MinGW\lib\ssleay32.a to C:\MinGW\lib\libssleay32.a </para></listitem></itemizedlist><para>Unpack the source archive as usual and run configure. </para><para>The following are the recommended minimal options for Windows: </para><para><emphasis role="strong">Squid-3</emphasis> : (requires <ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/Squid-3.5#">Squid-3.5</ulink> or later, see porting efforts section below) </para><screen><![CDATA[--prefix=c:/squid
--enable-default-hostsfile=none]]></screen><para>Then run make and install as usual. </para><para>Squid will install into <emphasis>c:\squid</emphasis>. If you wish to install somewhere else, change the <emphasis>--prefix</emphasis> option for configure. </para><para>When that has completed run: </para><screen><![CDATA[squid -z]]></screen><para>If that succeeds, try: </para><screen><![CDATA[squid -N -D -d1]]></screen><itemizedlist><listitem><para>squid should start. Check that there are no errors. If everything looks good, try browsing through squid. </para></listitem></itemizedlist><para>Now, to run Squid as a Windows system service, run <emphasis>squid -n</emphasis>, this will create a service named &quot;Squid&quot; with automatic startup. To start it run <emphasis>net start squid</emphasis> from command line prompt or use the Services Administrative Applet. </para><para>Always check the provided release notes for any version specific detail. </para></section></section><section><title>OS/2</title><para>by Doug Nazar (<code>&lt;nazard AT man-assoc DOT on DOT ca&gt;</code>). </para><para>In order in compile squid, you need to have a reasonable facsimile of a Unix system installed.  This includes <emphasis>bash</emphasis>, <emphasis>make</emphasis>, <emphasis>sed</emphasis>, <emphasis>emx</emphasis>, various file utilities and a few more. I've setup a TVFS drive that matches a Unix file system but this probably isn't strictly necessary. </para><para>I made a few modifications to the pristine EMX 0.9d install. </para><itemizedlist><listitem><para>added defines for <emphasis>strcasecmp()</emphasis> &amp; <emphasis>strncasecmp()</emphasis> to <emphasis>string.h</emphasis> </para></listitem><listitem><para>changed all occurrences of time_t to signed long instead of unsigned long </para></listitem><listitem><para>hacked ld.exe </para><itemizedlist><listitem><para>to search for both xxxx.a and libxxxx.a </para></listitem><listitem><para>to produce the correct filename when using the -Zexe option </para></listitem></itemizedlist></listitem></itemizedlist><para>You will need to run <emphasis>scripts/convert.configure.to.os2</emphasis> (in the Squid source distribution) to modify the configure script so that it can search for the various programs. </para><para>Next, you need to set a few environment variables (see EMX docs for meaning): </para><screen><![CDATA[export EMXOPT="-h256 -c"
export LDFLAGS="-Zexe -Zbin -s"]]></screen><para>Now you are ready to configure, make, and install Squid. </para><para>Now, <emphasis role="strong">don't forget to set EMXOPT before running squid each time</emphasis>. I recommend using the -Y and -N options. </para></section><section><title><ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/KnowledgeBase/RedHat">RedHat, RHEL</ulink></title><para>The following ./configure options install Squid into the RedHat structure properly: </para><screen><![CDATA[  --prefix=/usr
  --includedir=/usr/include
  --datadir=/usr/share
  --bindir=/usr/sbin
  --libexecdir=/usr/lib/squid
  --localstatedir=/var
  --sysconfdir=/etc/squid]]></screen></section><section><title><ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/KnowledgeBase/Solaris">Solaris</ulink></title><para>In order to successfully build squid on Solaris, a complete build-chain has to be available. </para><section><title>Squid-3.x</title><para>In order to successfully build squid, a few GNU-related packages need to be available. Unfortunately, not all of the software is available on a stock Solaris install. </para><para>What you need is: </para><screen><![CDATA[ pkg install SUNWgnu-coreutils SUNWgtar SUNWgm4 SUNWgmake SUNWlxml  SUNWgsed]]></screen><para>and of course a compiler. You can choose between </para><screen><![CDATA[ pkg install SUNWgcc]]></screen><para>and  </para><screen><![CDATA[ pkg install sunstudioexpress SUNWbtool]]></screen><section><title>com_err.h: warning: ignoring #pragma ident</title><para>This problem occurs with certain kerberos library headers distributed with Solaris 10. It has been fixed in later release of the kerberos library. </para><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-error.png" width="16"/></imageobject><textobject><phrase>{X}</phrase></textobject></inlinemediaobject> Unfortunately the <code>/usr/include/kerberosv5/com_err.h</code> system-include file sports a #pragma directive which is not compatible with gcc. </para><para>There are several options available: </para><orderedlist numeration="arabic"><listitem><para>Upgrading your library to a working version is the recommended best option. </para></listitem><listitem><para>Applying a patch distributed with Squid ( <code>contrib/solaris/solaris-krb5-include.patch</code> ) which updates the krb5.h header to match the one found in later working krb5 library releases. </para></listitem><listitem><para>Editing com_err.h directly to change the line  </para></listitem></orderedlist><screen><![CDATA[#pragma ident   "%Z%%M% %I%     %E% SMI"]]></screen><para>to </para><screen><![CDATA[#if !defined(__GNUC__)
#pragma ident   "%Z%%M% %I%     %E% SMI"
#endif]]></screen></section><section><title>3.1 -enable-ipf-transparent support</title><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-error.png" width="16"/></imageobject><textobject><phrase>{X}</phrase></textobject></inlinemediaobject> Unfortunately the <code>/usr/include/inet/mib2.h</code> header required for IPF interception support clashes with <ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/Squid-3.1#">Squid-3.1</ulink> class definitions. This has been fixed in the 3.2 series. </para><para>For 3.1 to build you may need to run this class rename command in the top Squid sources directory: </para><screen><![CDATA[find . -type f -print | xargs perl -i -p -e 's/\b(IpAddress\b[^.])/Squid$1/g]]></screen></section></section><section><title>Squid-2.x and older</title><para>The following error occurs on Solaris systems using gcc when the Solaris C compiler is not installed: </para><screen><![CDATA[/usr/bin/rm -f libmiscutil.a
/usr/bin/false r libmiscutil.a rfc1123.o rfc1738.o util.o ...
make[1]: *** [libmiscutil.a] Error 255
make[1]: Leaving directory `/tmp/squid-1.1.11/lib'
make: *** [all] Error 1]]></screen><para>Note on the second line the <emphasis>/usr/bin/false</emphasis>.   This is supposed to be a path to the <emphasis>ar</emphasis> program.  If <emphasis>configure</emphasis> cannot find <emphasis>ar</emphasis> on your system, then it substitutes <emphasis>false</emphasis>. </para><para>To fix this you either need to: </para><itemizedlist><listitem><para>Add <emphasis>/usr/ccs/bin</emphasis> to your PATH.  This is where the <emphasis>ar</emphasis> command should be.  You need to install SUNWbtool if <emphasis>ar</emphasis> is not there.  Otherwise, </para></listitem><listitem><para>Install the <emphasis role="strong">binutils</emphasis> package from <ulink url="ftp://ftp.gnu.org/gnu/binutils">the GNU FTP site</ulink>. This package includes programs such as <emphasis>ar</emphasis>, <emphasis>as</emphasis>, and <emphasis>ld</emphasis>. </para></listitem></itemizedlist></section></section><section><title>Other Platforms</title><para>Please let us know of other platforms you have built squid. Whether successful or not. </para><para>Please check the <ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/SquidFaq/AboutSquid#What_Operating_Systems_does_Squid_support.3F">page of platforms</ulink> on which Squid is known to compile.  </para><para>If you have a problem not listed above with a solution, mail us at <emphasis role="strong">squid-dev</emphasis> what you are trying, your Squid version, and the problems you encounter. </para></section></section><section><title>I see a lot warnings while compiling Squid.</title><para>Warnings are usually not usually a big concern, and can be common with software designed to operate on multiple platforms. Squid 3.2 and later should build without generating any warnings; a big effort was spent into making the code truly portable. </para></section><section><title>undefined reference to __inet_ntoa</title><para>Probably you have bind 8.x installed. </para><para><emphasis role="strong">UPDATE:</emphasis> That version of bind is now officially obsolete and known to be vulnerable to a critical infrastructure flaw. It should be upgraded to bind 9.x or replaced as soon as possible. </para><!--rule (<hr>) is not applicable to DocBook--><para> Back to the <ulink url="https://wiki.squid-cache.org/SquidFaq/CompilingSquid/SquidFaq#">SquidFaq</ulink> </para></section></section></article>