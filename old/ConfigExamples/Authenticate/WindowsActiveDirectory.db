<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>ConfigExamples/Authenticate/WindowsActiveDirectory</title><revhistory><revision><revnumber>27</revnumber><date>2021-07-03 09:44:27</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>26</revnumber><date>2021-07-02 14:45:05</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>25</revnumber><date>2015-08-27 20:07:45</date><authorinitials>AmosJeffries</authorinitials><revremark>Pavlos Polianidis mentions winbind alternative directory on Debian/Ubuntu. also add a disclaimer that the config will differ for other OS Ubuntu is very non-standard</revremark></revision><revision><revnumber>24</revnumber><date>2014-11-11 08:27:09</date><authorinitials>ChristopherSchirner</authorinitials><revremark>added linebreak</revremark></revision><revision><revnumber>23</revnumber><date>2014-11-11 08:26:55</date><authorinitials>ChristopherSchirner</authorinitials></revision><revision><revnumber>22</revnumber><date>2014-11-11 08:25:41</date><authorinitials>ChristopherSchirner</authorinitials></revision><revision><revnumber>21</revnumber><date>2012-01-21 13:08:20</date><authorinitials>eu.squid-cache.org</authorinitials></revision><revision><revnumber>20</revnumber><date>2009-02-11 12:51:19</date><authorinitials>AmosJeffries</authorinitials><revremark>remove duplicate config details with better quality info from generic NTLM example</revremark></revision><revision><revnumber>19</revnumber><date>2009-02-10 21:11:31</date><authorinitials>AmosJeffries</authorinitials><revremark>link to LDAP config</revremark></revision><revision><revnumber>18</revnumber><date>2009-02-04 06:49:23</date><authorinitials>AmosJeffries</authorinitials><revremark>move to auth config section</revremark></revision><revision><revnumber>17</revnumber><date>2008-10-31 04:34:45</date><authorinitials>68.53.243.121</authorinitials><revremark>Accidentally added CategoryConfigExample twice</revremark></revision><revision><revnumber>16</revnumber><date>2008-10-31 04:29:24</date><authorinitials>68.53.243.121</authorinitials><revremark>Recommend adding proxy to winbindd_priv instead of running squid in the root group</revremark></revision><revision><revnumber>15</revnumber><date>2008-05-18 19:39:00</date><authorinitials>localhost</authorinitials><revremark>converted to 1.6 markup</revremark></revision><revision><revnumber>14</revnumber><date>2007-11-26 05:27:33</date><authorinitials>AdrianChadd</authorinitials></revision></revhistory></articleinfo><section><title>Configuring a Squid Server to authenticate off Active Directory</title><para>Original work By Adrian Chadd </para><para>Updated by James Robertson 19.01.2012 </para><para>Updated by Christopher Schirner 11.11.2014 </para><para><emphasis role="strong">Warning</emphasis>: Any example presented here is provided &quot;as-is&quot; with no support or guarantee of suitability. If you have any further questions about these examples please email the squid-users mailing list. </para><section><title>Introduction</title><para>This wiki page covers setup of a Squid proxy which will seamlessly integrate with Active Directory using Kerberos, NTLM and basic authentication for clients not authenticated via Kerberos or NTLM. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> This configuration example appears to have been written for an Ubuntu installation and incompletely munged for someones idea of general use. File paths and account user/group names will depend on your operatig system. </para></listitem></itemizedlist><para>If you are running Debian or would like more verbose instructions including access groups <ulink url="http://wiki.bitbinary.com/index.php/Active_Directory_Integrated_Squid_Proxy">this link</ulink> may be of interest. </para></section><section><title>Example Environment</title><para>the following examples are utilised, you should update any configuration examples with your clients domain, hostnames, IP's etc. where necessary. </para><itemizedlist><listitem><para>Network </para><itemizedlist><listitem override="none"><para>Domain= example.local </para></listitem><listitem override="none"><para>Subnet = 192.168.0.0/24 </para></listitem></itemizedlist></listitem><listitem><para>Proxy Server </para><itemizedlist><listitem override="none"><para>OS = GNU/Linux </para></listitem><listitem override="none"><para>Squid 3.1 </para></listitem><listitem override="none"><para>IP = 192.168.0.10 </para></listitem><listitem override="none"><para>HOSTNAME = squidproxy.example.local </para></listitem><listitem override="none"><para>Kerberos computer name = SQUIDPROXY-K </para></listitem></itemizedlist></listitem><listitem><para>Windows Server 1 </para><itemizedlist><listitem override="none"><para>IP = 192.168.0.1 </para></listitem><listitem override="none"><para>HOSTNAME = dc1.example.local </para></listitem></itemizedlist></listitem><listitem><para>Windows Server 2 </para><itemizedlist><listitem override="none"><para>IP = 192.168.0.2 </para></listitem><listitem override="none"><para>HOSTNAME = dc2.example.local </para></listitem></itemizedlist></listitem></itemizedlist></section><section><title>Prerequisites</title><para>Client Windows Computers need to have <emphasis>Enable Integrated Windows Authentication</emphasis> ticked in <emphasis>Internet Options â‡’ Advanced settings</emphasis>. </para></section><section><title>DNS Configuration</title><para>On the Windows DNS server add a new A record entry for the proxy server's hostname and ensure a corresponding PTR (reverse DNS) entry is also created and works. Check that the proxy is using the Windows DNS Server for name resolution and update <code>/etc/resolv.conf</code> accordingly. </para><para>Edit the file according to your network. </para><screen><![CDATA[domain example.local
search example.local
nameserver 192.168.0.1
nameserver 192.168.0.2]]></screen><para>Ping a internal and external hostname to ensure DNS is operating. </para><screen><![CDATA[ping dc1.example.local -c 4 && ping google.com -c 4]]></screen><para>Check you can reverse lookup the Windows Server and the local proxy ip from the Windows DNS. </para><screen><![CDATA[dig -x 192.168.0.1]]></screen><screen><![CDATA[dig -x 192.168.0.10]]></screen><para>The <emphasis role="strong">ANSWER SECTION</emphasis> should contain the the DNS name of <code>dc1.example.local</code> and <code>squidproxy.example.local</code>. </para><important><para><emphasis role="strong">Important:</emphasis> If either lookup fails do not proceed until fixed or authentication may fail. </para></important></section><section><title>NTP Configuration</title><para>Time needs to be syncronised with Windows Domain Controllers for authentication, configure the proxy to obtain time from them and test to ensure they are working as expected. </para></section><section><title>Install and Configure Kerberos</title><para>Install Kerberos packages - on Debian these are <code>krb5-user libkrb53</code> </para><para>Edit the file <code>/etc/krb5.conf</code> replacing the variables with the your domain and servers. </para><important><para><emphasis role="strong">Important:</emphasis> If you only have 1 Domain Controller remove the additional <code>kdc</code> entry from the <code>[realms]</code> section, or add any additional DC's. </para><para>Depending on your Domain Controller's OS Version uncomment the relevant Windows 200X section and comment out the opposing section. </para></important><screen><![CDATA[[libdefaults]
    default_realm = EXAMPLE.LOCAL
    dns_lookup_kdc = no
    dns_lookup_realm = no
    ticket_lifetime = 24h
    default_keytab_name = /etc/squid3/PROXY.keytab
]]><![CDATA[
; for Windows 2003
    default_tgs_enctypes = rc4-hmac des-cbc-crc des-cbc-md5
    default_tkt_enctypes = rc4-hmac des-cbc-crc des-cbc-md5
    permitted_enctypes = rc4-hmac des-cbc-crc des-cbc-md5
]]><![CDATA[
; for Windows 2008 with AES
;    default_tgs_enctypes = aes256-cts-hmac-sha1-96 rc4-hmac des-cbc-crc des-cbc-md5
;    default_tkt_enctypes = aes256-cts-hmac-sha1-96 rc4-hmac des-cbc-crc des-cbc-md5
;    permitted_enctypes = aes256-cts-hmac-sha1-96 rc4-hmac des-cbc-crc des-cbc-md5
]]><![CDATA[
[realms]
    EXAMPLE.LOCAL = {
        kdc = dc1.example.local
        kdc = dc2.example.local
        admin_server = dc1.example.local
        default_domain = example.local
    }
]]><![CDATA[
[domain_realm]
    .example.local = EXAMPLE.LOCAL
    example.local = EXAMPLE.LOCAL]]></screen><para><emphasis role="strong">Important notice:</emphasis> One should use &quot;Windows 2008 with AES&quot; if available. This is not just important for security reasons, but you might also experience problems when using the DNS name of the squid server instead of the IP address. </para><para>Example error messages regarding this issue may look like this: </para><screen><![CDATA[ERROR: Negotiate Authentication validating user. Error returned 'BH gss_accept_sec_context() failed: Unspecified GSS failure.  Minor code may provide more information.']]></screen></section><section><title>Install Squid 3</title><para>We install squid 3 now as we need the squid3 directories available. Squid configuration takes places after authentication is configured. On Debian install the <code>squid3 ldap-utils</code> packages. </para></section><section><title>Authentication</title><para>The Proxy uses 4 methods to authenticate clients, Negotiate/Kerberos, Negotiate/NTLM, NTLM and basic authentication.  Markus Moellers negotiate_wrapper is used for the 2 Negotiate methods. </para><section><title>Kerberos</title><para>Kerberos utilises msktutil an Active Directory keytab manager (I presume the name is abbreviated for &quot;Microsoft Keytab Utility&quot;). We need to install some packages that msktutil requires. On Debian install <code>libsasl2-modules-gssapi-mit libsasl2-modules</code> </para><para>Install msktutil - you can find msktutil here &quot;<ulink url="http://fuhm.net/software/msktutil/releases/"/>&quot; </para><para>Initiate a kerberos session to the server with administrator permissions to add objects to AD, update the username where necessary. msktutil will use it to create our kerberos computer object in Active directory. </para><screen><![CDATA[kinit administrator]]></screen><para>It should return without errors. You can see if you succesfully obtained a ticket with: </para><screen><![CDATA[klist]]></screen><para>Now we configure the proxy's kerberos computer account and service principle by running msktutil (remember to update the values with yours). </para><important><para><emphasis role="strong">Important:</emphasis> There are 2 important caveats in regard to the msktutils --computer-name argument. </para><para><code>-computer-name</code> cannot be longer than 15 characters due to netbios name limitations. See this link and this link for further information. </para><para><code>-computer-name</code> must be different from the proxy's hostname so computer account password updates for NTLM and Kerberos do not conflict, see this <ulink url="http://www.squid-cache.org/mail-archive/squid-users/201112/0461.html">link</ulink> for further information. This guide uses -k appended to the hostname. </para></important><para>Execute the msktutil command as follows: </para><screen><![CDATA[msktutil -c -b "CN=COMPUTERS" -s HTTP/squidproxy.example.local -k /etc/squid3/PROXY.keytab \
--computer-name SQUIDPROXY-K --upn HTTP/squidproxy.example.local --server dc1.example.local --verbose]]></screen><important><para><emphasis role="strong">Important:</emphasis>  If you are using a Server 2008 domain then add <code>--enctypes 28</code> at the end of the command </para></important><para>Pay attention to the output of the command to ensure success, because we are using --verbose output you should review it carefully. </para><para>Set the permissions on the keytab so squid can read it. </para><screen><![CDATA[chgrp proxy /etc/squid3/PROXY.keytab
chmod g+r /etc/squid3/PROXY.keytab]]></screen><para>Destroy the administrator credentials used to create the account. </para><screen><![CDATA[kdestroy]]></screen><para>On the Windows Server reset the Computer Account in AD by right clicking on the SQUIDPROXY-K Computer object and select &quot;Reset Account&quot;, then run msktutil as follows to ensure the keytab is updated as expected and that the keytab is being sourced by msktutil from <code>/etc/krb5.conf</code> correctly. This is not completely necessary but is useful to ensure msktutil works as expected. Then run the following: </para><screen><![CDATA[msktutil --auto-update --verbose --computer-name squidproxy-k]]></screen><note><para><emphasis role="strong">Note:</emphasis> Even though the account was added in capital letters, the <code>--auto-update</code> in msktutil requires the <code>--computer-name</code> to be lower case. </para></note><para>If the keytab is not found try adding <code>-k /etc/squid3/PROXY.keytab</code> to the command to see if it works and then troubleshoot until resolved or users will not be able to authenticate with Squid. </para><para>Add the following to cron so it can automatically updates the computer account in active directory when it expires (typically 30 days). Pipe it through logger so I can see any errors in syslog if necessary. As stated msktutil uses the default <code>/etc/krb5.conf</code> file for its paramaters so be aware of that if you decide to make any changes in it. </para><screen><![CDATA[00 4  *   *   *     msktutil --auto-update --verbose --computer-name squidproxy-k | logger -t msktutil]]></screen><para>Edit squid3's init script to export the <code>KRB5_KTNAME</code> variable so squid knows where to find the kerberos keytab. </para><para>On Debian the simplest way to do that is as follows: </para><para>Add the following configuration to <code>/etc/default/squid3</code> </para><screen><![CDATA[KRB5_KTNAME=/etc/squid3/PROXY.keytab
export KRB5_KTNAME]]></screen></section><section><title>NTLM</title><para>Install Samba and Winbind.  On Debian install <code>samba winbind samba-common-bin</code> </para><para>Stop the samba and winbind daemons and edit <code>/etc/samba/smb.conf</code> </para><screen><![CDATA[workgroup = EXAMPLE
security = ads
realm = EXAMPLE.LOCAL
]]><![CDATA[
winbind uid = 10000-20000
winbind gid = 10000-20000
winbind use default domain = yes
winbind enum users = yes
winbind enum groups = yes]]></screen><para>Now join the proxy to the domain. </para><screen><![CDATA[net ads join -U Administrator]]></screen><para>Start samba and winbind and test acces to the domain. </para><screen><![CDATA[wbinfo -t]]></screen><para>This command should output something like this: </para><screen><![CDATA[checking the trust secret for domain EXAMPLE via RPC calls succeeded]]></screen><screen><![CDATA[wbinfo -a EXAMPLE\\testuser%'password']]></screen><para>Output should be similar to this. </para><screen><![CDATA[plaintext password authentication succeeded
challenge/response password authentication succeeded]]></screen><para>Set Permissions so the proxy user account can read <code>/var/run/samba/winbindd_privileged</code>. </para><screen><![CDATA[gpasswd -a proxy winbindd_priv]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-error.png" width="16"/></imageobject><textobject><phrase>{X}</phrase></textobject></inlinemediaobject> on Debian an Ubuntu systems there may also be a <emphasis>/var/lib/samba/winbindd_privileged</emphasis> directory created by the winbind and ntlm_auth tools with root ownership. The group of that folder needs to be changed to match the /var/run/samba/winbindd_privileged location. </para></listitem></itemizedlist><para>append the following to cron to regularly change the computer account password - Wiki note: Need to research if Samba does this automatically. </para><screen><![CDATA[05  4  *   *   *     net rpc changetrustpw -d 1 | logger -t changetrustpw]]></screen></section><section><title>Basic</title><para>In order to use basic authentication by way of LDAP we need to create an account with which to access Active Directory. </para><para>In Active Directory create a user called &quot;Squid Proxy&quot; with the logon name <ulink url="mailto:squid@example.local">squid@example.local</ulink>. </para><para>Ensure the following is true when creating the account. </para><itemizedlist><listitem><para>User must change password at next logon Unticked </para></listitem><listitem><para>User cannot change password Ticked </para></listitem><listitem><para>Password never expires Ticked </para></listitem><listitem><para>Account is disabled Unticked </para></listitem></itemizedlist><para>Create a password file used by squid for ldap access and secure the file permissions (substitute the word &quot;squidpass&quot; below with your password). </para><screen><![CDATA[echo 'squidpass' > /etc/squid3/ldappass.txt
chmod o-r /etc/squid3/ldappass.txt
chgrp proxy /etc/squid3/ldappass.txt]]></screen></section></section><section><title>Install negotiate_wrapper</title><para>Firstly we need to install negotiate_wrapper. Install the necessary build tools on Debian intall <code>build-essential linux-headers-$(uname -r)</code> Then compile and install. </para><screen><![CDATA[cd /usr/local/src/
wget "http://downloads.sourceforge.net/project/squidkerbauth/negotiate_wrapper/negotiate_wrapper-1.0.1/negotiate_wrapper-1.0.1.tar.gz"
tar -xvzf negotiate_wrapper-1.0.1.tar.gz
cd negotiate_wrapper-1.0.1/
./configure
make
make install]]></screen></section><section><title>squid.conf</title><para>Then setup squid and it's associated config files. </para><para>Add the following to your <code>squid.conf</code>. </para><para>Study and update the following text carefully, replacing the example content with your networks configuration - if you get something wrong your proxy will not work. </para><screen><![CDATA[### /etc/squid3/squid.conf Configuration File ####
]]><![CDATA[
### negotiate kerberos and ntlm authentication
auth_param negotiate program /usr/local/bin/negotiate_wrapper -d --ntlm /usr/bin/ntlm_auth --diagnostics --helper-protocol=squid-2.5-ntlmssp --domain=EXAMPLE --kerberos /usr/local/bin/squid_kerb_auth -d -s GSS_C_NO_NAME
auth_param negotiate children 10
auth_param negotiate keep_alive off
]]><![CDATA[
### pure ntlm authentication
auth_param ntlm program /usr/bin/ntlm_auth --diagnostics --helper-protocol=squid-2.5-ntlmssp --domain=EXAMPLE
auth_param ntlm children 10
auth_param ntlm keep_alive off
]]><![CDATA[
### provide basic authentication via ldap for clients not authenticated via kerberos/ntlm
auth_param basic program /usr/local/bin/squid_ldap_auth -R -b "dc=example,dc=local" -D squid@example.local -W /etc/squid3/ldappass.txt -f sAMAccountName=%s -h dc1.example.local
auth_param basic children 10
auth_param basic realm Internet Proxy
auth_param basic credentialsttl 1 minute
]]><![CDATA[
### acl for proxy auth and ldap authorizations
acl auth proxy_auth REQUIRED
]]><![CDATA[
### enforce authentication
http_access deny !auth
http_access allow auth
http_access deny all]]></screen></section><section><title>Additional reads</title><itemizedlist><listitem><para><ulink url="http://wiki.bitbinary.com/index.php/Active_Directory_Integrated_Squid_Proxy"/> (by Eliezer Croitoru) </para></listitem></itemizedlist></section></section></article>