<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>ConfigExamples/Intercept/SslBumpWithIntermediateCA</title><revhistory><revision><revnumber>10</revnumber><date>2020-08-31 10:51:18</date><authorinitials>AmosJeffries</authorinitials><revremark>show config detaisl for intercepting all three port mode types</revremark></revision><revision><revnumber>9</revnumber><date>2018-03-12 13:17:57</date><authorinitials>AmosJeffries</authorinitials><revremark>add section on testing the CA chain actually works before use</revremark></revision><revision><revnumber>8</revnumber><date>2017-01-06 10:14:41</date><authorinitials>AmosJeffries</authorinitials><revremark>clarify what the keys map to in the config example, and drop old bug reference</revremark></revision><revision><revnumber>7</revnumber><date>2016-08-20 14:39:02</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>6</revnumber><date>2016-06-14 02:41:28</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>5</revnumber><date>2016-06-03 11:00:09</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>4</revnumber><date>2016-06-03 10:59:30</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>3</revnumber><date>2016-05-01 18:19:08</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>2</revnumber><date>2016-04-25 21:31:28</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>1</revnumber><date>2016-04-25 19:09:41</date><authorinitials>AmosJeffries</authorinitials><revremark>import and refactored from Yuri's explicit-proxy ssl-bump additions. original config design by Jok Thuau</revremark></revision></revhistory></articleinfo><section><title>SSL-Bump using an intermediate CA</title><para><emphasis role="strong">Warning</emphasis>: Any example presented here is provided &quot;as-is&quot; with no support or guarantee of suitability. If you have any further questions about these examples please email the squid-users mailing list. </para><itemizedlist><listitem override="none"><para><emphasis>by Jok Thuau and <ulink url="https://wiki.squid-cache.org/ConfigExamples/Intercept/SslBumpWithIntermediateCA/YuriVoinov#">YuriVoinov</ulink></emphasis> </para></listitem></itemizedlist><section><title>Outline</title><para>You can use an intermediate CA on the proxy for SSL-Bump. </para></section><section><title>Usage</title><para>In case if the intermediate certificate CA2 being compromised, you can simply revoke the intermediate CA2 with primary CA1 and sign new intermediate CA2 without disturb your clients. </para></section><section><title>CA certificate preparation</title><orderedlist numeration="arabic"><listitem><para>Create a <emphasis role="strong">root CA</emphasis> with CRL URL encoded in CA1. This CRL URL needs to be reachable by your clients. </para></listitem><listitem><para>Use the CA1 to sign an intermediate CA2, which will be used on the proxy for signing mimicked certificates. </para><itemizedlist><listitem override="none"><para>For example in the config below we call this private key <emphasis>signingCA.key</emphasis>. </para></listitem></itemizedlist></listitem><listitem><para>install primary CA1 public key onto clients. </para><itemizedlist><listitem override="none"><para>For example in the config below we call this public key (cert) <emphasis>signingCA.crt</emphasis>. </para></listitem></itemizedlist></listitem><listitem><para>prepare a public keys file which contains concatenated intermediate CA2 followed by root CA1 in PEM format. </para><itemizedlist><listitem override="none"><para>For example in the config below we call this <emphasis>chain.pem</emphasis>. </para></listitem></itemizedlist></listitem></orderedlist><para>Now Squid can send the intermediate CA2 public key with root CA1 to client and does not need to install intermediate CA2 to clients. </para></section><section><title>Squid Configuration File</title><section><title>Port 80 traffic</title><para>Paste the configuration file like this: </para><screen><![CDATA[http_port 3127 intercept ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB \
   cert=/etc/squid/signingCA.crt \
   key=/etc/squid/signingCA.key \
   cafile=/etc/squid/chain.pem]]></screen></section><section><title>Port 443 traffic</title><para>Paste the configuration file like this: </para><screen><![CDATA[https_port 3129 intercept ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB \
   cert=/etc/squid/signingCA.crt \
   key=/etc/squid/signingCA.key \
   cafile=/etc/squid/chain.pem]]></screen></section><section><title>Explicit Proxy traffic</title><para>Paste the configuration file like this: </para><screen><![CDATA[http_port 3129 ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB \
   cert=/etc/squid/signingCA.crt \
   key=/etc/squid/signingCA.key \
   cafile=/etc/squid/chain.pem]]></screen></section></section><section><title>Testing it works</title><para>See instructions at <ulink url="https://langui.sh/2009/03/14/checking-a-remote-certificate-chain-with-openssl/"/> for how to verify a remote certificate chain. The tests should be performed against the Squid listening port to verify that it is both generating a valid certificate and sending the correct CA chain sequence. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/ConfigExamples/Intercept/SslBumpWithIntermediateCA/CategoryConfigExample#">CategoryConfigExample</ulink> </para></section></section></article>