<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>ConfigExamples/ContentAdaptation/C-ICAP</title><revhistory><revision><revnumber>70</revnumber><date>2021-07-03 11:21:10</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>69</revnumber><date>2020-03-09 13:44:02</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>68</revnumber><date>2020-03-09 13:42:46</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>67</revnumber><date>2017-04-02 16:33:34</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>66</revnumber><date>2017-03-31 13:52:04</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>65</revnumber><date>2016-12-20 20:00:29</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>64</revnumber><date>2016-10-19 22:11:18</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>63</revnumber><date>2016-10-05 19:07:14</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>62</revnumber><date>2016-10-05 19:06:21</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>61</revnumber><date>2016-09-30 04:58:57</date><authorinitials>AmosJeffries</authorinitials><revremark>add interwiki links, fix some grammar, &quot;c-icap&quot; is a lower case software name.</revremark></revision><revision><revnumber>60</revnumber><date>2016-09-29 19:43:29</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>59</revnumber><date>2016-09-26 18:23:40</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>58</revnumber><date>2016-09-26 15:49:03</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>57</revnumber><date>2016-09-26 15:12:57</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>56</revnumber><date>2016-09-15 16:29:23</date><authorinitials>AlexRousskov</authorinitials><revremark>Explained why the co-existance section is wrong or misleading.</revremark></revision><revision><revnumber>55</revnumber><date>2016-09-15 14:32:51</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>54</revnumber><date>2016-09-13 20:00:21</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>53</revnumber><date>2016-09-11 16:16:57</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>52</revnumber><date>2016-09-11 12:16:29</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>51</revnumber><date>2016-09-11 11:00:41</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>50</revnumber><date>2016-09-10 20:27:52</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>49</revnumber><date>2016-09-10 19:57:21</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>48</revnumber><date>2016-09-10 19:56:03</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>47</revnumber><date>2016-09-10 19:53:53</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>46</revnumber><date>2016-09-10 18:12:02</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>45</revnumber><date>2016-09-10 18:08:51</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>44</revnumber><date>2016-09-10 18:05:15</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>43</revnumber><date>2016-09-10 17:58:04</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>42</revnumber><date>2016-08-30 19:32:54</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>41</revnumber><date>2016-06-13 14:31:36</date><authorinitials>AmosJeffries</authorinitials><revremark>ICAP was added in 3.0, not 3.5</revremark></revision><revision><revnumber>40</revnumber><date>2016-06-11 21:27:45</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>39</revnumber><date>2016-05-12 18:31:44</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>38</revnumber><date>2016-05-12 18:29:49</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>37</revnumber><date>2016-05-12 18:26:37</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>36</revnumber><date>2016-05-12 18:23:54</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>35</revnumber><date>2016-05-11 18:41:21</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>34</revnumber><date>2016-05-11 18:30:54</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>33</revnumber><date>2016-05-11 18:25:11</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>32</revnumber><date>2016-05-03 02:50:18</date><authorinitials>AmosJeffries</authorinitials><revremark>how to build squid is system-dependent and detailed elsewhere. also fix grammar and wikilinks</revremark></revision><revision><revnumber>31</revnumber><date>2016-05-02 22:23:09</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>30</revnumber><date>2016-05-02 22:22:06</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>29</revnumber><date>2016-05-02 22:18:47</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>28</revnumber><date>2016-05-02 22:15:56</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>27</revnumber><date>2016-05-02 22:13:56</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>26</revnumber><date>2016-04-12 19:46:30</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>25</revnumber><date>2016-01-12 18:53:40</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>24</revnumber><date>2016-01-12 18:52:00</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>23</revnumber><date>2016-01-12 18:45:38</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>22</revnumber><date>2015-10-27 20:41:23</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>21</revnumber><date>2015-10-27 20:39:35</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>20</revnumber><date>2015-10-27 20:33:07</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>19</revnumber><date>2015-10-14 20:42:49</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>18</revnumber><date>2015-09-13 14:43:04</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>17</revnumber><date>2015-09-07 20:58:15</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>16</revnumber><date>2015-09-07 20:57:17</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>15</revnumber><date>2015-09-04 10:58:10</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>14</revnumber><date>2015-09-04 10:52:20</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>13</revnumber><date>2015-07-26 09:43:06</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>12</revnumber><date>2015-07-26 09:41:26</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>11</revnumber><date>2015-03-04 20:53:22</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>10</revnumber><date>2015-03-04 20:37:21</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>9</revnumber><date>2015-03-04 17:30:36</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>8</revnumber><date>2015-03-04 17:28:11</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>7</revnumber><date>2015-03-04 17:23:43</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>6</revnumber><date>2015-03-03 21:33:07</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>5</revnumber><date>2015-03-03 21:17:26</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>4</revnumber><date>2015-03-03 21:13:51</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>3</revnumber><date>2015-03-03 21:12:52</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>2</revnumber><date>2015-01-23 13:48:52</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>1</revnumber><date>2015-01-22 19:21:56</date><authorinitials>YuriVoinov</authorinitials></revision></revhistory></articleinfo><section><title>Using c-icap for proxy content antivirus checking on-the-fly</title><itemizedlist><listitem override="none"><para><emphasis>by <ulink url="https://wiki.squid-cache.org/ConfigExamples/ContentAdaptation/C-ICAP/YuriVoinov#">YuriVoinov</ulink></emphasis> </para></listitem></itemizedlist><para><emphasis role="strong">Warning</emphasis>: Any example presented here is provided &quot;as-is&quot; with no support or guarantee of suitability. If you have any further questions about these examples please email the squid-users mailing list. </para><section><title>Outline</title><para>For <ulink url="https://wiki.squid-cache.org/ConfigExamples/ContentAdaptation/C-ICAP/Squid-3.0#">Squid-3.0</ulink> and later we can use ICAP for content filtering or antivirus checking. This config example describes how to scan for viruses on-the-fly using <ulink url="http://squidclamav.darold.net/">squidclamav</ulink> antivirus module in combination with <ulink url="http://www.clamav.net/index.html">ClamAV antivirus</ulink> service. It is a bit different with <ulink url="http://squidclamav.darold.net/config.html">recommended squidclamav configuration</ulink> and adapted for <ulink url="https://wiki.squid-cache.org/ConfigExamples/ContentAdaptation/C-ICAP/Squid-3.4#">Squid-3.4</ulink> releases and above with latest configuration changes. </para></section><section><title>Usage</title><para>This will be useful both for interception and explicit proxies. With proper ClamAV configuration verification brings almost no noticeable delay and performed with acceptable latency. </para></section><section><title>Building c-icap server</title><para>Download latest c-icap sources from <ulink url="http://c-icap.sourceforge.net/download.html">here</ulink>. (Changelog is <ulink url="https://sourceforge.net/p/c-icap/news">here</ulink>). For antivirus checking you do not need BerkeleyDB support. Then configure as shown below and make. </para><screen><![CDATA[# 32 bit
./configure 'CXXFLAGS=-O2 -m32 -pipe' 'CFLAGS=-O2 -m32-pipe' --enable-large-files --without-bdb --prefix=/usr/local
# 64 bit
./configure 'CXXFLAGS=-O2 -m64 -pipe' 'CFLAGS=-O2 -m64 -pipe' --without-bdb --prefix=/usr/local
make/gmake
make/gmake install-strip]]></screen></section><section><title>Configuring and run c-icap server</title><para>Edit c-icap.conf as follows: </para><screen><![CDATA[PidFile /var/run/c-icap/c-icap.pid
CommandsSocket /var/run/c-icap/c-icap.ctl
StartServers 1
MaxServers 20
MaxRequestsPerChild  100
Port 1344 
User squid
Group squid
ServerAdmin yourname@yourdomain
TmpDir /tmp
MaxMemObject 131072
DebugLevel 0
ModulesDir /usr/local/lib/c_icap
ServicesDir /usr/local/lib/c_icap
LoadMagicFile /usr/local/etc/c-icap.magic
]]><![CDATA[
acl localhost src 127.0.0.1/255.255.255.255
acl PERMIT_REQUESTS type REQMOD RESPMOD
icap_access allow localhost PERMIT_REQUESTS
icap_access deny all
]]><![CDATA[
ServerLog /var/log/i-cap_server.log
AccessLog /var/log/i-cap_access.log]]></screen><para>Edit paths if necessary and start c-icap server. Add startup script to your OS. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: <ulink url="http://squidclamav.darold.net/news.html">Method OPTIONS is excluding from scanning</ulink> in latest squidclamav release (starting from squidclamav version 6.14). So, permit access for it not required. </para></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: TmpDir usually set to /var/tmp (this is default). Be <emphasis role="strong">very</emphasis> careful when change it. TmpDir uses for temp files when oblect in memory greater than MaxMemObject. And this temp files (CI_TMP_XXXX) remains in TmpDir when processing complete. Schedule housekeeping for TmpDir otherwise free space on /var filesystem can ran out on high loaded servers. </para></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: In some cases you can increase MaxMemObject to increase performance at the cost of some increase in consumption of RAM. Sometimes it is advisable to set this parameter to the maximum value of the logical IO unit for your OS. </para></listitem></itemizedlist></section><section><title>Antivirus checking with c-icap, ClamAV daemon and Squidclamav</title><para>Of course, this installation requires more resources, especially when installing on single host. But also provides more flexibility and - in some cases - more scalability. </para><section><title>Build, configuring and run ClamAV daemon</title><para>ClamAV including in many repositories and can be got from them. When configuring clamd, be very conservative with options. Defaults is good starting point. I do not recommend using <ulink url="https://developers.google.com/safe-browsing/">SafeBrowsing</ulink> due to performance and memory issues and DetectPUA due to much false-positives. Also take care about antivirus databases updates - it will occurs often enough. I use 24 times per day. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: ClamAV daemon (clamd) is memory consumption service, it uses about 200-300 megabytes in minimal configuration (mainly used to store AV database in memory), it can be higher during deep scans of big archives. So, you can put it on separate node with fast network interconnect with your proxy (this option is valid only when using squidclamav). </para></listitem></itemizedlist><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: It is important to set StreamMaxLength parameter in clamd.conf to the same value as maxsize in squidclamav.conf. </para></listitem></itemizedlist><para>I.e., uncomment and adjust in clamd.conf: </para><screen><![CDATA[StreamMaxLength 5M]]></screen></section><section><title>Build and configuring squidclamav</title><para>Installing <ulink url="http://squidclamav.darold.net/">SquidClamav</ulink> requires that you already have installed the c-icap as explained above. You must provide the installation path of c-icap to the configure command as follow, compile and then install: </para><screen><![CDATA[# 32 bit
./configure 'CXXFLAGS=-O2 -m32 -pipe' 'CFLAGS=-O2 -m32 -pipe' --with-c-icap=/usr/local
# 64 bit
./configure 'CXXFLAGS=-O2 -m64 -pipe' 'CFLAGS=-O2 -m64 -pipe' --with-c-icap=/usr/local
make/gmake
make/gmake install-strip]]></screen><para>this will install the squidclamav.so library into the c-icap modules/services repository. Then add the line below to the c-icap.conf file: </para><screen><![CDATA[Service squidclamav squidclamav.so]]></screen><para>Then adjust squidclamav.conf as follows: </para><screen><![CDATA[maxsize 5000000
]]><![CDATA[
# When a virus is found then redirect the user to this URL
redirect http://<You_proxy_FQDN>:8080/cgi-bin/clwarn.cgi.xx_XX
]]><![CDATA[
# Path to the clamd socket, use clamd_local if you use Unix socket or if clamd
# is listening on an Inet socket, comment clamd_local and set the clamd_ip and
# clamd_port to the corresponding value.
clamd_local /tmp/clamd.socket
#clamd_ip 127.0.0.1
#clamd_port 3310
]]><![CDATA[
# Set the timeout for clamd connection. Default is 1 second, this is a good
# value but if you have slow service you can increase up to 3.
timeout 3
]]><![CDATA[
# Force SquidClamav to log all virus detection or squiguard block redirection
# to the c-icap log file.
logredir 1
]]><![CDATA[
# Enable / disable DNS lookup of client ip address. Default is enabled '1' to
# preserve backward compatibility but you must desactivate this feature if you
# don't use trustclient with hostname in the regexp or if you don't have a DNS
# on your network. Disabling it will also speed up squidclamav.
dnslookup 0
]]><![CDATA[
# Enable / Disable Clamav Safe Browsing feature. You must have enabled the
# corresponding behavior in clamd by enabling SafeBrowsing into freshclam.conf
# Enabling it will first make a safe browsing request to clamd and then the
# virus scan request.
safebrowsing 0
]]><![CDATA[
#
# Here is some defaut regex pattern to have a high speed proxy on system
# with low resources.
#
# Abort AV scan, but not chained program
abort \.google\.*
abort \.youtube\.com
abort \.googlevideo\.com
abort \.ytimg\.com
abort \.yimg\.com
]]><![CDATA[
# Do not scan images
abort ^.*\.([j|J][p|P][?:[e|E]?[g|G]|gif|png|bmp|ico|svg|web[p|m])
abortcontent ^image\/.*$
]]><![CDATA[
# Do not scan text files
abort ^.*\.((cs|d?|m?|p?|r?|s?|w?|x?|z?)h?t?m?(l?)|php[3|5]?|rss|atom|vr(t|ml)|(c|x|j)s[s|t|px]?)
abortcontent ^text\/.*$
abortcontent ^application\/x-javascript$
abortcontent ^application\/javascript$
abortcontent ^application\/json$
]]><![CDATA[
# Do not scan fonts
abort ^.*\.(ttf|eot|woff2?)
abortcontent ^font\/.*$
abortcontent ^application\/x-woff$
abortcontent ^application\/font-woff2?$
abortcontent ^application\/x-font-ttf$
]]><![CDATA[
# Do not scan (streamed) videos and audios
abort ^.*\.(flv|f4f|mp(3|4))
abortcontent ^video\/.*$
abortcontent ^audio\/.*$
abortcontent ^application\/mp4$
]]><![CDATA[
# Do not scan flash files
abort ^.*\.swfx?
abortcontent ^application\/x-shockwave-flash$
]]><![CDATA[
# Do not scan sequence of framed Microsoft Media Server (MMS) data packets
abortcontent ^.*application\/x-mms-framed.*$
]]><![CDATA[
# White list some sites
# Abort both AV and chained program
whitelist clamav\.net
whitelist securiteinfo\.com
whitelist sanesecurity\.com
whitelist clamav\.bofhland\.org
whitelist threatcenter\.crdf\.fr
whitelist \.avast\.*
whitelist \.gdatasoftware\.com
whitelist \.emsisoft\.*
whitelist \.chilisecurity\.*
whitelist pcpitstop\.com
whitelist \.unthreat\.com
whitelist \.preventon\.com
whitelist lavasoft\.com
whitelist \.norton\.com
whitelist \.symantec\.com
whitelist \.symantecliveupdate\.com
whitelist \.kaspersky\.*
whitelist \.drweb\.*
whitelist \.mcafee\.com
whitelist \.fsecure\.com
whitelist \.f-secure\.com
whitelist \.esetnod32\.*
whitelist \.eset\.*
whitelist \.escanav\.com
whitelist \.360totalsecurity\.com
whitelist \.bitdefender\.com
whitelist pckeeper\.com
whitelist \.mysecuritycenter\.com
whitelist \.avira\.com
whitelist \.pandasecurity\.com
whitelist \.vipreantivirus\.com
whitelist \.quickheal\.com
whitelist \.trustport\.*
whitelist \.trustport-ru\.*
whitelist \.sophos\.com
whitelist \.spamfighter\.com
whitelist \.webroot\.com
whitelist \.k7computing\.com
whitelist \.charityantivirus\.com
whitelist \.avg\.com
whitelist \.trendmicro\.*
whitelist \.zonealarm\.com
whitelist \.comodo\.com
#
whitelist update\.microsoft\.com
whitelist update\.microsoft\.com\.akadns\.net 
whitelist download\.windowsupdate\.com
whitelist download\.microsoft\.com
whitelist update\.microsoft\.com
#
whitelist \.oracle\.com
#
whitelist \.shallalist\.de
whitelist opencsw\.org
# See also 'trustuser' and 'trustclient' configuration directives
#]]></screen><para>and restart c-icap server. Finally don't forget to put clwarn.cgi.xx_XX (where xx_XX matches your language) into your web server cgi-bin directory.   </para><para>As whitelist can be big enough, to reduce maintenance and simplify administration you can create separate file contains whitelist regex's and configure squidclamav as follows: </para><screen><![CDATA[# White list some sites
# Abort both AV and chained program
whitelist /usr/local/etc/squidclamav_whitelist]]></screen><para>where squidclamav_whitelist contains: </para><screen><![CDATA[clamav\.net
securiteinfo\.com
sanesecurity\.com
clamav\.bofhland\.org
threatcenter\.crdf\.fr
...]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: You may want to use I-CAP templates for redirection, against squidclamav redirection. In this case you must customize c-icap templates according to your needs. </para></listitem></itemizedlist></section><section><title>Squid Configuration File</title><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> <ulink url="https://wiki.squid-cache.org/ConfigExamples/ContentAdaptation/C-ICAP/Squid-3.4#">Squid-3.4</ulink> and older need to be built with the <emphasis role="strong">--enable-icap-client</emphasis> option. Newer releases have this enabled by default. </para></listitem></itemizedlist><para>Paste the configuration file like this: </para><screen><![CDATA[# -------------------------------------
# Adaptation parameters
# -------------------------------------
icap_enable on
icap_send_client_ip on
icap_send_client_username on
icap_client_username_header X-Authenticated-User
icap_preview_enable on
icap_preview_size 1024
icap_service service_avi_req reqmod_precache icap://localhost:1344/squidclamav bypass=on
adaptation_access service_avi_req allow all
icap_service service_avi_resp respmod_precache icap://localhost:1344/squidclamav bypass=off
adaptation_access service_avi_resp allow all]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> IPv6-enabled operating systems may resolve localhost to the dual-stack enabled ::1 address. If you have troubles with connectivity to IPv4-only ICAP services, just replace <emphasis role="strong">localhost</emphasis> above with <emphasis role="strong">127.0.0.1</emphasis>. </para></listitem></itemizedlist></section></section><section><title>Antivirus checking with c-icap and virus checking module</title><para>Like eCAP, you can perform antivirus checking with libclamav. This not requires daemon and fries up to 500 Mbytes (average) required to run clamd. This can be useful for single-tier setups. </para><para><ulink url="http://sourceforge.net/projects/c-icap/files/c-icap-modules/">I-CAP modules provides</ulink> provides two submodules: using ClamAV daemon, and using libclamav only. </para><section><title>Build c-icap modules</title><para><ulink url="http://sourceforge.net/projects/c-icap/files/c-icap-modules/">Download last modules</ulink>, then configuring and build according your ClamAV and c-icap build types (32 or 64 bit): </para><screen><![CDATA[# 32 bit GCC
./configure 'CFLAGS=-O3 -m32 -pipe' 'CPPFLAGS=-I/usr/local/clamav/include' 'LDFLAGS=-L/usr/local/lib -L/usr/local/clamav/lib'
]]><![CDATA[
# 64 bit GCC
./configure 'CFLAGS=-O3 -m64 -pipe' 'CPPFLAGS=-I/usr/local/clamav/include' 'LDFLAGS=-L/usr/local/lib -L/usr/local/clamav/lib/'
]]><![CDATA[
gmake
gmake install-strip]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> To build submodule clamav_mod (uses libclamav) you can require patch your c-icap installation with last fixes. It uses OpenSSL headers dependency and you can have problems with modules build. This can be workarounded if your system has an older OpenSSL version (i.e. 0.9.8). To do that just add old OpenSSL headers path to CPPFLAGS variable. </para></listitem></itemizedlist></section><section><title>Configuring c-icap modules</title><para>Add non-default parameters into clamav_mod.conf: </para><screen><![CDATA[clamav_mod.TmpDir /var/tmp
clamav_mod.MaxFilesInArchive 1000
clamav_mod.MaxScanSize 5M
clamav_mod.HeuristicScanPrecedence on
clamav_mod.OLE2BlockMacros on]]></screen><para>Add non-default parameters into virus_scan.conf: </para><screen><![CDATA[virus_scan.ScanFileTypes TEXT DATA EXECUTABLE ARCHIVE DOCUMENT
virus_scan.SendPercentData 5
virus_scan.PassOnError on
virus_scan.MaxObjectSize  5M
virus_scan.DefaultEngine clamav
Include clamav_mod.conf]]></screen><para>Add following line at the end of c-icap.conf: </para><screen><![CDATA[Include virus_scan.conf]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: You also must create symbolic link in ClamAV installation directory pointed to ClamAV antivirus database directory, configured for daemon in clamd.conf, for example: </para></listitem></itemizedlist><screen><![CDATA[# ln -s /var/lib/clamav /usr/local/clamav/share/clamav]]></screen><para>Finally restart c-icap service to accept changes. </para></section><section><title>Squid Configuration File</title><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> <ulink url="https://wiki.squid-cache.org/ConfigExamples/ContentAdaptation/C-ICAP/Squid-3.4#">Squid-3.4</ulink> needs to be built with the <emphasis role="strong">--enable-icap-client</emphasis> option. Newer releases have this enabled by default. </para></listitem></itemizedlist><para>Paste the configuration file like this: </para><screen><![CDATA[icap_enable on
icap_service service_avi_req reqmod_precache icap://localhost:1344/virus_scan bypass=off
adaptation_access service_avi_req allow all
icap_service service_avi_resp respmod_precache icap://localhost:1344/virus_scan bypass=on
adaptation_access service_avi_resp allow all]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> When using squidclamav, you must bypass whitelisted sites with Squid ACL's and <ulink url="http://www.squid-cache.org/Doc/config/adaptation_access#">adaptation_access</ulink> directives. Also you can customize virus_scan module templates to your language etc. </para></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-error.png" width="16"/></imageobject><textobject><phrase>{X}</phrase></textobject></inlinemediaobject> Also beware: without clamd you will have the same 300-500 megabytes of loaded AV database to one of c-icap process with libclamav. <inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/smile4.png" width="15"/></imageobject><textobject><phrase>;)</phrase></textobject></inlinemediaobject> </para></listitem></itemizedlist></section></section><section><title>Testing your installation</title><para>Point your client machine behind proxy to <ulink url="http://www.eicar.org/download/eicar_com.zip">EICAR</ulink> test virus and make sure you're get redirected to warning page. </para><para>For really big installations you can place all checking infrastructure components on separate nodes - i.e. proxy, c-icap server, ClamAV. That's all, folks! <inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/smile4.png" width="15"/></imageobject><textobject><phrase>;)</phrase></textobject></inlinemediaobject> </para></section><section><title>DNSBL filtering support</title><para>In case of paranoia, you can also enable DNSBL URL checking support to your c-icap compatible setup. </para><para>To do this you requires to download and install <ulink url="https://sourceforge.net/projects/c-icap/files/c-icap-modules/0.4.x/">c-icap modules</ulink>: </para><screen><![CDATA[# 32 bit GCC
./configure 'CFLAGS=-O3 -m32 -pipe' 'CPPFLAGS=-I/usr/local/clamav/include' 'LDFLAGS=-L/usr/local/lib -L/usr/local/clamav/lib'
]]><![CDATA[
# 64 bit GCC
./configure 'CFLAGS=-O3 -m64 -pipe' 'CPPFLAGS=-I/usr/local/clamav/include' 'LDFLAGS=-L/usr/local/lib -L/usr/local/clamav/lib'
]]><![CDATA[
gmake
gmake install-strip]]></screen><para>then add this to your c-icap.conf file: </para><screen><![CDATA[Module common dnsbl_tables.so
Include srv_url_check.conf]]></screen><para>Adjust srv_url_check.conf as follows: </para><screen><![CDATA[Service url_check srv_url_check.so
]]><![CDATA[
url_check.LookupTableDB whitelist domain hash:/usr/local/etc/domain.whitelist "Whitelist"
url_check.LookupTableDB blackuribl domain dnsbl:black.uribl.com
]]><![CDATA[
url_check.Profile default pass whitelist
url_check.Profile default block blackuribl
url_check.Profile default pass ALL
]]><![CDATA[
url_check.DefaultAction pass AddXHeader "X-Next-Services"]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: Using whitelist is good idea for performance reasons. It is plain text file with 2nd level domain names. All hostnames beyong this domains will be pass. Also setup DNS cache is also great idea to improve performance. </para></listitem></itemizedlist><para>and add this to your squid.conf: </para><screen><![CDATA[# DNSBL service
# Requires to enable "Module common dnsbl_tables.so" in c-icap.conf,
# and install and configure c-icap modules!
icap_service service_dnsbl_req reqmod_precache icap://localhost:1344/url_check bypass=on
adaptation_access service_dnsbl_req allow all]]></screen><para>Finally you must restart c-icap service and restart your squid. That's basically all. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: Add DNSBL ICAP service <emphasis role="strong">before</emphasis> ClamAV antivirus service. </para></listitem></itemizedlist><para>When using squidclamav AV service, can be better to create adaptation chain on requests, like this: </para><screen><![CDATA[icap_enable on
icap_send_client_ip on
icap_send_client_username on
icap_client_username_header X-Client-Username
icap_preview_enable on
icap_preview_size 1024
icap_service_failure_limit -1
# DNSBL service
# Requires to enable "Module common dnsbl_tables.so" in c-icap.conf
icap_service service_dnsbl_req reqmod_precache icap://localhost:1344/url_check bypass=on routing=on
# ClamAV service
icap_service service_avi_req reqmod_precache icap://localhost:1344/squidclamav bypass=on
]]><![CDATA[
adaptation_service_chain svcRequest service_dnsbl_req service_avi_req
adaptation_access svcRequest allow all
]]><![CDATA[
icap_service service_avi_resp respmod_precache icap://localhost:1344/squidclamav
adaptation_access service_avi_resp allow all]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> When using DNSBL, it is recommended to set up a DNS cache on the c-icap host for performance. </para></listitem></itemizedlist></section><section><title>Performance and tuning</title><para>In practice, configuration with clamd and squidclamav is fastest. In fact, squidclamav using INSTREAM to perform AV checks is the best way. You may need only adjust the amount of the workers in the c-icap service according to your load. You will have only two bottlenecks - the interaction of your proxy server with c-icap and interaction of c-icap with antivirus service. You need to reduce latency of these interactions to the minimum possible. </para><para>In some cases, placing all services on a single host is not a good idea. High-load setups must be separated between tiers. </para><itemizedlist><listitem><para>Do not do extra work - use white lists where possible. </para></listitem><listitem><para>Avoid overload - especially in the case of all services installed on a single host. </para></listitem><listitem><para>Reduce memory consumption as possible. Do not set high clamd system limits - these increases latency and memory consumption and can lead to a system crash during peak hours. </para></listitem><listitem><para>Use chains to adapt and customize the sequence correctly, and make correct access - so as not to overload the individual stages of unnecessary work. </para></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> c-icap workers produces high CPU load during scanning in all cases. You must minimize scanning as much as possible. Do not scan all data types. Do not scan trusted sites. And do not try to scan Youtube videos, of course. <inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/smile.png" width="15"/></imageobject><textobject><phrase>:)</phrase></textobject></inlinemediaobject> </para></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> On some Solaris setups you can get performance gain by using libmtmalloc for c-icap processes. Just add <emphasis>-lmtmalloc</emphasis> to CFLAGS and CXXFLAGS when configuring. This also can reduce memory lock contention on multi-core CPU boxes. This solution can also reduce the memory consumption problem for clamd. </para></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Clamd with custom databases (<ulink url="https://www.securiteinfo.com/">SecuriteInfo</ulink>, etc.) or latest version (0.102.x) uses 700 megabytes of RAM and above. Better in this case to use separate servers. </para></listitem></itemizedlist><section><title>Multi-tier setups</title><para>Due to last ClamAV utilizes a lot of memory (up to 1 Gb RAM), multi-tier setups can be better. </para><para>To build this, keep in mind: </para><para>. <inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> c-icap should remain on squid's tier; due to squid connectivity with c-icap over TCP is non-reliable. </para><para>. <inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> squidclamav will talk with clamd via TCP; just modify squidclamav.conf and restart c-icap: </para><screen><![CDATA[  clamd_ip your_clamav_tier_ip
  clamd_port 3310]]></screen><para>. <inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Comment out clamd_local in squidclamav.conf. </para><para>. <inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> On ClamAV tier uncomment this parameter in clamd.conf and restart daemon: </para><screen><![CDATA[  TCPSocket 3310]]></screen><para>. <inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Don't forget to open TCP port 3310 on ClamAV tier firewall. </para></section><section><title>C-ICAP monitoring</title><para>To monitor some runtime statistics from C-ICAP, you can use solution, as described <ulink url="https://sourceforge.net/p/c-icap/wiki/faqcicap/">here</ulink> with some additions and corrections. </para><para>You can use both CLI and web interface to monitor C-ICAP via built-in info service. </para><para>To use CLI, use this command (or add it as shell alias): </para><screen><![CDATA[/usr/local/bin/c-icap-client -s "info?view=text" -i localhost -p 1344 -req use-any-url]]></screen><para>or, as shell alias: </para><screen><![CDATA[alias icap_stat='c-icap-client -s '\''info?view=text'\'' -i localhost -p 1344 -req use-any-url']]></screen><para>The result will looks as shown: </para><screen><![CDATA[ICAP server:localhost, ip:127.0.0.1, port:1344
]]><![CDATA[
Running Servers Statistics
===========================
Children number: 3
Free Servers: 27
Used Servers: 3
Started Processes: 5
Closed Processes: 2
Crashed Processes: 2
Closing Processes: 0
]]><![CDATA[
Child pids: 24689 15427 4947
Closing children pids:
Semaphores in use
         sysv:accept/4
         sysv:children-queue/5
]]><![CDATA[
]]><![CDATA[
Shared mem blocks in use
         sysv:kids-queue/30 13 kbs
]]><![CDATA[
]]><![CDATA[
]]><![CDATA[
General Statistics
==================
REQUESTS : 44501
REQMODS : 39336
RESPMODS : 5071
OPTIONS : 94
FAILED REQUESTS : 5
ALLOW 204 : 44245
BYTES IN : 25625 Kbs 486 bytes
BYTES OUT : 5679 Kbs 536 bytes
HTTP BYTES IN : 16232 Kbs 612 bytes
HTTP BYTES OUT : 212 Kbs 887 bytes
BODY BYTES IN : 2621 Kbs 532 bytes
BODY BYTES OUT : 192 Kbs 288 bytes]]></screen><para>To get same info via web, just add this lines in squid.conf and reconfigure: </para><screen><![CDATA[# ICAP info service. URL: http://icap.info
acl infoaccess dstdomain icap.info
icap_service service_info reqmod_precache 1 icap://localhost:1344/info
adaptation_service_set class_info service_info
adaptation_access class_info allow infoaccess
adaptation_access class_info deny all]]></screen><para>Use url above to access stats page. </para><para>Here is also Munin plugins for C-ICAP monitoring (performance-related /runtime stats): </para><para><ulink url="https://wiki.squid-cache.org/ConfigExamples/ContentAdaptation/C-ICAP/ConfigExamples/ContentAdaptation/C-ICAP?action=AttachFile&amp;do=get&amp;target=icap_stats">icap_stats</ulink> <ulink url="https://wiki.squid-cache.org/ConfigExamples/ContentAdaptation/C-ICAP/ConfigExamples/ContentAdaptation/C-ICAP?action=AttachFile&amp;do=get&amp;target=icap_sem">icap_sem</ulink> <ulink url="https://wiki.squid-cache.org/ConfigExamples/ContentAdaptation/C-ICAP/ConfigExamples/ContentAdaptation/C-ICAP?action=AttachFile&amp;do=get&amp;target=icap_mem">icap_mem</ulink> </para></section></section><section><title>Troubleshooting</title><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> When upgrading c-icap server, you also need (in most cases) to rebuild squidclamav to aviod possible API incompatibility. </para></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> In case of c-icap permanently restarts, increase DebugLevel in c-icap.conf and check ServerLog first. Beware, DebugLevel 0 is production value, which can mask any problems during tune up. </para></listitem></itemizedlist><section><title>c-icap/eCAP co-existance</title><para>To apply multiple adaptation services to the same transaction at the same vectoring point, one must use <ulink url="http://www.squid-cache.org/Doc/config/adaptation_service_chain#">adaptation_service_chain</ulink>. Adaptation order is often important from adaptation logic or performance point of view, but Squid supports any order of chained services. Squid adaptation chaining code does not even know the difference between ICAP and eCAP! For example, an <ulink url="http://www.squid-cache.org/Doc/config/adaptation_service_chain#">adaptation_service_chain</ulink> containing an ICAP service followed by an eCAP service, followed by another ICAP service is supported. </para><para>When you require both c-icap and eCAP in one Squid's instance, you must remember: order of adaptation service/chain definitions and <ulink url="http://www.squid-cache.org/Doc/config/adaptation_access#">adaptation_access</ulink> ACL's is important. Adaptation logic defines in adaptation service default order of preference, in <ulink url="http://www.squid-cache.org/Doc/config/adaptation_access#">adaptation_access</ulink> directives define which services or chains are able to be used for the transaction being considered. In some cases, adaptation actions chain can be mutually exclusive. So, be careful with adaptation configuration. Thoroughly test adaptation logic. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: The simplest case is to chain adaptations with the same access scheme. When access scheme is different for chained adaptations, use <ulink url="http://www.squid-cache.org/Doc/config/adaptation_access#">adaptation_access</ulink> in correct sequence to achieve required adaptation goals.  </para></listitem></itemizedlist></section></section></section></article>