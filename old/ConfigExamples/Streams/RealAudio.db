<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>ConfigExamples/Streams/RealAudio</title><revhistory><revision><revnumber>2</revnumber><date>2010-02-19 10:50:29</date><authorinitials>FrancescoChemolli</authorinitials><revremark>Fixed dangling wiki-links</revremark></revision><revision><revnumber>1</revnumber><date>2009-04-01 23:47:45</date><authorinitials>AmosJeffries</authorinitials><revremark>import from FAQ page, some cleanup</revremark></revision></revhistory></articleinfo><section><title>Media Streams: How can I proxy and cache Real Audio?</title><itemizedlist><listitem override="none"><para>by <emphasis>Rodney van den Oever</emphasis> and <emphasis>James R Grinter</emphasis> </para></listitem></itemizedlist><para><emphasis role="strong">Warning</emphasis>: Any example presented here is provided &quot;as-is&quot; with no support or guarantee of suitability. If you have any further questions about these examples please email the squid-users mailing list. </para><section><title>Outline</title><para>HTTP is an alternative delivery mechanism introduced with version 3 players, and it allows a reasonable approximation to &quot;streaming&quot; data - that is playing it as you receive it. </para><para>It isn't available in the general case: only if someone has made the realaudio file available via an HTTP server, or they're using a version 4 server, they've switched it on, and you're using a version 4 client. If someone has made the file available via their HTTP server, then it'll be cachable. Otherwise, it won't be (as far as we can tell.) </para><para>The more common RealAudio link connects via their own <emphasis>pnm:</emphasis> protocol and is transferred using this proprietary protocol (via TCP or UDP) and not using HTTP. It can't be cached nor proxied by Squid, and requires something such as the simple proxy that Progressive Networks themselves have made available, if you're in a firewall/no direct route situation. Their product does not cache (and I don't know of any software available that does.) </para><para>Some confusion arises because there is also a configuration option to use an HTTP proxy (such as Squid) with the RealAudio/RealVideo players. This is because the players can fetch the &quot;.ram&quot; file that contains the <emphasis>pnm:</emphasis> reference for the audio/video stream. They fetch that .ram file from an HTTP server, using HTTP. </para></section><section><title>Squid Configuration File</title><para>Note that the first request is a POST, and the second has a '?' in the URL, so standard Squid configurations would treat it as non-cachable. It also looks rather &quot;magic.&quot; </para><para>Paste the configuration file like this: </para><screen><![CDATA[acl GET method GET
acl POST method POST
]]><![CDATA[
acl RealAudio_url url_path_regex /SmpDsBhgRl(.*)
acl RealAudio_mime req_mime_type application/x-pncmd]]></screen><itemizedlist><listitem override="none"><para><emphasis>NP:</emphasis> The URL-Path regex in this is case-sensitive. DO NOT use the <emphasis role="strong">-i</emphasis> option on this pattern. </para></listitem></itemizedlist><section><title>to block the media streams ...</title><para>Use the ACL above in <emphasis role="strong">http_access</emphasis>: </para><screen><![CDATA[http_access deny GET RealAudio_url
http_access deny POST RealAudio_mime]]></screen></section><section><title>to cache the media stream ...</title><para>POST are not cacheable by default. To enable caching of RealAudio POST: </para><screen><![CDATA[cache allow POST RealAudio_mime]]></screen><para>The followup GET request is a Dynamic URL.  Squid-3.0 and earlier come with defaults which prevents dynamic content being cached. This needs to be removed in order to cache the stream data GET request. </para><para>see <ulink url="https://wiki.squid-cache.org/ConfigExamples/Streams/RealAudio/ConfigExamples/DynamicContent#">dynamic content</ulink> configuration example for how to cache this. </para></section></section><section><title>Real Audio Configuration</title><itemizedlist><listitem><para>Point the RealPlayer at your Squid server's HTTP port (e.g. 3128). </para></listitem><listitem><para>Using the Preferences-&gt;Transport tab, select <emphasis>Use specified transports</emphasis> and with the <emphasis>Specified Transports</emphasis> button, select use <emphasis>HTTP Only</emphasis>. </para></listitem></itemizedlist></section><section><title>Real Audio documentation</title><para>The <emphasis>Real Player</emphasis>(and <emphasis>Real Player Plus</emphasis>) manual states: </para><screen><![CDATA[Use HTTP Only
Select this option if you are behind a firewall and cannot
receive data through TCP.  All data will be streamed through
HTTP.
]]><![CDATA[
Note:  You may not be able to receive some content if you select
this option.]]></screen><para>Again, from the documentation: </para><screen><![CDATA[RealPlayer 4.0 identifies itself to the firewall when making a
request for content to a ''RealServer''.  The following string is
attached to any URL that the Player requests using HTTP GET:
]]><![CDATA[
/SmpDsBhgRl
]]><![CDATA[
Thus, to identify an HTTP GET request from the RealPlayer, look
for:
]]><![CDATA[
http://[^/]+/SmpDsBhgRl
]]><![CDATA[
The Player can also be identified by the mime type in a POST to
the RealServer.  The RealPlayer POST has the following mime
type:
]]><![CDATA[
"application/x-pncmd"]]></screen><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/ConfigExamples/Streams/RealAudio/CategoryConfigExample#">CategoryConfigExample</ulink> </para></section></section></article>