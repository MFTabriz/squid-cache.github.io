<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>SquidCodingGuidelines/AutoConf</title><revhistory><revision><revnumber>2</revnumber><date>2020-02-11 23:49:08</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>1</revnumber><date>2020-02-11 23:47:25</date><authorinitials>AmosJeffries</authorinitials><revremark>separated autoconf style details from SquidCodingGuidelines</revremark></revision></revhistory></articleinfo><itemizedlist><listitem><para>Back to <ulink url="https://wiki.squid-cache.org/SquidCodingGuidelines/AutoConf/SquidCodingGuidelines#">SquidCodingGuidelines</ulink>. </para></listitem><listitem><para>Back to <ulink url="https://wiki.squid-cache.org/SquidCodingGuidelines/AutoConf/DeveloperResources#">DeveloperResources</ulink>. </para></listitem></itemizedlist><section><title>Autoconf Syntax Guidelines</title><para>The current standard for both <emphasis role="strong">--enable</emphasis> and <emphasis role="strong">--with</emphasis> flags is: </para><itemizedlist><listitem><para><emphasis role="strong">yes</emphasis> means force-enable, fail the build if not possible. </para></listitem><listitem><para><emphasis role="strong">no</emphasis> means force-disable, </para></listitem><listitem><para><emphasis role="strong">auto</emphasis> means try to enable, disable if some required part is not available. </para></listitem></itemizedlist><para>For <emphasis role="strong">--with</emphasis> flags, everything else is usually considered as a path to be used. Though in some cases is a global constant. </para><para>For <emphasis role="strong">--enable</emphasis> flags, may contain a list of the components modular pieces to be enabled. In which case: </para><itemizedlist><listitem><para>being listed means force-enable </para></listitem><listitem><para>being omitted means force-disable </para></listitem></itemizedlist><para>For further details on autoconf macros and conventions, also see <ulink url="https://wiki.squid-cache.org/SquidCodingGuidelines/AutoConf/Features/ConfigureInRefactoring#">Features/ConfigureInRefactoring</ulink> </para><section><title>Component Macros in Autoconf</title><para>Squid uses autoconf defined macros to eliminate experimental or optional components at build time. </para><itemizedlist><listitem><para>name for variables passed to automake code should start with ENABLE_ </para></listitem><listitem><para>name for build/no-build variables passed to C++ code should start with USE_ </para></listitem><listitem><para>name for variables passed to either automake or C++ containing default values should start with DEFAULT_ </para><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> In the event of a clash or potential clash with system variables tack SQUID_ after the above prefix. ie ENABLE_SQUID_ or USE_SQUID_ </para></listitem></itemizedlist><screen><![CDATA[# For --enable-foo / --disable-foo
]]><![CDATA[
AC_CONDITIONAL([ENABLE_FOO],[test "x${enable_foo:=yes}" = "xyes"])
]]><![CDATA[
SQUID_DEFINE_BOOL(USE_FOO,${enable_foo:=no},[Whether to enable foo.])
]]><![CDATA[
DEFAULT_FOO_MAGIC="magic"
AC_SUBST(DEFAULT_FOO_MAGIC)]]></screen></section></section></article>