<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>ProgrammingGuide/LibraryAutoconf</title><revhistory><revision><revnumber>3</revnumber><date>2014-06-09 06:53:38</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>2</revnumber><date>2014-06-09 06:44:17</date><authorinitials>AmosJeffries</authorinitials></revision><revision><revnumber>1</revnumber><date>2014-06-09 06:44:03</date><authorinitials>AmosJeffries</authorinitials><revremark>initial draft based on GnuTLS, OpenSSL, krb5 development experience</revremark></revision></revhistory></articleinfo><section><title>Autoconf Library Detection guideline</title><para><emphasis>This page is a work in progress. The autoconf template documented here is still evolving and when stable will be turned into a macro.</emphasis> </para><section><title>Overview of Behaviour</title><para>Each library depended on by Squid should have an <emphasis role="strong">AC_WITH()</emphasis> macro defined to permit user disabling, requirement, or replacement of the library. Squid should be capable of quicky detecting the libraries absence and  </para><para>* When the user explicitly specifies <code>--with-foo</code> the libraries absence is a fatal error. </para><para>* When the user specifies <code>--with-foo=PATH</code> the library shall be detected at the specified path. </para><para>* When the user specifies <code>--without-foo</code> no tests for the librarry will be performed, nor will it be used by Squid. </para><para>* When the library is absent API feature tests, hacks and workarounds for the library should not be searched for. This reduces the time ./configure spends performing useless operations. </para></section><section><title>Piece 1: AC_ARG_WITH()</title><para>Use this autoconf provided macro to setup path locations and with_* variables for the library. </para><screen><![CDATA[AC_ARG_WITH(foo,
  AS_HELP_STRING([--without-foo],
                 [Do not use Foo. Default: auto-detect]), [
case "$with_foo" in
  yes|no)
    : # Nothing special to do here
    ;;
  *)
    if test ! -d "$withval" ; then
      AC_MSG_ERROR([--with-foo path does not point to a directory])
    fi
    LIBFOO_PATH="-L$with_foo/lib"
    CXXFLAGS="-I$with_foo/include $CXXFLAGS"
  esac
])
AH_TEMPLATE(USE_FOO,[Foo support is available])]]></screen></section><section><title>Piece 2: Library need check</title><screen><![CDATA[if test "x$with_foo" != "xno"; then
  SQUID_STATE_SAVE(squid_foo_state)
  LIBS="$LIBS $LIBFOO_PATH"]]></screen><para><emphasis role="strong">Piece #3 and #4 goes in here</emphasis> </para><screen><![CDATA[  SQUID_STATE_ROLLBACK(squid_foo_state)
]]><![CDATA[
  if test "x$with_foo" = "xyes" -a "x$LIBFOO_LIBS" = "x"; then
    AC_MSG_ERROR([Required Foo library not found])
  fi
  if test "x$LIBFOO_LIBS" != "x" ; then
    CXXFLAGS="$LIBFOO_CFLAGS $CXXFLAGS"
    FOOLIB="$LIBFOO_PATH $LIBFOO_LIBS"
    AC_DEFINE(USE_FOO,1,[Foo support is available])
    with_foo=yes
  else
    with_foo=no
  fi
fi
AC_MSG_NOTICE([Foo library support: ${with_foo:=auto} ${LIBFOO_PATH} ${LIBFOO_LIBS}])
AC_SUBST(FOOLIB)]]></screen><itemizedlist><listitem><para>Note the absence of AC_CONDITIONAL to setup ENABLE_FOO. If a major feature requires library foo then it should base its determination on the setting in <code>$with_foo</code> only <emphasis role="strong">after</emphasis> these library tests have been performed and set $with_foo to one of yes/no. </para></listitem></itemizedlist></section><section><title>Piece 3: pkg-config and file detections</title><para>Prefer the use of pkg-config to locate library parameters. When provided by the library author they are updated automatically if the build parameters change, and can also do library version detection more accurately. </para><para>The PKG_CHECK_MODULES macro creates the local variables <emphasis role="strong">LIBFOO_CFLAGS</emphasis> and <emphasis role="strong">LIBFOO_LIBS</emphasis> necessary to build against the library. </para><itemizedlist><listitem override="none"><para>Note that the users custom path (if any) is already provided in <emphasis role="strong">CXXFLAGS</emphasis> and <emphasis role="strong">LIBS</emphasis>. </para></listitem><listitem override="none"><para>Note that any changes to the regular *FLAGS or LIBS build variables will be reverted when this check state is rolled back. If necessary the backup detection logics should re-use the pkg-config variables so they can be setup only for binaries using this library. </para></listitem></itemizedlist><para>An example of how to use PKG_CHECK_MODULES: </para><screen><![CDATA[  # auto-detect using pkg-config
  PKG_CHECK_MODULES([LIBFOO],[foo >= 1.0.0],,[
]]><![CDATA[
    ## something went wrong.
    ## try to find the package without pkg-config
]]><![CDATA[
    ## check that the library is actually new enough.
    ## by testing for a 1.0.0+ function which we use
    AC_CHECK_LIB(foo,foo_10_function,[LIBFOO_LIBS="-lfoo"])
  ])]]></screen></section><section><title>Piece 4: header detection</title><para>Check for the library header includes separately. </para><para>This is required as a side effect of the Squid requiremet for HAVE_FOO_H wrapper definitions. The pkg-config tool does not check for them automatically and it makes no sense to do them twice for both its success and failure actions. </para><screen><![CDATA[  if test "x$LIBFOO_LIBS" != "x" ; then
    AC_CHECK_HEADERS(foo.h)
  fi]]></screen></section><section><title>Makefile.am</title><para>Each binary that uses library Foo should include <code> $(FOOLIB) </code> in its LDADD declaration <emphasis role="strong">following</emphasis> the libcompat.la entry and will be linked when relevant. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> for ease of maintenance these FOOLIB LDADD entries should be alphabetical. </para></listitem></itemizedlist><!--rule (<hr>) is not applicable to DocBook--></section></section></article>