<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>EliezerCroitoru/Drafts/MwanLB</title><revhistory><revision><revnumber>64</revnumber><date>2019-08-07 04:07:42</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>63</revnumber><date>2019-07-18 22:17:10</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Adding a little history about Linux Multi-path algorithms</revremark></revision><revision><revnumber>62</revnumber><date>2017-09-17 01:33:18</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Added some detaila on the Linux based Connectaion Tracking on a router and a client machine.</revremark></revision><revision><revnumber>61</revnumber><date>2017-07-15 22:04:06</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Adding couple details on Brocade Stingray Traffic Manager LoadBalancing features.</revremark></revision><revision><revnumber>60</revnumber><date>2017-06-27 00:17:29</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>59</revnumber><date>2017-01-31 17:16:40</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>58</revnumber><date>2017-01-21 18:22:15</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>57</revnumber><date>2017-01-21 17:30:58</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Replaced the golang example due to some changes in the versions of the netfilter library</revremark></revision><revision><revnumber>56</revnumber><date>2017-01-21 12:36:34</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Fixed a duplication of &quot;packge&quot; in the golang helper</revremark></revision><revision><revnumber>55</revnumber><date>2017-01-20 23:28:02</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Adding refrence for peplink products</revremark></revision><revision><revnumber>54</revnumber><date>2017-01-20 23:21:41</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Addition the</revremark></revision><revision><revnumber>53</revnumber><date>2016-12-04 15:34:11</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>52</revnumber><date>2016-11-28 21:23:50</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>51</revnumber><date>2016-11-23 00:31:21</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>50</revnumber><date>2016-11-23 00:25:36</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>49</revnumber><date>2016-11-23 00:05:46</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>48</revnumber><date>2016-11-14 00:25:40</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>47</revnumber><date>2016-10-26 01:50:53</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>46</revnumber><date>2016-10-26 01:46:30</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Fixed a typo</revremark></revision><revision><revnumber>45</revnumber><date>2016-10-26 01:45:41</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>44</revnumber><date>2016-10-26 01:32:50</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>43</revnumber><date>2016-09-04 01:12:00</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Fixed a typo</revremark></revision><revision><revnumber>42</revnumber><date>2016-09-04 01:02:40</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>41</revnumber><date>2016-09-03 19:27:30</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>40</revnumber><date>2016-09-01 20:06:00</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>39</revnumber><date>2016-09-01 20:05:40</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>38</revnumber><date>2016-08-26 13:06:58</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>37</revnumber><date>2016-07-30 18:25:27</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Adding radix tree implementation in GoLang. This would be used as a part of an example of a RealTime LoadBalancing based on marking.</revremark></revision><revision><revnumber>36</revnumber><date>2016-07-24 01:39:12</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>35</revnumber><date>2016-07-23 23:24:39</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Adding some C code example</revremark></revision><revision><revnumber>34</revnumber><date>2016-07-23 21:51:03</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>33</revnumber><date>2016-07-23 18:41:29</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Adding couple useful links with nice examples</revremark></revision><revision><revnumber>32</revnumber><date>2015-06-23 07:44:26</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>31</revnumber><date>2015-02-09 05:09:09</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Addition of load shophos balancing link(not directly related)</revremark></revision><revision><revnumber>30</revnumber><date>2015-01-22 19:42:30</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Fixing the bash script for rp_filter set</revremark></revision><revision><revnumber>29</revnumber><date>2015-01-22 17:29:45</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Change of OS in the testing LAB.</revremark></revision><revision><revnumber>28</revnumber><date>2015-01-21 20:00:27</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>27</revnumber><date>2015-01-19 18:09:53</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>26</revnumber><date>2015-01-19 18:04:04</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Addition of rp_filter set machine globally script</revremark></revision><revision><revnumber>25</revnumber><date>2015-01-19 03:52:18</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>24</revnumber><date>2015-01-19 03:10:04</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>23</revnumber><date>2015-01-19 02:53:26</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>22</revnumber><date>2015-01-19 01:54:41</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>21</revnumber><date>2015-01-19 01:23:59</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>20</revnumber><date>2015-01-18 02:58:09</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Addition of couple examples for nfqueue with iptables</revremark></revision><revision><revnumber>19</revnumber><date>2015-01-18 00:34:33</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>18</revnumber><date>2015-01-17 22:27:37</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>17</revnumber><date>2015-01-17 20:56:56</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>16</revnumber><date>2015-01-17 20:31:06</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>15</revnumber><date>2015-01-17 19:55:07</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>14</revnumber><date>2015-01-17 19:44:28</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>13</revnumber><date>2015-01-17 19:43:14</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>12</revnumber><date>2015-01-10 17:54:26</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>11</revnumber><date>2015-01-10 17:51:12</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>10</revnumber><date>2014-12-04 20:38:09</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>9</revnumber><date>2014-04-10 11:28:50</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>8</revnumber><date>2014-04-09 14:48:21</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>7</revnumber><date>2013-11-19 21:28:49</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>adding a section and fixing typos.</revremark></revision><revision><revnumber>6</revnumber><date>2013-11-04 18:32:02</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Addition of the IPV4 cache linux kernel removal commit.</revremark></revision><revision><revnumber>5</revnumber><date>2013-11-03 05:58:38</date><authorinitials>AmosJeffries</authorinitials><revremark>spaces not permitted in wikilinks</revremark></revision><revision><revnumber>4</revnumber><date>2013-10-31 16:04:08</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>Adding a test scenario for NATed Load-Balancing</revremark></revision><revision><revnumber>3</revnumber><date>2013-10-31 07:36:57</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>2</revnumber><date>2013-10-29 07:24:38</date><authorinitials>Eliezer Croitoru</authorinitials></revision><revision><revnumber>1</revnumber><date>2013-10-28 05:24:22</date><authorinitials>Eliezer Croitoru</authorinitials></revision></revhistory></articleinfo><para>Describe Eliezer Croitoru/Drafts/MwanLB here. </para><section><title>Intoduction to MultiWAN LoadBalancing</title><itemizedlist><listitem><para><emphasis role="strong">Goal</emphasis>: Understanding linux Load-Balancing routing. </para></listitem><listitem><para><emphasis role="strong">Status</emphasis>: 30% </para></listitem><listitem><para><emphasis role="strong">State</emphasis>: DRAFT </para></listitem><listitem><para><emphasis role="strong">Writer</emphasis>: <ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/EliezerCroitoru#">Eliezer Croitoru</ulink> </para></listitem><listitem><para><emphasis role="strong">More</emphasis>:  </para></listitem><listitem><para><emphasis role="strong">Side Effects</emphasis>: A Squid Instances <ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/LoadBalancer#">LoadBalancer</ulink>(Tproxy to Proxy Protocol) </para></listitem></itemizedlist><para>- Introduction to Multi-WAN load balancing. </para><para>There are couple uses for Multiple WAN connections which differ by nature.</para><para> MultiWAN can be there to solve one of two network problems: </para><itemizedlist><listitem><para>High network traffic load </para></listitem><listitem><para>Network failures </para></listitem></itemizedlist><para>The way MultiWAN solutions are being implemented differ from one network environment to another. It's not only about the technical nature but also the purpose of a solution and it's stability. In a case we are talking about a small house, a small office or a small school they will probably will not have ASN under their hands. And it means that there is no need and probably it is not an option to use BGP as routing protocol.</para><para> It's also means that in the mentioned cases the connection will use some kind of NAT to access to the Internet.</para><para> There are pros and cons when implementing MultiWAN behind couple NAT routers. </para><para>Couple things to know about are: </para><itemizedlist><listitem><para>Two connections from the same network can have different SRC-IP at the same second. </para></listitem><listitem><para>Network failure on one port can cause weird side effect on speed and network behavior. </para></listitem></itemizedlist><para>An illustration of a MultiWAN connected network: </para><para><inlinemediaobject><imageobject><imagedata fileref="http://www1.ngtech.co.il/squid/LB1.png"/></imageobject><textobject><phrase>http://www1.ngtech.co.il/squid/LB1.png</phrase></textobject></inlinemediaobject> </para><para>In the above scenario client 192.168.1.1 will try to access 7.7.7.7 HTTP service and when accessing the service the linux router will use the IP address 5.5.5.5.</para><para> When the client 192.168.1.2 will try to access the same service it is not guaranteed that the same IP will be used when accessing the same service on 7.7.7.7.</para><para> It means that two clients from the same network can get access to the same service using different SRC ip address.</para><para> And for those that knows how to read apache logs you will see the next lines in the access.log of the apache service: </para><screen><![CDATA[5.5.5.5 - - [31/Oct/2013:09:17:24 +0200] "GET /robots.txt HTTP/1.1" 404 291 "-" "Mozilla/5.0 (compatible)"
6.6.6.6 - - [31/Oct/2013:09:17:25 +0200] "GET /robots.txt HTTP/1.1" 404 291 "-" "Mozilla/5.0 (compatible)"]]></screen><para>There are couple other options to run and operate MultiWAN Fail-over and Load-balancing But due to the complexity of these setups I will not cover them for now. </para><section><title>What is MultiWAN and MultiPATH?</title><para>The internet which is based on IP networks is a very big and dynamic system.</para><para> While it's software can be kind of “subnetted” to allow an administrative way of managing all these networks Static network topology still makes things easy.</para><para> Since this network is so big wide and dynamic there is a need to allow couple “options” to make it possible for infrastructure to be relocated or “copied”.</para><para> The big need of re-location of an IP network can be real in a case of floods, power-outage, human-error or even a simple temperature drop\rise.</para><para> Since humans has a very long history in the world it can be assumed that no matter how hard the cement and steel will be still there is a need to plan migrations.</para><para> For this specific option to be effective and efficient there was a way to take the Static IP topology and using software to remove any “hardening”  of this network topology structure.</para><para> The administrative force of the Internet divided the Internet into AS(Autonomous System) which allows the admin to look at the network in a level above all these weird numbering scheme that Routers use.</para><para> It then allows the administrative force of the internet to develop a way to use IP in a less static way that it used to be when it was implemented in one room. </para><para>Today these software's allow for an AS, which is basically a human force that has a subnet at hands, to define where through this subnet will be accessed in the IP level.</para><para> Most users of the internet are probably just a bunch of nice guys that do not need an AS but they do get access to the Internet through a company or organization that do apply to the basic requirements which certify it to own an AS.</para><para> The basic requirements for owning or managing a subnet(or AS) are a well trained and\or certified network operators and engineers.</para><para> It can seem like a very simple task for some but since it means becoming a part of a very wide network which is being changed every single moment it is a very complex task.</para><para>A MultiWAN is not like any literal understanding of the &quot;multi&quot; word which is &quot;doubles&quot; this or that.</para><para> The meaning of a Multi in this area is “Two ways to get access to this same WAN network”.</para><para> Once this concept is understood we can clarify that a MultiWAN can also be a MultiPATH which means that the same IP network\subnet can be accessed throw two different ways\roads.</para><para> The main terms that are being used by network and system administrators and engineers about this and related subjects are &quot;<ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/MultiHomed#">MultiHomed</ulink>&quot; and\or &quot;MultiWAN&quot; network in the relation to a specific AS which relates to some subnets.</para><para> A MultiPATH  is the more literal way of defining a network that can access or can be accessed through two different &quot;cables&quot; to or from the Internet. </para><section><title>Reverse Path Filtering</title><para>I have asked myself couple times &quot;What is Reverse Path Filtering?&quot; and there is a literal answer and a technical one.</para><para> For us the technical description would fit.</para><para> The next details requires some basic networking knowledge:</para><para> Assuming that a router should not just pass\forward any packet flows into it reverse path filtering comes to help. The idea is to block traffic that should not be there based on the already known network settings.</para><para> The Linux kernel have 3 options using this filter: none, strict, loose.</para><para> Related or not it is recommended to filter traffic in any case just for security purpose.</para><para>A networking real world example would be a simple router that has two network connections and which doesn't posses a routing daemon. It has two\three or more networks\subnets that are passing throw it and the network interfaces of the device are:</para><itemizedlist><listitem><para>eth0 - 192.168.0.254/24 </para></listitem><listitem><para>eth1 - 192.168.1.254/24 </para></listitem><listitem><para>eth2 - 192.168.2.254/24 </para></listitem><listitem><para>lo0  - 127.0.0.1/8 </para></listitem></itemizedlist><para>A basic logic would be that this router should not pass\forward traffic from networks it doesn't know about such as 7.7.7.0/24.</para><para> If we would add some more routes such as &quot;7.7.7.0/24 via 192.168.0.100&quot; it would be reasonable to receive traffic from 7.7.7.0/24 network on the interface eth0 but not on eth1. So the filter can be applied on eth1 and any packet flowing into this interface with a source address inside the network 7.7.7.0/24 will be dropped. </para><para>The usage of Reverse Path filtering suits only some cases while in many others it will cause major operations issues.</para><para> The basic recommendation is that you better firewall your network or\and in some cases as an alternative to a firewall rules is to throw traffic from a whole subnet into a black-hope.</para><itemizedlist><listitem><para>In cases of Internet Exchange Point unauthorized router peering there are places around the world which the only way to handle these bandits is using FIREWALL or ROUTING rules and as much as I and others are good Admins there are out-there some who do not ask for permission to throw packets at a router and see what happens so beware. </para></listitem></itemizedlist><section><title>Set Reverse Path Filter machine globally script</title><programlisting format="linespecific" language="highlight" linenumbering="numbered" startinglinenumber="1"><lineannotation><![CDATA[#!/bin/bash]]></lineannotation>
<lineannotation></lineannotation><token><![CDATA[if]]></token><![CDATA[ [ -z ]]><phrase><![CDATA["]]></phrase><methodname><![CDATA[$1]]></methodname><phrase><![CDATA["]]></phrase><![CDATA[ ];]]>
<token><![CDATA[then]]></token>
<![CDATA[        ]]><token><![CDATA[echo]]></token><![CDATA[ ]]><phrase><![CDATA["empty value"]]></phrase><![CDATA[;]]>
<![CDATA[        ]]><token><![CDATA[exit]]></token><![CDATA[ 1]]>
<token><![CDATA[else]]></token>
<![CDATA[        ]]><token><![CDATA[echo]]></token><![CDATA[ ]]><phrase><![CDATA["]]></phrase><phrase><![CDATA[is set to ']]></phrase><methodname><![CDATA[$1]]></methodname><phrase><![CDATA[']]></phrase><phrase><![CDATA["]]></phrase><![CDATA[;]]>
<token><![CDATA[fi]]></token>

<token><![CDATA[if]]></token><![CDATA[ [ ]]><phrase><![CDATA["]]></phrase><methodname><![CDATA[$1]]></methodname><phrase><![CDATA["]]></phrase><![CDATA[ != ]]><phrase><![CDATA["0"]]></phrase><![CDATA[ ] && [ ]]><phrase><![CDATA["]]></phrase><methodname><![CDATA[$1]]></methodname><phrase><![CDATA["]]></phrase><![CDATA[ != ]]><phrase><![CDATA["1"]]></phrase><![CDATA[ ] && [ ]]><phrase><![CDATA["]]></phrase><methodname><![CDATA[$1]]></methodname><phrase><![CDATA["]]></phrase><![CDATA[ != ]]><phrase><![CDATA["2"]]></phrase><![CDATA[ ];]]>
<token><![CDATA[then]]></token>
<![CDATA[   ]]><token><![CDATA[echo]]></token><![CDATA[ ]]><phrase><![CDATA["wrong value"]]></phrase>
<![CDATA[   ]]><token><![CDATA[exit]]></token><![CDATA[ 1]]>
<token><![CDATA[fi]]></token>


<token><![CDATA[echo]]></token><![CDATA[ ]]><phrase><![CDATA["]]></phrase><phrase><![CDATA[setting rp_filter globally for => \"]]></phrase><methodname><![CDATA[$1]]></methodname><phrase><![CDATA[\"]]></phrase><phrase><![CDATA["]]></phrase>
<token><![CDATA[for]]></token><![CDATA[ i in ]]><phrase><![CDATA[`]]></phrase><![CDATA[ls /proc/sys/net/ipv4/conf/*/rp_filter]]><phrase><![CDATA[`]]></phrase><![CDATA[;]]>
<token><![CDATA[do]]></token>
<![CDATA[    ]]><token><![CDATA[echo]]></token><![CDATA[ ]]><methodname><![CDATA[$i]]></methodname>
<![CDATA[    ]]><token><![CDATA[echo]]></token><![CDATA[ ]]><phrase><![CDATA["]]></phrase><methodname><![CDATA[$1]]></methodname><phrase><![CDATA["]]></phrase><![CDATA[ >]]><methodname><![CDATA[$i]]></methodname>
<token><![CDATA[done]]></token>
</programlisting></section></section><section><title>Linux Connection Tracking and LB, Advantages and limitations</title><para>On a linux based router which utilizes the connection tracking module it is possible to &quot;track&quot; if a connection from the network clients are already marked or not for both TCP, UDP and couple other protocols. </para><para>However on a Linux client machine the only concept of a connection is on the protocol level ie TCP and not UDP. </para><para>UDP uses datagrams and doesn't have any &quot;connection&quot; orientation in the kernel level. Due to this in the client side UDP packets that are originated from the client\server machine would not be able to rely only on the linux kernel connection tracking to be able to send UDP packets\datagrams using the same route it was received through. </para></section><section><title>NATed Environment</title></section></section><section><title>LoadBalancing general algorithms</title><itemizedlist><listitem override="none"><para>GOALS: failover, equal cost per packet, weighted per packet, equal cost per connection, and weighted per connection balancing </para></listitem></itemizedlist><section><title>Round Robin</title></section><section><title>Weighted Round Robin</title></section><section><title>Least Connections</title><itemizedlist><listitem><para>csv file with established connections per MARK\PATH  </para></listitem></itemizedlist><screen><![CDATA[200, 1
100, 2
300, 3]]></screen><itemizedlist><listitem><para>A simple selection between multiple marks using least used. </para></listitem></itemizedlist><programlisting format="linespecific" language="highlight" linenumbering="numbered" startinglinenumber="1"><lineannotation><![CDATA[#!/usr/bin/env python]]></lineannotation>
<token><![CDATA[import]]></token><![CDATA[ ]]><methodname><![CDATA[csv]]></methodname>
<methodname><![CDATA[i]]></methodname><![CDATA[ = 0]]>
<methodname><![CDATA[selection_least]]></methodname><![CDATA[ = -1]]>
<methodname><![CDATA[selected]]></methodname><![CDATA[ = -1]]>
<token><![CDATA[with]]></token><![CDATA[ ]]><token><![CDATA[open]]></token><![CDATA[(]]><phrase><![CDATA[']]></phrase><phrase><![CDATA[marks_stats.csv]]></phrase><phrase><![CDATA[']]></phrase><![CDATA[, ]]><phrase><![CDATA[']]></phrase><phrase><![CDATA[rb]]></phrase><phrase><![CDATA[']]></phrase><![CDATA[) ]]><token><![CDATA[as]]></token><![CDATA[ ]]><methodname><![CDATA[csvfile]]></methodname><![CDATA[:]]>
<![CDATA[        ]]><methodname><![CDATA[statsreader]]></methodname><![CDATA[ = ]]><methodname><![CDATA[csv]]></methodname><![CDATA[.]]><methodname><![CDATA[reader]]></methodname><![CDATA[(]]><methodname><![CDATA[csvfile]]></methodname><![CDATA[, ]]><methodname><![CDATA[delimiter]]></methodname><![CDATA[=]]><phrase><![CDATA[']]></phrase><phrase><![CDATA[,]]></phrase><phrase><![CDATA[']]></phrase><![CDATA[, ]]><methodname><![CDATA[quotechar]]></methodname><![CDATA[=]]><phrase><![CDATA[']]></phrase><phrase><![CDATA[|]]></phrase><phrase><![CDATA[']]></phrase><![CDATA[)]]>
<![CDATA[        ]]><token><![CDATA[for]]></token><![CDATA[ ]]><methodname><![CDATA[row]]></methodname><![CDATA[ ]]><token><![CDATA[in]]></token><![CDATA[ ]]><methodname><![CDATA[statsreader]]></methodname><![CDATA[:]]>
<![CDATA[                ]]><methodname><![CDATA[i]]></methodname><![CDATA[ = ]]><methodname><![CDATA[i]]></methodname><![CDATA[ + 1]]>
<![CDATA[                ]]><token><![CDATA[if]]></token><![CDATA[ ]]><methodname><![CDATA[selection_least]]></methodname><![CDATA[ == -1:]]>
<![CDATA[                        ]]><methodname><![CDATA[selection_least]]></methodname><![CDATA[ = ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[row]]></methodname><![CDATA[[0])]]>
<![CDATA[                        ]]><methodname><![CDATA[selected]]></methodname><![CDATA[ = ]]><methodname><![CDATA[i]]></methodname>
<![CDATA[                        ]]><token><![CDATA[print]]></token><![CDATA[(]]><phrase><![CDATA["]]></phrase><phrase><![CDATA[Least used is: ]]></phrase><phrase><![CDATA["]]></phrase><![CDATA[ + ]]><token><![CDATA[str]]></token><![CDATA[(]]><methodname><![CDATA[selected]]></methodname><![CDATA[) )]]>
<![CDATA[                        ]]><token><![CDATA[continue]]></token>
<![CDATA[                ]]><token><![CDATA[if]]></token><![CDATA[ ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[row]]></methodname><![CDATA[[0]) < ]]><methodname><![CDATA[selection_least]]></methodname><![CDATA[:]]>
<![CDATA[                        ]]><methodname><![CDATA[selection_least]]></methodname><![CDATA[ = ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[row]]></methodname><![CDATA[[0])]]>
<![CDATA[                        ]]><methodname><![CDATA[selected]]></methodname><![CDATA[ = ]]><methodname><![CDATA[i]]></methodname>
<![CDATA[                        ]]><token><![CDATA[print]]></token><![CDATA[(]]><phrase><![CDATA["]]></phrase><phrase><![CDATA[Least used is: ]]></phrase><phrase><![CDATA["]]></phrase><![CDATA[ + ]]><token><![CDATA[str]]></token><![CDATA[(]]><methodname><![CDATA[selected]]></methodname><![CDATA[) )]]>
<token><![CDATA[print]]></token><![CDATA[(]]><methodname><![CDATA[selected]]></methodname><![CDATA[)]]>
</programlisting><itemizedlist><listitem><para>A bash script that writes the current established connections into a CSV file(from 3) </para></listitem></itemizedlist><programlisting format="linespecific" language="highlight" linenumbering="numbered" startinglinenumber="1"><lineannotation><![CDATA[#!/usr/bin/env bash]]></lineannotation>
<lineannotation></lineannotation><methodname><![CDATA[ONE]]></methodname><![CDATA[=]]><phrase><![CDATA[`]]></phrase><![CDATA[conntrack -L 2>/dev/null|grep ]]><phrase><![CDATA["mark=1 "]]></phrase><![CDATA[|grep ESTABLISHED |wc -l]]><phrase><![CDATA[`]]></phrase>
<methodname><![CDATA[TWO]]></methodname><![CDATA[=]]><phrase><![CDATA[`]]></phrase><![CDATA[conntrack -L 2>/dev/null|grep ]]><phrase><![CDATA["mark=2 "]]></phrase><![CDATA[|grep ESTABLISHED |wc -l]]><phrase><![CDATA[`]]></phrase>
<methodname><![CDATA[THREE]]></methodname><![CDATA[=]]><phrase><![CDATA[`]]></phrase><![CDATA[conntrack -L 2>/dev/null|grep ]]><phrase><![CDATA["mark=3 "]]></phrase><![CDATA[|grep ESTABLISHED |wc -l]]><phrase><![CDATA[`]]></phrase>
<token><![CDATA[echo]]></token><![CDATA[ ]]><phrase><![CDATA["]]></phrase><methodname><![CDATA[$ONE]]></methodname><phrase><![CDATA[,1]]></phrase><phrase><![CDATA["]]></phrase><![CDATA[ > marks_stats.csv]]>
<token><![CDATA[echo]]></token><![CDATA[ ]]><phrase><![CDATA["]]></phrase><methodname><![CDATA[$TWO]]></methodname><phrase><![CDATA[,2]]></phrase><phrase><![CDATA["]]></phrase><![CDATA[ >> marks_stats.csv]]>
<token><![CDATA[echo]]></token><![CDATA[ ]]><phrase><![CDATA["]]></phrase><methodname><![CDATA[$THREE]]></methodname><phrase><![CDATA[,3]]></phrase><phrase><![CDATA["]]></phrase><![CDATA[ >> marks_stats.csv]]>
</programlisting></section><section><title>Packet By Packet Load Balancing VS Connection based</title></section></section><section><title>Route Policy LB vs MARK based LB</title><section><title>Removal of ipv4 routing cache from linux kernel</title><itemizedlist><listitem><para>it brings the problem of &quot;packet by packet&quot; routing systems. </para></listitem></itemizedlist><para><ulink url="http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=89aef8921bfbac22f00e04f8450f6e447db13e42"/> </para><itemizedlist><listitem><para>Quote from the commit </para></listitem></itemizedlist><screen><![CDATA[ipv4: Delete routing cache.
The ipv4 routing cache is non-deterministic, performance wise, and is subject to reasonably easy to launch denial of service attacks.
]]><![CDATA[
The routing cache works great for well behaved traffic, and the world was a much friendlier place when the tradeoffs that led to the routing cache's design were considered.
]]><![CDATA[
What it boils down to is that the performance of the routing cache is a product of the traffic patterns seen by a system rather than being a product of the contents of the routing tables. The former of which is controllable by external entitites.
]]><![CDATA[
Even for "well behaved" legitimate traffic, high volume sites can see hit rates in the routing cache of only ~%10.
]]><![CDATA[
Signed-off-by: David S. Miller]]></screen></section><section><title>Efficency of Policy</title></section><section><title>Efficency of MARK</title></section><section><title>Combination of both</title></section><section><title>CONNMARK and\vs MARK</title></section></section><section><title>Linux options for MultiWAN</title><section><title>MultiDSL\Multiother to a HUBPROXY Balancing</title><itemizedlist><listitem><para>Can be done in a connection or packet level </para></listitem><listitem><para>Example for such commercial prodcuts [<ulink url="https://www.peplink.com/technology/sd-wan/|peplink"/> sd-wan] </para></listitem></itemizedlist></section><section><title>NFQUEUE to mark flowing connection</title></section><section><title>Examples</title><section><title>Round Robin mark selection - Python example</title><itemizedlist><listitem><para>An example for a <ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/RoundRobin#">RoundRobin</ulink> LB between 3 iptables marks using NFQUEUE mark_verdict </para></listitem></itemizedlist><programlisting format="linespecific" language="highlight" linenumbering="numbered" startinglinenumber="1"><lineannotation><![CDATA[#!/usr/bin/env python]]></lineannotation>
<token><![CDATA[import]]></token><![CDATA[ ]]><methodname><![CDATA[time]]></methodname>
<token><![CDATA[from]]></token><![CDATA[ ]]><methodname><![CDATA[daemon]]></methodname><![CDATA[ ]]><token><![CDATA[import]]></token><![CDATA[ ]]><methodname><![CDATA[runner]]></methodname>
<token><![CDATA[import]]></token><![CDATA[ ]]><methodname><![CDATA[nfqueue]]></methodname><![CDATA[, ]]><methodname><![CDATA[socket]]></methodname>
<token><![CDATA[from]]></token><![CDATA[ ]]><methodname><![CDATA[scapy.all]]></methodname><![CDATA[ ]]><token><![CDATA[import]]></token><![CDATA[ *]]>

<methodname><![CDATA[queue]]></methodname><![CDATA[ = ]]><methodname><![CDATA[deque]]></methodname><![CDATA[([1, 2, 3])]]>

<token><![CDATA[def]]></token><![CDATA[ ]]><methodname><![CDATA[get_queue]]></methodname><![CDATA[():]]>
<![CDATA[    ]]><token><![CDATA[global]]></token><![CDATA[ ]]><methodname><![CDATA[queue]]></methodname>
<![CDATA[    ]]><methodname><![CDATA[l]]></methodname><![CDATA[ = ]]><methodname><![CDATA[queue]]></methodname><![CDATA[.]]><methodname><![CDATA[popleft]]></methodname><![CDATA[()]]>
<![CDATA[    ]]><methodname><![CDATA[queue]]></methodname><![CDATA[.]]><methodname><![CDATA[append]]></methodname><![CDATA[(]]><methodname><![CDATA[l]]></methodname><![CDATA[)]]>
<![CDATA[    ]]><token><![CDATA[return]]></token><![CDATA[ ]]><methodname><![CDATA[l]]></methodname>

<lineannotation><![CDATA[#Set the callback for received packets:]]></lineannotation>
<token><![CDATA[def]]></token><![CDATA[ ]]><methodname><![CDATA[cb]]></methodname><![CDATA[(]]><methodname><![CDATA[i]]></methodname><![CDATA[,]]><methodname><![CDATA[payload]]></methodname><![CDATA[):]]>
<![CDATA[    ]]><methodname><![CDATA[data]]></methodname><![CDATA[ = ]]><methodname><![CDATA[payload]]></methodname><![CDATA[.]]><methodname><![CDATA[get_data]]></methodname><![CDATA[()]]>
<![CDATA[    ]]><methodname><![CDATA[p]]></methodname><![CDATA[ = ]]><methodname><![CDATA[IP]]></methodname><![CDATA[(]]><methodname><![CDATA[data]]></methodname><![CDATA[)]]>
<![CDATA[    ]]><methodname><![CDATA[mark]]></methodname><![CDATA[ = ]]><methodname><![CDATA[get_queue]]></methodname><![CDATA[()]]>
<![CDATA[    ]]><methodname><![CDATA[payload]]></methodname><![CDATA[.]]><methodname><![CDATA[set_verdict_mark]]></methodname><![CDATA[(]]><methodname><![CDATA[nfqueue]]></methodname><![CDATA[.]]><methodname><![CDATA[NF_REPEAT]]></methodname><![CDATA[, ]]><methodname><![CDATA[mark]]></methodname><![CDATA[) ]]><lineannotation><![CDATA[#4 = nfqueue.NF_REPEAT]]></lineannotation>

<token><![CDATA[class]]></token><![CDATA[ ]]><methodname><![CDATA[App]]></methodname><![CDATA[():]]>
<![CDATA[    ]]><token><![CDATA[def]]></token><![CDATA[ ]]><methodname><![CDATA[__init__]]></methodname><![CDATA[(]]><token><![CDATA[self]]></token><![CDATA[):]]>
<![CDATA[        ]]><token><![CDATA[self]]></token><![CDATA[.]]><methodname><![CDATA[stdin_path]]></methodname><![CDATA[ = ]]><phrase><![CDATA[']]></phrase><phrase><![CDATA[/dev/null]]></phrase><phrase><![CDATA[']]></phrase>
<![CDATA[        ]]><token><![CDATA[self]]></token><![CDATA[.]]><methodname><![CDATA[stdout_path]]></methodname><![CDATA[ = ]]><phrase><![CDATA[']]></phrase><phrase><![CDATA[/dev/tty]]></phrase><phrase><![CDATA[']]></phrase>
<![CDATA[        ]]><token><![CDATA[self]]></token><![CDATA[.]]><methodname><![CDATA[stderr_path]]></methodname><![CDATA[ = ]]><phrase><![CDATA[']]></phrase><phrase><![CDATA[/dev/tty]]></phrase><phrase><![CDATA[']]></phrase>
<![CDATA[        ]]><token><![CDATA[self]]></token><![CDATA[.]]><methodname><![CDATA[pidfile_path]]></methodname><![CDATA[ =  ]]><phrase><![CDATA[']]></phrase><phrase><![CDATA[/tmp/marker_que0.pid]]></phrase><phrase><![CDATA[']]></phrase>
<![CDATA[        ]]><token><![CDATA[self]]></token><![CDATA[.]]><methodname><![CDATA[pidfile_timeout]]></methodname><![CDATA[ = 5]]>
<![CDATA[    ]]><token><![CDATA[def]]></token><![CDATA[ ]]><methodname><![CDATA[run]]></methodname><![CDATA[(]]><token><![CDATA[self]]></token><![CDATA[):]]>
<![CDATA[                ]]><methodname><![CDATA[q]]></methodname><![CDATA[ = ]]><methodname><![CDATA[nfqueue]]></methodname><![CDATA[.]]><methodname><![CDATA[queue]]></methodname><![CDATA[()]]>
<![CDATA[                ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[set_callback]]></methodname><![CDATA[(]]><methodname><![CDATA[cb]]></methodname><![CDATA[)]]>
<![CDATA[                ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[open]]></methodname><![CDATA[()]]>
<![CDATA[                ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[create_queue]]></methodname><![CDATA[(0)]]>
<![CDATA[                ]]><token><![CDATA[try]]></token><![CDATA[:]]>
<![CDATA[                        ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[try_run]]></methodname><![CDATA[()]]>
<![CDATA[                ]]><token><![CDATA[except]]></token><![CDATA[ ]]><methodname><![CDATA[KeyboardInterrupt]]></methodname><![CDATA[, ]]><methodname><![CDATA[e]]></methodname><![CDATA[:]]>
<![CDATA[                        ]]><token><![CDATA[print]]></token><![CDATA[ ]]><phrase><![CDATA["]]></phrase><phrase><![CDATA[interruption]]></phrase><phrase><![CDATA["]]></phrase>

<![CDATA[                ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[unbind]]></methodname><![CDATA[(]]><methodname><![CDATA[socket]]></methodname><![CDATA[.]]><methodname><![CDATA[AF_INET]]></methodname><![CDATA[)]]>
<![CDATA[                ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[close]]></methodname><![CDATA[()]]>
<![CDATA[                ]]>
<methodname><![CDATA[app]]></methodname><![CDATA[ = ]]><methodname><![CDATA[App]]></methodname><![CDATA[()]]>
<methodname><![CDATA[daemon_runner]]></methodname><![CDATA[ = ]]><methodname><![CDATA[runner]]></methodname><![CDATA[.]]><methodname><![CDATA[DaemonRunner]]></methodname><![CDATA[(]]><methodname><![CDATA[app]]></methodname><![CDATA[)]]>
<methodname><![CDATA[daemon_runner]]></methodname><![CDATA[.]]><methodname><![CDATA[do_action]]></methodname><![CDATA[()]]>
</programlisting></section><section><title>Round Robin mark selection - GoLang example</title><programlisting format="linespecific" language="highlight" linenumbering="numbered" startinglinenumber="1"><token><![CDATA[package]]></token><![CDATA[ ]]><methodname><![CDATA[main]]></methodname>

<lineannotation><![CDATA[/*]]></lineannotation>
<lineannotation><![CDATA[license note]]></lineannotation>
<lineannotation><![CDATA[Copyright (c) 2016, Eliezer Croitoru]]></lineannotation>
<lineannotation><![CDATA[All rights reserved.]]></lineannotation>
<lineannotation></lineannotation>
<lineannotation><![CDATA[Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:]]></lineannotation>
<lineannotation><![CDATA[1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.]]></lineannotation>
<lineannotation><![CDATA[2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.]]></lineannotation>
<lineannotation><![CDATA[3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.]]></lineannotation>
<lineannotation></lineannotation>
<lineannotation><![CDATA[THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.]]></lineannotation>
<lineannotation><![CDATA[*/]]></lineannotation>

<token><![CDATA[import]]></token><![CDATA[ (]]>
<![CDATA[        ]]><phrase><![CDATA["encoding/hex"]]></phrase>
<![CDATA[        ]]><phrase><![CDATA["flag"]]></phrase>
<![CDATA[        ]]><phrase><![CDATA["fmt"]]></phrase>
<![CDATA[        ]]><phrase><![CDATA["github.com/elico/nfqueue-go/nfqueue"]]></phrase>
<![CDATA[        ]]><phrase><![CDATA["os"]]></phrase>
<![CDATA[        ]]><phrase><![CDATA["os/signal"]]></phrase>
<![CDATA[        ]]><phrase><![CDATA["sync/atomic"]]></phrase>
<![CDATA[        ]]><phrase><![CDATA["syscall"]]></phrase>
<![CDATA[)]]>

<token><![CDATA[var]]></token><![CDATA[ ]]><methodname><![CDATA[marksMax]]></methodname><![CDATA[ ]]><token><![CDATA[uint64]]></token>
<token><![CDATA[var]]></token><![CDATA[ ]]><methodname><![CDATA[logpkt]]></methodname><![CDATA[ ]]><token><![CDATA[bool]]></token>
<token><![CDATA[var]]></token><![CDATA[ ]]><methodname><![CDATA[logmark]]></methodname><![CDATA[ ]]><token><![CDATA[bool]]></token>
<token><![CDATA[var]]></token><![CDATA[ ]]><methodname><![CDATA[queueNum]]></methodname><![CDATA[ ]]><token><![CDATA[int]]></token>

<token><![CDATA[var]]></token><![CDATA[ ]]><methodname><![CDATA[counter]]></methodname><![CDATA[ = ]]><token><![CDATA[uint64]]></token><![CDATA[(1)]]>

<token><![CDATA[func]]></token><![CDATA[ ]]><methodname><![CDATA[real_callback]]></methodname><![CDATA[(]]><methodname><![CDATA[payload]]></methodname><![CDATA[ *]]><methodname><![CDATA[nfqueue]]></methodname><![CDATA[.]]><methodname><![CDATA[Payload]]></methodname><![CDATA[) ]]><token><![CDATA[int]]></token><![CDATA[ {]]>
<![CDATA[        ]]><token><![CDATA[if]]></token><![CDATA[ ]]><methodname><![CDATA[logpkt]]></methodname><![CDATA[ {]]>
<![CDATA[                ]]><methodname><![CDATA[fmt]]></methodname><![CDATA[.]]><methodname><![CDATA[Println]]></methodname><![CDATA[(]]><phrase><![CDATA["Real callback"]]></phrase><![CDATA[)]]>
<![CDATA[                ]]><methodname><![CDATA[fmt]]></methodname><![CDATA[.]]><methodname><![CDATA[Printf]]></methodname><![CDATA[(]]><phrase><![CDATA["  id: %d\n"]]></phrase><![CDATA[, ]]><methodname><![CDATA[payload]]></methodname><![CDATA[.]]><methodname><![CDATA[Id]]></methodname><![CDATA[)]]>
<![CDATA[                ]]><methodname><![CDATA[fmt]]></methodname><![CDATA[.]]><methodname><![CDATA[Printf]]></methodname><![CDATA[(]]><phrase><![CDATA["  mark: %d\n"]]></phrase><![CDATA[, ]]><methodname><![CDATA[payload]]></methodname><![CDATA[.]]><methodname><![CDATA[GetNFMark]]></methodname><![CDATA[())]]>
<![CDATA[                ]]><methodname><![CDATA[fmt]]></methodname><![CDATA[.]]><methodname><![CDATA[Printf]]></methodname><![CDATA[(]]><phrase><![CDATA["  in  %d      out  %d\n"]]></phrase><![CDATA[, ]]><methodname><![CDATA[payload]]></methodname><![CDATA[.]]><methodname><![CDATA[GetInDev]]></methodname><![CDATA[(), ]]><methodname><![CDATA[payload]]></methodname><![CDATA[.]]><methodname><![CDATA[GetOutDev]]></methodname><![CDATA[())]]>
<![CDATA[                ]]><methodname><![CDATA[fmt]]></methodname><![CDATA[.]]><methodname><![CDATA[Printf]]></methodname><![CDATA[(]]><phrase><![CDATA["  Φin %d      Φout %d\n"]]></phrase><![CDATA[, ]]><methodname><![CDATA[payload]]></methodname><![CDATA[.]]><methodname><![CDATA[GetPhysInDev]]></methodname><![CDATA[(), ]]><methodname><![CDATA[payload]]></methodname><![CDATA[.]]><methodname><![CDATA[GetPhysOutDev]]></methodname><![CDATA[())]]>
<![CDATA[                ]]><methodname><![CDATA[fmt]]></methodname><![CDATA[.]]><methodname><![CDATA[Println]]></methodname><![CDATA[(]]><methodname><![CDATA[hex]]></methodname><![CDATA[.]]><methodname><![CDATA[Dump]]></methodname><![CDATA[(]]><methodname><![CDATA[payload]]></methodname><![CDATA[.]]><methodname><![CDATA[Data]]></methodname><![CDATA[))]]>
<![CDATA[                ]]><methodname><![CDATA[fmt]]></methodname><![CDATA[.]]><methodname><![CDATA[Println]]></methodname><![CDATA[(]]><phrase><![CDATA["-- "]]></phrase><![CDATA[)]]>
<![CDATA[        }]]>
<![CDATA[        ]]><methodname><![CDATA[val]]></methodname><![CDATA[ := (]]><methodname><![CDATA[atomic]]></methodname><![CDATA[.]]><methodname><![CDATA[AddUint64]]></methodname><![CDATA[(&]]><methodname><![CDATA[counter]]></methodname><![CDATA[, 1) % ]]><methodname><![CDATA[marksMax]]></methodname><![CDATA[) + 1]]>
<![CDATA[        ]]><token><![CDATA[if]]></token><![CDATA[ ]]><methodname><![CDATA[val]]></methodname><![CDATA[ == ]]><token><![CDATA[uint64]]></token><![CDATA[(0) {]]>
<![CDATA[                ]]><methodname><![CDATA[val]]></methodname><![CDATA[++]]>
<![CDATA[        }]]>
<![CDATA[        ]]><token><![CDATA[if]]></token><![CDATA[ ]]><methodname><![CDATA[logmark]]></methodname><![CDATA[ {]]>
<![CDATA[                ]]><token><![CDATA[if]]></token><![CDATA[ ]]><methodname><![CDATA[logpkt]]></methodname><![CDATA[ {]]>
<![CDATA[                        ]]><methodname><![CDATA[fmt]]></methodname><![CDATA[.]]><methodname><![CDATA[Println]]></methodname><![CDATA[(]]><phrase><![CDATA["The selected Mark =>"]]></phrase><![CDATA[, ]]><methodname><![CDATA[val]]></methodname><![CDATA[, ]]><phrase><![CDATA["For packet =>"]]></phrase><![CDATA[, ]]><methodname><![CDATA[payload]]></methodname><![CDATA[)]]>
<![CDATA[                } ]]><token><![CDATA[else]]></token><![CDATA[ {]]>
<![CDATA[                        ]]><methodname><![CDATA[fmt]]></methodname><![CDATA[.]]><methodname><![CDATA[Println]]></methodname><![CDATA[(]]><phrase><![CDATA["The selected Mark =>"]]></phrase><![CDATA[, ]]><methodname><![CDATA[val]]></methodname><![CDATA[)]]>
<![CDATA[                }]]>
<![CDATA[        }]]>
<![CDATA[        ]]><methodname><![CDATA[payload]]></methodname><![CDATA[.]]><methodname><![CDATA[SetVerdictMark]]></methodname><![CDATA[(]]><methodname><![CDATA[nfqueue]]></methodname><![CDATA[.]]><methodname><![CDATA[NF_REPEAT]]></methodname><![CDATA[, ]]><token><![CDATA[uint32]]></token><![CDATA[(]]><methodname><![CDATA[val]]></methodname><![CDATA[))]]>

<![CDATA[        ]]><token><![CDATA[return]]></token><![CDATA[ 0]]>
<![CDATA[}]]>

<token><![CDATA[func]]></token><![CDATA[ ]]><methodname><![CDATA[main]]></methodname><![CDATA[() {]]>
<![CDATA[        ]]><methodname><![CDATA[flag]]></methodname><![CDATA[.]]><methodname><![CDATA[BoolVar]]></methodname><![CDATA[(&]]><methodname><![CDATA[logpkt]]></methodname><![CDATA[, ]]><phrase><![CDATA["log-packet"]]></phrase><![CDATA[, ]]><symbol><![CDATA[false]]></symbol><![CDATA[, ]]><phrase><![CDATA["Log the packet to stdout (works with log-mark option only)"]]></phrase><![CDATA[)]]>
<![CDATA[        ]]><methodname><![CDATA[flag]]></methodname><![CDATA[.]]><methodname><![CDATA[BoolVar]]></methodname><![CDATA[(&]]><methodname><![CDATA[logmark]]></methodname><![CDATA[, ]]><phrase><![CDATA["log-mark"]]></phrase><![CDATA[, ]]><symbol><![CDATA[false]]></symbol><![CDATA[, ]]><phrase><![CDATA["Log the mark selection to stdout"]]></phrase><![CDATA[)]]>

<![CDATA[        ]]><methodname><![CDATA[flag]]></methodname><![CDATA[.]]><methodname><![CDATA[Uint64Var]]></methodname><![CDATA[(&]]><methodname><![CDATA[marksMax]]></methodname><![CDATA[, ]]><phrase><![CDATA["high-mark"]]></phrase><![CDATA[, ]]><token><![CDATA[uint64]]></token><![CDATA[(3), ]]><phrase><![CDATA["The number of the highest queue number"]]></phrase><![CDATA[)]]>
<![CDATA[        ]]><methodname><![CDATA[flag]]></methodname><![CDATA[.]]><methodname><![CDATA[IntVar]]></methodname><![CDATA[(&]]><methodname><![CDATA[queueNum]]></methodname><![CDATA[, ]]><phrase><![CDATA["queue-num"]]></phrase><![CDATA[, 0, ]]><phrase><![CDATA["The NFQUEQUE number"]]></phrase><![CDATA[)]]>

<![CDATA[        ]]><methodname><![CDATA[flag]]></methodname><![CDATA[.]]><methodname><![CDATA[Parse]]></methodname><![CDATA[()]]>

<![CDATA[        ]]><methodname><![CDATA[q]]></methodname><![CDATA[ := ]]><token><![CDATA[new]]></token><![CDATA[(]]><methodname><![CDATA[nfqueue]]></methodname><![CDATA[.]]><methodname><![CDATA[Queue]]></methodname><![CDATA[)]]>

<![CDATA[        ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[SetCallback]]></methodname><![CDATA[(]]><methodname><![CDATA[real_callback]]></methodname><![CDATA[)]]>

<![CDATA[        ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[Init]]></methodname><![CDATA[()]]>
<![CDATA[        ]]><token><![CDATA[defer]]></token><![CDATA[ ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[Close]]></methodname><![CDATA[()]]>

<![CDATA[        ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[Unbind]]></methodname><![CDATA[(]]><methodname><![CDATA[syscall]]></methodname><![CDATA[.]]><methodname><![CDATA[AF_INET]]></methodname><![CDATA[)]]>
<![CDATA[        ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[Bind]]></methodname><![CDATA[(]]><methodname><![CDATA[syscall]]></methodname><![CDATA[.]]><methodname><![CDATA[AF_INET]]></methodname><![CDATA[)]]>

<![CDATA[        ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[CreateQueue]]></methodname><![CDATA[(]]><methodname><![CDATA[queueNum]]></methodname><![CDATA[)]]>
<![CDATA[        ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[SetMode]]></methodname><![CDATA[(]]><methodname><![CDATA[nfqueue]]></methodname><![CDATA[.]]><methodname><![CDATA[NFQNL_COPY_PACKET]]></methodname><![CDATA[)]]>
<![CDATA[        ]]><methodname><![CDATA[fmt]]></methodname><![CDATA[.]]><methodname><![CDATA[Println]]></methodname><![CDATA[(]]><phrase><![CDATA["The queue is active, add an iptables rule to use it, for example: "]]></phrase><![CDATA[)]]>
<![CDATA[        ]]><methodname><![CDATA[fmt]]></methodname><![CDATA[.]]><methodname><![CDATA[Println]]></methodname><![CDATA[(]]><phrase><![CDATA["\tiptables -t mangle -I PREROUTING 1 [-i eth0] -m conntrack --ctstate NEW -j NFQUEUE --queue-num"]]></phrase><![CDATA[, ]]><methodname><![CDATA[queueNum]]></methodname><![CDATA[)]]>

<![CDATA[        ]]><methodname><![CDATA[c]]></methodname><![CDATA[ := ]]><token><![CDATA[make]]></token><![CDATA[(]]><token><![CDATA[chan]]></token><![CDATA[ ]]><methodname><![CDATA[os]]></methodname><![CDATA[.]]><methodname><![CDATA[Signal]]></methodname><![CDATA[, 1)]]>
<![CDATA[        ]]><methodname><![CDATA[signal]]></methodname><![CDATA[.]]><methodname><![CDATA[Notify]]></methodname><![CDATA[(]]><methodname><![CDATA[c]]></methodname><![CDATA[, ]]><methodname><![CDATA[os]]></methodname><![CDATA[.]]><methodname><![CDATA[Interrupt]]></methodname><![CDATA[)]]>
<![CDATA[        ]]><token><![CDATA[go]]></token><![CDATA[ ]]><token><![CDATA[func]]></token><![CDATA[() {]]>
<![CDATA[                ]]><token><![CDATA[for]]></token><![CDATA[ ]]><methodname><![CDATA[sig]]></methodname><![CDATA[ := ]]><token><![CDATA[range]]></token><![CDATA[ ]]><methodname><![CDATA[c]]></methodname><![CDATA[ {]]>
<![CDATA[                        ]]><lineannotation><![CDATA[// sig is a ^C, handle it]]></lineannotation>
<lineannotation></lineannotation><![CDATA[                        ]]><methodname><![CDATA[_]]></methodname><![CDATA[ = ]]><methodname><![CDATA[sig]]></methodname>
<![CDATA[                        ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[Close]]></methodname><![CDATA[()]]>
<![CDATA[                        ]]><methodname><![CDATA[os]]></methodname><![CDATA[.]]><methodname><![CDATA[Exit]]></methodname><![CDATA[(0)]]>
<![CDATA[                        ]]><lineannotation><![CDATA[// XXX we should break gracefully from loop]]></lineannotation>
<lineannotation></lineannotation><![CDATA[                }]]>
<![CDATA[        }()]]>

<![CDATA[        ]]><lineannotation><![CDATA[// XXX Drop privileges here]]></lineannotation>
<lineannotation></lineannotation>
<![CDATA[        ]]><lineannotation><![CDATA[// XXX this should be the loop]]></lineannotation>
<lineannotation></lineannotation><![CDATA[        ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[TryRun]]></methodname><![CDATA[()]]>

<![CDATA[}]]>
</programlisting></section><section><title>Least Connections selection algorithm example</title><programlisting format="linespecific" language="highlight" linenumbering="numbered" startinglinenumber="1"><lineannotation><![CDATA[#!/usr/bin/env python]]></lineannotation>
<token><![CDATA[import]]></token><![CDATA[ ]]><methodname><![CDATA[time]]></methodname>
<token><![CDATA[import]]></token><![CDATA[ ]]><methodname><![CDATA[sys]]></methodname>
<token><![CDATA[import]]></token><![CDATA[ ]]><methodname><![CDATA[commands]]></methodname>
<token><![CDATA[import]]></token><![CDATA[ ]]><methodname><![CDATA[os]]></methodname>
<lineannotation><![CDATA[#from daemon import runner]]></lineannotation>
<token><![CDATA[import]]></token><![CDATA[ ]]><methodname><![CDATA[nfqueue]]></methodname><![CDATA[, ]]><methodname><![CDATA[socket]]></methodname>
<token><![CDATA[from]]></token><![CDATA[ ]]><methodname><![CDATA[scapy.all]]></methodname><![CDATA[ ]]><token><![CDATA[import]]></token><![CDATA[ *]]>

<methodname><![CDATA[queue]]></methodname><![CDATA[ = ]]><methodname><![CDATA[deque]]></methodname><![CDATA[([1, 2, 3])]]>

<token><![CDATA[def]]></token><![CDATA[ ]]><methodname><![CDATA[get_queue]]></methodname><![CDATA[():]]>
<![CDATA[    ]]>
<![CDATA[    ]]><methodname><![CDATA[mark]]></methodname><![CDATA[ = 1]]>
<![CDATA[    ]]><methodname><![CDATA[res1]]></methodname><![CDATA[ =  ]]><methodname><![CDATA[commands]]></methodname><![CDATA[.]]><methodname><![CDATA[getstatusoutput]]></methodname><![CDATA[(]]><phrase><![CDATA[']]></phrase><phrase><![CDATA[conntrack -L 2>/dev/null|grep mark=1|grep ESTABLISHED |wc -l]]></phrase><phrase><![CDATA[']]></phrase><![CDATA[)]]>
<![CDATA[    ]]><methodname><![CDATA[res2]]></methodname><![CDATA[ =  ]]><methodname><![CDATA[commands]]></methodname><![CDATA[.]]><methodname><![CDATA[getstatusoutput]]></methodname><![CDATA[(]]><phrase><![CDATA[']]></phrase><phrase><![CDATA[conntrack -L 2>/dev/null|grep mark=2|grep ESTABLISHED |wc -l]]></phrase><phrase><![CDATA[']]></phrase><![CDATA[)]]>
<![CDATA[    ]]><methodname><![CDATA[res3]]></methodname><![CDATA[ =  ]]><methodname><![CDATA[commands]]></methodname><![CDATA[.]]><methodname><![CDATA[getstatusoutput]]></methodname><![CDATA[(]]><phrase><![CDATA[']]></phrase><phrase><![CDATA[conntrack -L 2>/dev/null|grep mark=3|grep ESTABLISHED |wc -l]]></phrase><phrase><![CDATA[']]></phrase><![CDATA[)]]>
<![CDATA[    ]]><token><![CDATA[if]]></token><![CDATA[ ]]><token><![CDATA[not]]></token><![CDATA[ ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[res1]]></methodname><![CDATA[[1]) < ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[res2]]></methodname><![CDATA[[1]) ]]><token><![CDATA[or]]></token><![CDATA[ ]]><token><![CDATA[not]]></token><![CDATA[ ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[res1]]></methodname><![CDATA[[1]) < ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[res3]]></methodname><![CDATA[[1]):]]>
<![CDATA[        ]]><methodname><![CDATA[mark]]></methodname><![CDATA[ = 1]]>
<![CDATA[    ]]><token><![CDATA[if]]></token><![CDATA[ ]]><token><![CDATA[not]]></token><![CDATA[ ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[res2]]></methodname><![CDATA[[1]) < ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[res1]]></methodname><![CDATA[[1]) ]]><token><![CDATA[or]]></token><![CDATA[ ]]><token><![CDATA[not]]></token><![CDATA[ ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[res2]]></methodname><![CDATA[[1]) < ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[res3]]></methodname><![CDATA[[1]):]]>
<![CDATA[        ]]><methodname><![CDATA[mark]]></methodname><![CDATA[ = 2]]>
<![CDATA[    ]]><token><![CDATA[if]]></token><![CDATA[ ]]><token><![CDATA[not]]></token><![CDATA[ ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[res3]]></methodname><![CDATA[[1]) < ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[res2]]></methodname><![CDATA[[1]) ]]><token><![CDATA[or]]></token><![CDATA[ ]]><token><![CDATA[not]]></token><![CDATA[ ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[res3]]></methodname><![CDATA[[1]) < ]]><token><![CDATA[int]]></token><![CDATA[(]]><methodname><![CDATA[res1]]></methodname><![CDATA[[1]):]]>
<![CDATA[        ]]><methodname><![CDATA[mark]]></methodname><![CDATA[ = 3]]>
<![CDATA[    ]]><token><![CDATA[return]]></token><![CDATA[ ]]><methodname><![CDATA[mark]]></methodname>

<lineannotation><![CDATA[#Set the callback for received packets:]]></lineannotation>
<token><![CDATA[def]]></token><![CDATA[ ]]><methodname><![CDATA[cb]]></methodname><![CDATA[(]]><methodname><![CDATA[i]]></methodname><![CDATA[,]]><methodname><![CDATA[payload]]></methodname><![CDATA[):]]>
<![CDATA[    ]]><methodname><![CDATA[data]]></methodname><![CDATA[ = ]]><methodname><![CDATA[payload]]></methodname><![CDATA[.]]><methodname><![CDATA[get_data]]></methodname><![CDATA[()]]>
<![CDATA[    ]]><methodname><![CDATA[p]]></methodname><![CDATA[ = ]]><methodname><![CDATA[IP]]></methodname><![CDATA[(]]><methodname><![CDATA[data]]></methodname><![CDATA[)]]>
<![CDATA[    ]]><methodname><![CDATA[mark]]></methodname><![CDATA[ = ]]><methodname><![CDATA[get_queue]]></methodname><![CDATA[()]]>
<![CDATA[    ]]><methodname><![CDATA[payload]]></methodname><![CDATA[.]]><methodname><![CDATA[set_verdict_mark]]></methodname><![CDATA[(]]><methodname><![CDATA[nfqueue]]></methodname><![CDATA[.]]><methodname><![CDATA[NF_REPEAT]]></methodname><![CDATA[, ]]><methodname><![CDATA[mark]]></methodname><![CDATA[) ]]><lineannotation><![CDATA[#4 = nfqueue.NF_REPEAT]]></lineannotation>

<methodname><![CDATA[q]]></methodname><![CDATA[ = ]]><methodname><![CDATA[nfqueue]]></methodname><![CDATA[.]]><methodname><![CDATA[queue]]></methodname><![CDATA[()]]>
<methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[set_callback]]></methodname><![CDATA[(]]><methodname><![CDATA[cb]]></methodname><![CDATA[)]]>
<methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[open]]></methodname><![CDATA[()]]>
<methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[create_queue]]></methodname><![CDATA[(0)]]>
<token><![CDATA[try]]></token><![CDATA[:]]>
<![CDATA[  ]]><methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[try_run]]></methodname><![CDATA[()]]>
<token><![CDATA[except]]></token><![CDATA[ ]]><methodname><![CDATA[KeyboardInterrupt]]></methodname><![CDATA[, ]]><methodname><![CDATA[e]]></methodname><![CDATA[:]]>
<![CDATA[  ]]><token><![CDATA[print]]></token><![CDATA[ ]]><phrase><![CDATA["]]></phrase><phrase><![CDATA[interruption]]></phrase><phrase><![CDATA["]]></phrase>

<methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[unbind]]></methodname><![CDATA[(]]><methodname><![CDATA[socket]]></methodname><![CDATA[.]]><methodname><![CDATA[AF_INET]]></methodname><![CDATA[)]]>
<methodname><![CDATA[q]]></methodname><![CDATA[.]]><methodname><![CDATA[close]]></methodname><![CDATA[()]]>
</programlisting></section><section><title>iptables rules example</title><para>* Example NFQUEUE(0) iptables rules that shows how a connection is being marked by the python helper and then a log target is counting the packets. </para><programlisting format="linespecific" language="highlight" linenumbering="numbered" startinglinenumber="1"><lineannotation><![CDATA[#!/usr/bin/env bash]]></lineannotation>
<lineannotation></lineannotation><methodname><![CDATA[IPTABLES]]></methodname><![CDATA[=]]><phrase><![CDATA["/sbin/iptables"]]></phrase>

<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -F PREROUTING]]>
<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING ! -p tcp -j ACCEPT]]>
<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING -p tcp  -m mark --mark 0 -m state --state ESTABLISHED,RELATED -j CONNMARK --restore-mark]]>
<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING -p tcp -m state --state NEW -m mark ! --mark 0 -j CONNMARK --save-mark]]>

<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING  -m mark --mark 0 -m conntrack --ctstate NEW -j NFQUEUE --queue-num 0]]>

<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING  -m connmark --mark 0x1 -j LOG --log-prefix ]]><phrase><![CDATA["post, connmark 1: "]]></phrase>
<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING  -m connmark --mark 0x2 -j LOG --log-prefix ]]><phrase><![CDATA["post, connmark 2: "]]></phrase>
<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING  -m connmark --mark 0x3 -j LOG --log-prefix ]]><phrase><![CDATA["post, connmark 3: "]]></phrase>

<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING -m mark --mark 1 -j LOG --log-prefix ]]><phrase><![CDATA["post, mark 1: "]]></phrase>
<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING -m mark --mark 2 -j LOG --log-prefix ]]><phrase><![CDATA["post, mark 2: "]]></phrase>
<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING -m mark --mark 3 -j LOG --log-prefix ]]><phrase><![CDATA["post, mark 3: "]]></phrase>
</programlisting></section><section><title>example statistics of iptables  with marks</title><itemizedlist><listitem><para>An example output of iptables statistics of a running nfqueue marking setup. </para></listitem></itemizedlist><screen><![CDATA[$ sudo iptables -t mangle -L PREROUTING -nv
Chain PREROUTING (policy ACCEPT 909 packets, 54107 bytes)
 pkts bytes target     prot opt in     out     source               destination
   68 17255 ACCEPT    !tcp  --  *      *       0.0.0.0/0            0.0.0.0/0
  885 52647 CONNMARK   tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            mark match 0x0 state RELATED,ESTABLISHED CONNMARK restore
   25  1500 CONNMARK   tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            state NEW mark match ! 0x0 CONNMARK save
   25  1500 NFQUEUE    all  --  *      *       0.0.0.0/0            0.0.0.0/0            mark match 0x0 ctstate NEW NFQUEUE num 0
   52  2912 LOG        all  --  *      *       0.0.0.0/0            0.0.0.0/0            connmark match  0x1 LOG flags 0 level 4 prefix "post, connmark 1: "
   48  2695 LOG        all  --  *      *       0.0.0.0/0            0.0.0.0/0            connmark match  0x2 LOG flags 0 level 4 prefix "post, connmark 2: "
  707 41028 LOG        all  --  *      *       0.0.0.0/0            0.0.0.0/0            connmark match  0x3 LOG flags 0 level 4 prefix "post, connmark 3: "
   52  2912 LOG        all  --  *      *       0.0.0.0/0            0.0.0.0/0            mark match 0x1 LOG flags 0 level 4 prefix "post, mark 1: "
   48  2695 LOG        all  --  *      *       0.0.0.0/0            0.0.0.0/0            mark match 0x2 LOG flags 0 level 4 prefix "post, mark 2: "
  707 41028 LOG        all  --  *      *       0.0.0.0/0            0.0.0.0/0            mark match 0x3 LOG flags 0 level 4 prefix "post, mark 3: "]]></screen></section></section></section><section><title>Squid and multiWAN LB</title><section><title>Examples</title></section></section><section><title>MultiWAN StandAlone Host reverse path consistency</title><para>For a single host to return traffic the way it came from you need the next iptables and ip rules: </para><programlisting format="linespecific" language="highlight" linenumbering="numbered" startinglinenumber="1"><lineannotation><![CDATA[#!/usr/bin/env bash]]></lineannotation>
<lineannotation></lineannotation>
<lineannotation><![CDATA[# Disable Reverse Path filtering]]></lineannotation>
<lineannotation></lineannotation>
<token><![CDATA[for]]></token><![CDATA[ i in /proc/sys/net/ipv4/conf/*/rp_filter]]>
<token><![CDATA[do]]></token>
<![CDATA[  ]]><token><![CDATA[echo]]></token><![CDATA[ ]]><methodname><![CDATA[$i]]></methodname>
<![CDATA[  cat ]]><methodname><![CDATA[$i]]></methodname>
<![CDATA[  ]]><token><![CDATA[echo]]></token><![CDATA[ 0 > ]]><methodname><![CDATA[$i]]></methodname>
<token><![CDATA[done]]></token>

<methodname><![CDATA[IPTABLES]]></methodname><![CDATA[=]]><phrase><![CDATA["/sbin/iptables"]]></phrase>
<methodname><![CDATA[IP]]></methodname><![CDATA[=/sbin/ip]]>

<methodname><![CDATA[$IP]]></methodname><![CDATA[ route flush table 201]]>
<methodname><![CDATA[$IP]]></methodname><![CDATA[ route add default via 192.168.188.253 table 201]]>

<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -F ]]>

<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING ! -p tcp -j ACCEPT]]>

<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING -j CONNMARK --restore-mark]]>
<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A OUTPUT -j CONNMARK --restore-mark]]>

<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING -i eth2 -p tcp -m state --state NEW  -j CONNMARK --set-mark 1]]>

<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING -m connmark --mark 1 -j MARK --set-mark 1]]>

<methodname><![CDATA[$IPTABLES]]></methodname><![CDATA[ -t mangle -A PREROUTING -m connmark ! --mark 0  -j CONNMARK --save-mark]]>

<methodname><![CDATA[$IP]]></methodname><![CDATA[ rule|grep  ]]><phrase><![CDATA['from all fwmark 0x1 lookup 201']]></phrase><![CDATA[ >/dev/null]]>
<token><![CDATA[if]]></token><![CDATA[ [ ]]><phrase><![CDATA["]]></phrase><methodname><![CDATA[$?]]></methodname><phrase><![CDATA["]]></phrase><![CDATA[ -eq ]]><phrase><![CDATA["1"]]></phrase><![CDATA[ ]; ]]><token><![CDATA[then]]></token>
<![CDATA[  ]]><methodname><![CDATA[$IP]]></methodname><![CDATA[ rule add fwmark 1 table 201]]>
<token><![CDATA[fi]]></token>
</programlisting></section><section><title>MultiWAN NATed testing environment</title><para>After implementing the same lab with different OS I have decided to use Ubuntu instead of <ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/TinyCore#">TinyCore</ulink> linux. And the main Reason for that is that <ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/TinyCore#">TinyCore</ulink> linux is a great OS but I am feeling like missing some tools with it.(It's not you it's me..) </para><para>Indeed Ubuntu gives more tools but <ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/TinyCore#">TinyCore</ulink> helped me with the basics of iptables marking and <ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/RoundRobin#">RoundRobin</ulink> basics. </para><section><title>First LAB - TinyCore</title><para>I will use <ulink url="http://www.tinycorelinux.net/">TinyCore linux</ulink> (<ulink url="http://www.tinycorelinux.net/5.x/x86/release/">CorePlus version</ulink>) as client and routing OS. </para><itemizedlist><listitem><para>Client IP 192.168.101.1 </para></listitem><listitem><para>LAN core router IP1:192.168.101.254, Wan interface IP2:192.168.100.100 </para></listitem><listitem><para>WAN router-1 IP1:192.168.100.1(lan-core) IP2:192.168.122.65(wan-core) </para></listitem><listitem><para>WAN router-2 IP1:192.168.100.2(lan-core) IP2:192.168.122.66(wan-core) </para></listitem><listitem><para>Internet target Server at: <ulink url="http://www2.ngtech.co.il/"/> </para></listitem></itemizedlist><para>The scenario is that Client will try to contact www2.ngtech.co.il through LAN-core router which will load-balance the traffic over 2 WAN connections. </para><para>In turn the Load-Balancing rules will be changed and there for the traffic path\flow. </para><para>Then I will try to contact couple different Internet hosts through the LAN-core router and we will see what is the different trafic path for each and every one of these IPs. </para></section><section><title>Second LAB - Ubuntu</title><para>Machines: </para><itemizedlist><listitem><para>Client1 IP 192.168.12.1 </para></listitem><listitem><para>Client2 IP 192.168.12.2 </para></listitem><listitem><para>LAN core router IP1:192.168.12.254, Wan interface IP2:192.168.13.254 </para></listitem><listitem><para>WAN router-1 IP1:192.168.13.2(lan-side) IP2:7.7.7.2(wan-side) </para></listitem><listitem><para>WAN router-2 IP1:192.168.13.3(lan-side) IP2:7.7.7.3(wan-side) </para></listitem><listitem><para>WAN router-3 IP1:192.168.13.4(lan-side) IP2:7.7.7.4(wan-side) </para></listitem><listitem><para><ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/WebServer#">WebServer</ulink> IP:7.7.7.7(wan) </para></listitem></itemizedlist></section><section><title>Third LAB - OpenSUSE+ZeroShell</title><para>Machines: </para><itemizedlist><listitem><para>Windows Client1 IP 192.168.90.1 </para></listitem><listitem><para>Linux Client2 IP 192.168.90.2 </para></listitem><listitem><para>LAN core router(<ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/ZeroShell#">ZeroShell</ulink>) IP1:192.168.90.254, Wan interface IP2:192.168.10.117 </para></listitem><listitem><para>WAN router-1(OpenSUSE) IP1:192.168.10.254(pppoe dsl connection) </para></listitem><listitem><para>WAN router-2(CentOS) IP1:192.168.10.188(pptp vpn over the 192.168.10.254 to the Internet) </para></listitem><listitem><para><ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/WebServer#">WebServer</ulink> <ulink url="http://myip.net.il"/> </para></listitem></itemizedlist></section><section><title>Fourth LAB - OpenSUSE+Alpine</title><para>Machines: </para><itemizedlist><listitem><para>Windows Client1 IP 192.168.90.1 </para></listitem><listitem><para>Linux Client2 IP 192.168.90.2 </para></listitem><listitem><para>LAN core router(Alpine) IP1:192.168.90.254, Wan interface IP2:192.168.10.117 </para></listitem><listitem><para>WAN router-1(OpenSUSE) IP1:192.168.10.254(pppoe dsl connection) </para></listitem><listitem><para>WAN router-2(CentOS) IP1:192.168.10.188(pptp vpn over the 192.168.10.254 to the Internet) </para></listitem><listitem><para><ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/WebServer#">WebServer</ulink> <ulink url="http://myip.net.il"/> </para></listitem></itemizedlist></section><section><title>Fifth LAB - MultiLink loadbalancing with a HUB</title><para>Machines: </para><itemizedlist><listitem><para>Linux\Windows client 192.168.25.1 </para></listitem><listitem><para>Ubuntu LB 192.168.25.254 + 192.168.24.254 </para></listitem><listitem><para>3 VYOS NAT routers 192.168.24.1-3 with IPIP tunnel towards the HUB server(next..) </para></listitem><listitem><para>Remote Ubuntu LB HUB with IPIP tunnels towards the nat routers public IP address(and back from them), and NATTING the incomming traffic to the Internet. </para></listitem></itemizedlist><para>This setup is similar to PEPLINK product which offers Load Balancing over low cost lines and termination of the connection on the other side in a DATA-CENTER. In the lab on the local LB we run the golang helper on the way to the internet and route connections based on their mark, one TCP connection will stay over the same NAT router and the same PATH in one direction. Every side(LB, HUB) has it's own LB service and there for it can happen very often that while the traffic to the Internet will use one PATH ie IPIP tunnel, and when the data will be balanced back to the client it will pass in antother PATH. </para></section></section></section><section><title>Load Balancing - out of the box</title><para>As a Computer Science novice one of the important tasks in the real world would be to maintain balance between many worlds.</para><para> From one hand the Computer Science is tempting and gives lots of power while on the other side of these machines there are Billions of lives around the clock in the past, present and future.</para><para> From my side of the picture I know that the machine is simple but this was granted to me as a gift from my parents and ancestors.</para><para> However it's very easy for my generation to operate the &quot;Thinking Machine&quot; while for former generations which had no electricity and pumped water the issue was to get\understand a sentence right.</para><para> Thankfully we were embedded with all this wisdom to help us operate our &quot;Thinking Machine&quot; better then the old generation could. With this in mind it is very important to understand that Load Balancing is an art.</para><para> These words are here to help but sometimes these are forgotten with the stream of life:</para><para> We have the power of Thousands and Millions on our shoulders!!</para><para> We can embrace the power of Millions and utilize them for one of the couple hats: White, Black or Red.</para><para> The White is the hat which reflects only good Intention and while the Black and the Red are mixed and the Black is sourced probably from bad Intention but it's root source is good.</para><para> Specifically the Red one would use both powers for good and this is the preferred one.</para><para> Another hat which deserves mentioning is the Blue which is mainly granted for these who have done bad deeds but with good Intention while assuming that this is the right thing to do.</para><itemizedlist><listitem><para><emphasis role="strong">The above mentioned hats are not connected to the <ulink url="https://wiki.squid-cache.org/EliezerCroitoru/Drafts/MwanLB/RedHat#">RedHat</ulink> corporation in any way and is merely a reflection of these colors features by some spiritual concepts.</emphasis> </para></listitem></itemizedlist><para>My suggestion is to Load the Balance with any of the hats you get in life.</para><para> For example: Don't do\use drugs unless you have help in analyzing their influence from a licensed personnel.</para><para> The above was designed to help you or others to recognize the complexity and nature of the Literal subject and to give an example on the subject for these who talks the &quot;Computer Language&quot;. </para></section><section><title>Links</title><screen><![CDATA[dia icons - http://gnomediaicons.sourceforge.net/download.html]]></screen><itemizedlist><listitem><para><ulink url="https://devcentral.f5.com/articles/intro-to-load-balancing-for-developers-ndash-the-algorithms">F5 introduction to LB</ulink> </para></listitem><listitem><para><ulink url="https://github.com/ktsaou/firehol/wiki/Link-Balancer">FireHOL LoadBalancing Feature</ulink> </para></listitem><listitem><para><ulink url="http://docs.rackspace.com/loadbalancers/api/v1.0/clb-devguide/content/Algorithms-d1e4367.html">RackSpace About LB algorithms</ulink> </para></listitem><listitem><para><ulink url="https://github.com/darkhelmet/balance/blob/master/backends/round_robin.go">GoLang simple RoundRobin implementation</ulink>  </para></listitem><listitem><para><ulink url="http://www.sysresccd.org/Sysresccd-Networking-EN-Iptables-and-netfilter-load-balancing-using-connmark">Example of load balancing with iptables</ulink> </para></listitem><listitem><para><ulink url="http://www.slashroot.in/linux-kernel-rpfilter-settings-reverse-path-filtering">An article about reverse path filtering</ulink> </para></listitem><listitem><para><ulink url="http://www.pc-freak.net/blog/web-application-server-load-balancer-general-types-description-kind-load-balancer/">Web Application Load Balancer types and when to use what kind of Load Balancer</ulink> </para></listitem><listitem><para><ulink url="http://pdfs.loadbalancer.org/Web_Proxy_Deployment_Guide_Sophos.pdf"/> </para></listitem><listitem><para><ulink url="http://marc.info/?l=netfilter&amp;m=121300947219385"/> </para></listitem><listitem><para><ulink url="https://github.com/glanf/dockerfiles/blob/master/load_balancer/loadbalancer.py"/> </para></listitem><listitem><para><ulink url="http://1hdb.cn/index.php?&amp;id=29060"/> </para></listitem><listitem><para><ulink url="http://www.tana.it/sw/ipqbdb/"/> </para></listitem><listitem><para><ulink url="http://samag.ru/uploads/artfiles/1355728538source12(121).txt"/> </para></listitem><listitem><para><ulink url="http://bazaar.launchpad.net/~oubiwann/txloadbalancer/1.0.1/view/head:/txlb/schedulers.py#L147"/> </para></listitem><listitem><para><ulink url="https://brooker.co.za/blog/2012/01/17/two-random.html"/> </para></listitem><listitem><para><ulink url="https://gist.github.com/fqrouter/5151855"/> </para></listitem><listitem><para><ulink url="https://github.com/mdentonSkyport/nradix"/> </para></listitem><listitem><para><ulink url="https://www.inlab.de/load-balancer/description.html">BalanceNG : About/Features</ulink> </para></listitem><listitem><para><ulink url="https://blog.khax.net/2009/11/28/multi-gateway-routing-with-iptables-and-iproute2/">LinuxRouting example</ulink> </para></listitem><listitem><para><ulink url="http://www.pmoghadam.com/homepage/HTML/Round-robin-load-balancing-NAT.html">Iptables style round robin connection load balancing</ulink> </para></listitem><listitem><para><ulink url="https://www.citrix.com/blogs/2010/09/04/load-balancing-hash-method/">Citrix load balancing using a hash</ulink> </para></listitem><listitem><para><ulink url="https://www.webair.com/community/simple-stateful-load-balancer-with-iptables-and-nat/">Simple Stateful Load Balancer with iptables and NAT</ulink> </para></listitem><listitem><para><ulink url="http://wiki.bluecrow.net/index.php/Mikrotik_Connection_Tracking">Mikrotik Connection Tracking - and load balancing</ulink> </para></listitem><listitem><para><ulink url="https://kb.juniper.net/InfoCenter/index?page=content&amp;id=KB17223&amp;actp=search">Juniper Policy Based Routing example(Filter Based Forwarding)</ulink> </para></listitem><listitem><para><ulink url="https://splash.riverbed.com/thread/6791">Juniper SRX Filter based forwarding aka PBR</ulink> </para></listitem><listitem><para><ulink url="http://www.juniper.net/documentation/en_US/junos16.1/topics/example/firewall-filter-option-filter-based-forwarding-example.html">Junos® OS for EX9200 Switches, Release 16.1 Example: Configuring Filter-Based Forwarding on the Source Address</ulink> </para></listitem><listitem><para><ulink url="https://help.ubnt.com/hc/en-us/articles/204962204-EdgeMAX-Policy-based-routing-for-transparent-proxy">EdgeMAX - Policy-based routing for transparent proxy (can be used to load balance by routing policy)</ulink> </para></listitem><listitem><para><ulink url="https://github.com/xsank/EasyProxy/tree/master/src/proxy/schedule">Scheduling algorithms implementation examples in GoLang(ip hash, random)</ulink> </para></listitem><listitem><para><ulink url="https://www.dd-wrt.com/wiki/index.php/Policy_Based_Routing">Example for Policy Based Routing in dd-wrt routers</ulink> </para></listitem><listitem><para><ulink url="https://github.com/cloudfoundry/gorouter#enabling-apps-to-detect-the-requestors-ip-address-uing-proxy-protocol">GoRouter a proxy that supports the proxy protocol, can be used to load balance couple squid servers\instances</ulink> </para></listitem><listitem><para><ulink url="http://community.brocade.com/t5/vADC-Docs/Feature-Brief-Load-Balancing-in-Stingray-Traffic-Manager/ta-p/73655">Brocade Stingray Traffic Manager</ulink> , <ulink url="https://youtu.be/8b5WRIHm13o?t=80">Video example of configuring their product</ulink> </para></listitem><listitem><para><ulink url="https://codecave.cc/multipath-routing-in-linux-part-1.html">Multipath Routing in Linux - part 1 - Jakub Sitnicki</ulink> </para></listitem><listitem><para><ulink url="https://codecave.cc/multipath-routing-in-linux-part-2.html">Multipath Routing in Linux - part 2 - Jakub Sitnicki</ulink> </para></listitem><listitem><para><ulink url="https://www.netdevconf.org/1.1/proceedings/papers/Load-balancing-with-nftables.pdf">Load Balancing with nftables Laura García</ulink> </para></listitem></itemizedlist></section></article>