<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>KnowledgeBase/Benchmarks</title><revhistory><revision><revnumber>26</revnumber><date>2015-08-25 16:45:04</date><authorinitials>Eliezer Croitoru</authorinitials><revremark>How do we want to refer the Older section? one by one?</revremark></revision><revision><revnumber>25</revnumber><date>2014-01-30 15:25:14</date><authorinitials>FrancescoChemolli</authorinitials><revremark>fix date</revremark></revision><revision><revnumber>24</revnumber><date>2014-01-30 15:24:37</date><authorinitials>FrancescoChemolli</authorinitials><revremark>added lab benchmark</revremark></revision><revision><revnumber>23</revnumber><date>2012-03-23 19:11:12</date><authorinitials>FrancescoChemolli</authorinitials><revremark>more detailed specs from Gareth Coffey</revremark></revision><revision><revnumber>22</revnumber><date>2012-03-20 20:19:47</date><authorinitials>FrancescoChemolli</authorinitials><revremark>added benchmark by Gareth Coffey.</revremark></revision><revision><revnumber>21</revnumber><date>2012-01-17 22:21:04</date><authorinitials>AmosJeffries</authorinitials><revremark>add the polygraph raw number as an arbitrary median. TODO: add hardware specs and adjust as things change.</revremark></revision><revision><revnumber>20</revnumber><date>2011-12-03 13:36:33</date><authorinitials>AmosJeffries</authorinitials><revremark>Vryans benchmarks are now MIA</revremark></revision><revision><revnumber>19</revnumber><date>2011-07-03 23:18:52</date><authorinitials>AmosJeffries</authorinitials><revremark>submission from &quot;Jenny Lee&quot; (an alias)</revremark></revision><revision><revnumber>18</revnumber><date>2011-03-01 03:54:39</date><authorinitials>AmosJeffries</authorinitials><revremark>add some benchmarks found clearing out email box</revremark></revision><revision><revnumber>17</revnumber><date>2010-12-29 13:17:53</date><authorinitials>FrancescoChemolli</authorinitials><revremark>fixed date. Code bracket doesn't like date macro</revremark></revision><revision><revnumber>16</revnumber><date>2010-12-29 13:17:11</date><authorinitials>FrancescoChemolli</authorinitials><revremark>added 3.1.10</revremark></revision><revision><revnumber>15</revnumber><date>2010-12-03 01:05:16</date><authorinitials>AmosJeffries</authorinitials><revremark>Add stats from a 2.7.STABEL9 by Quin Guin</revremark></revision><revision><revnumber>14</revnumber><date>2010-10-12 06:13:57</date><authorinitials>AmosJeffries</authorinitials><revremark>add some stats given during a complaint! by Krzysztof</revremark></revision><revision><revnumber>13</revnumber><date>2010-10-08 09:52:51</date><authorinitials>AmosJeffries</authorinitials><revremark>finally adding Markus 990rps details to the list</revremark></revision><revision><revnumber>12</revnumber><date>2010-03-29 06:00:33</date><authorinitials>AmosJeffries</authorinitials><revremark>another reasonably valid though limited third-party measurement</revremark></revision><revision><revnumber>11</revnumber><date>2009-04-06 07:57:18</date><authorinitials>AmosJeffries</authorinitials><revremark>add 2.6.STABLE18 submitted by: Gavin McCullagh, Griffith College Dublin</revremark></revision><revision><revnumber>10</revnumber><date>2009-04-05 14:20:16</date><authorinitials>FrancescoChemolli</authorinitials><revremark>Added indication on how  to obtain the cpu usage.</revremark></revision><revision><revnumber>9</revnumber><date>2008-12-14 11:10:22</date><authorinitials>AmosJeffries</authorinitials><revremark>more info.</revremark></revision><revision><revnumber>8</revnumber><date>2008-12-12 22:38:14</date><authorinitials>AmosJeffries</authorinitials><revremark>new benchmark submitted.</revremark></revision><revision><revnumber>7</revnumber><date>2008-12-07 04:52:29</date><authorinitials>AmosJeffries</authorinitials><revremark>add template for new entries. will save getting cut-n-paste errors.</revremark></revision><revision><revnumber>6</revnumber><date>2008-11-17 23:37:26</date><authorinitials>AmosJeffries</authorinitials><revremark>update Hassan stats and describe mehodology.</revremark></revision><revision><revnumber>5</revnumber><date>2008-11-17 01:04:33</date><authorinitials>AmosJeffries</authorinitials><revremark>some details for 2.7 provided (for a low peak so actual is likely to be much higher)</revremark></revision><revision><revnumber>4</revnumber><date>2008-07-17 05:00:43</date><authorinitials>AmosJeffries</authorinitials><revremark>oter benchmarking done way back.</revremark></revision><revision><revnumber>3</revnumber><date>2008-07-17 04:37:45</date><authorinitials>AmosJeffries</authorinitials><revremark>some squid-2 stats.</revremark></revision><revision><revnumber>2</revnumber><date>2008-07-17 04:21:39</date><authorinitials>AmosJeffries</authorinitials><revremark>note WHEN the benchmark was submitted</revremark></revision><revision><revnumber>1</revnumber><date>2008-07-17 04:08:53</date><authorinitials>AmosJeffries</authorinitials><revremark>kick off.</revremark></revision></revhistory></articleinfo><section><title>Most Current Squid Benchmarks</title><para>Speed and Requirement details of squid are a little hard to come by at present. Here is a list of the community contributed achievements. </para><para>If you are running any release of squid and can provide the same details with a better requests-per-second than one listed we would like to know about it. </para><para>Sorted by Squid Release and CPU. </para></section><section><title>Method of Calculation</title><para>There is no good fixed benchmark test yet to measure by so comparisons are not strictly correct. Here is how the follow details are calculated: </para><itemizedlist><listitem><para>At an administrator estimated peak traffic time run <emphasis role="strong">squidclient mgr:info</emphasis> or otherwise pull the info report from <emphasis role="strong">cachemgr.cgi</emphasis> </para></listitem></itemizedlist><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> Maximum value seen for <emphasis role="strong">Number of clients accessing cache</emphasis>. </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> Add all number for <emphasis role="strong">Average *** requests per minute since start</emphasis> together and divide by 60 for per-second </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> Values of <emphasis role="strong">Request Hit Ratios</emphasis>: 5min - 60min . Only total hit ratio matters here. disk and memory hit ratios are highly specific to the amount of RAM available.  </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Load </para></entry><entry colsep="1" rowsep="1"><para> It can be extracted from the <emphasis role="strong">general runtime information</emphasis> or <emphasis role="strong">info</emphasis> cachemgr page. It's the value marked &quot;CPU Usage&quot; </para></entry></row></tbody></tgroup></informaltable></section><section><title>Records</title><section><title>Squid trunk revno 13251</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> 4-core Intel Xeon E5-2670 @ 2.60GHz, paravirtualized (Xen) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 4 Gb </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> SSD </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> Ubuntu Saucy </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> 1 user in a controlled test environment </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 39715 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> 100% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"><para> 3 cores at 100% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Bandwidth </para></entry><entry colsep="1" rowsep="1"><para> 313 Mbit/sec sustained </para></entry></row></tbody></tgroup></informaltable><para>This number was taken in a <emphasis role="strong">controlled test environment</emphasis>. It has nothing to do with the numbers someone would get in a production environment; it's just an estimate of how fast squid can be. Squid was configured to do no logging, no access control, and apachebench was used to hammer squid asking 10M times for a static, cacheable, 600-bytes long document. Of the 4 cores, 3 were running a multi-worker squid, one was running ab over the loopback interface. </para><screen><![CDATA[Submitted by: FrancescoChemolli 2014-01-30]]></screen></section><section><title>Squid 3.2</title><section><title>3.2.0.14</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> <emphasis>unknown</emphasis> </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> <emphasis>unknown</emphasis> </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> <emphasis>unknown</emphasis> </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> CentOS 5.7 x64 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> <emphasis>unknown</emphasis> </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 956 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> <emphasis>unknown</emphasis> </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"><para> <emphasis>unknown</emphasis> </para></entry></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Squid BuildFarm 2012-01-18
]]><![CDATA[
This is achieved using laboratory tests with Web Polygraph for raw request throughput with no SMP workers engaged.
]]><![CDATA[
This is published as a theoretical median for high performance. Faster/newer hardware will reach higher throughput at peak and most networks will not reach this rate in real production traffic.]]></screen></section><section><title>3.2.0.9</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> Quad Core Q6600 @2.4 GHz </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 8 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> 80GB Intel X25-M SSD </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> RHEL 6.0 x64 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> <emphasis>unknown</emphasis> </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 670 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> 0% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"><para> 95.40% </para></entry></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Jenny Lee 2011-07-03
]]><![CDATA[
Client database is disabled. Proxy-only, no caching done. 5 to 20 parents. Squid doing content routing. conntrack_max and hashsize increased to 200K, ephemeral ports 64K. tcp_tw_recycle on.]]></screen></section></section><section><title>Squid 3.1</title><section><title>3.1.10</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> Intel(R) Xeon(R) CPU L5310  @ 1.60GHz (dual core) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 8 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> 1 x 400G SAS </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> Red Hat Enterprise Linux AS release 4 32-bit </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> 54 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 615 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> Hit Ratio  Request 41.7%-42.8% , Byte 49.8.7%-46.9% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"><para> 31.69% </para></entry></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Jack Quinlin 2010-12-29]]></screen></section></section><section><title>Squid 3.0</title><section><title>STABLE 5</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> Dual-Core </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> 1x Intel Core 2 Duo E4600 2.4 Ghz/800 MHz (2 MB L2 cache) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 3 GB PC2-5300 CL5 ECC DDR2 SDRAM DIMM </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> 2x 250 GB SATA in as a mirror configuration </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> OpenSUSE 10.3 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> ~100 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> Unknown: 'reasonable response rate' </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"/></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Philipp Rusch - New Vision. 2008-07-17.
]]><![CDATA[
IBM xSeries 3250 M2. This system is doing virus-scanning with ICAP-enabled Squid through KAV 5.5 Kaspersky AntiVirus for Internet Gateways
AND it is doing web-content filtering with SquidGuard 1.3
AND it is doing NTLM AUTH against the internal W2k3-ADS-domain]]></screen></section></section><section><title>Unknown Release</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para>  Intel Xeon 4x 2.8GHz </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 12 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"/></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"/></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"/></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 1500-2500 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"/></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"/></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Krzysztof Dajka. 2010-05-24
]]><![CDATA[
Running squid3.0 on Dell R300 servers. On production servers getting max 1500hits/s. With 2500hits/s I have seen that some in access.log, in elapsed column that some requests were closed after 6 seconds and average was something like ~300ms.]]></screen></section><section><title>Squid 2.7</title><section><title>unspecified</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> 2x Intel Xeon 5400 (quad-core)  </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 24 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> 2x72Gb SAS (HW RAID-1) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> Red Hat Linux 5 64bit with some tuning </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> unspecified </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Network Interfaces </para></entry><entry colsep="1" rowsep="1"><para> 2x Gigabit Ethernet with bonding </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> ~2000 connections/second </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Throughput </para></entry><entry colsep="1" rowsep="1"><para> ~980 MBit/second </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> unspecified, expected high (static content) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"><para> &lt; 25% </para></entry></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Gareth Coffey. 2012-03-20]]></screen></section><section><title>STABLE 9</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> Intel Xeon 2GHz (dual quad-core)  </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 8 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> 1 x 400G SAS </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> Linux: standard RHEL4.6 AS 64bit with some tuning </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> 55 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 1234 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> Request 54.0%-53.8% , Byte 56.7%-56.9% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"><para> 29.86% </para></entry></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Quin Guin. 2010-12-02.
]]><![CDATA[
We handle mostly mobile HTTP traffic so small files.]]></screen></section><section><title>STABLE 7</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> Intel Xeon 2GHz (dual quad-core) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 16 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> 4x 136 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> Linux </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> N/A (Reverse Proxy) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 990 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> Request 93.2%-94.6% , Byte 91.4%-91.9% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"><para> 16% </para></entry></row></tbody></tgroup></informaltable><para>Full Details: <ulink url="http://www.squid-cache.org/mail-archive/squid-users/201002/0838.html"/> </para><screen><![CDATA[Submitted by: Markus Meyer. 2010-02-25.
]]><![CDATA[
We have to handle mostly very, very small files which is
a real pain. So COSS was my white knight to handle this.
]]><![CDATA[
Although we don't use CARP we made sure that the proxies always get the
same requests. We have at our prime time about 40 MBit/s outgoing
traffic which makes about 1000 requests per second.
]]><![CDATA[
Also I should mention that we use a standard Debian kernel with no
tuning in any kernel parameters except the following two:
  net.ipv4.tcp_max_syn_backlog = 4096
  vm.swappiness = 0]]></screen></section><section><title>STABLE 6</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> Quad-Core Intel(R) Xeon(R) CPU L5420 @ 2.50GHz </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 8 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> 3x SAS Fujitsu 147Gb 15K </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> RHEL4 AS U7 64bit – 2.6.9-78.0.13.ELsmp </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> 57 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 166.95 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> Request 51.7%-51.3% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"><para> 7.18% </para></entry></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Quin Guin. 2009-04-07.
]]><![CDATA[
We handle mostly mobile HTTP traffic so small files.
]]><![CDATA[
CPU Usage, 5 minute avg:    4.33%
CPU Usage, 60 minute avg:    3.97%]]></screen></section><section><title>STABLE 4</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> Dual-Core </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> Core 2 Duo 2.33 GHz </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 8 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> 4x 160GB SATA for cache </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"/></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> ~2300 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 280 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> Request 41.7-43.8% </para></entry></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Nyamul Hassan. 2008-11-18.
Squid is doing a close to default configuration with ICP with peers and Collapsed Forwarding off.]]></screen></section></section><section><title>Squid 2.6</title><section><title>STABLE 21</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> Quad-Core Intel(R) Xeon(R) CPU L5420 @ 2.50GHz </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 8 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> 3x SATA,147Gb,7200K </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> RHEL4 AS U6 64bit – 2.6.9-67.ELsmp </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> 15 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 262.3 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> Request 74.2%-73.7% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"><para> 7.90% </para></entry></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Quin Guin. 2009-04-07.
]]><![CDATA[
We handle mostly mobile HTTP traffic so small files.
]]><![CDATA[
CPU Usage, 5 minute avg:    10.45%
CPU Usage, 60 minute avg:    10.21%]]></screen><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> Quad core Intel(R) Xeon(R) CPU E5430 @ 2.66GHz </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 12 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> 136GB on 3-disk RAID5, plus 30GB on 2-disk RAID1 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> 64-bit RHEL5.3 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> ~4000 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 62 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> Request 72%, Byte 60% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"><para> 2% (0.3% IOwait) </para></entry></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Jan-Frode Myklebust. 2009-04-06.]]></screen></section><section><title>STABLE 18</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> Dual Core Intel(R) Xeon(R) CPU  3050  @ 2.13GHz </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 8GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> 2x SATA disks (150GB, 1TB) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> 32-Bit Ubuntu GNU/Linux (Hardy) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> ~3000 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 130 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> Request 35% - 40%, Byte ~13% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"/></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Gavin McCullagh, Griffith College Dublin
]]><![CDATA[
Cache: 1x 600GB. With this hit ratio and cache size, substantial cpu time is spent in iowait
as the disk is overloaded.  Reducing the cache to 450GB relieves this, but
the hit rate drops to more like 10-11%.]]></screen></section><section><title>STABLE 6</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> Quad Core </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> Intel(R) Xeon(R) CPU  E5420  @ 2.50GHz </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 50 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> N/A (Memory Cache of 40 GB) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> Centos 5 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> N/A (Reverse Proxy) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 323 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> 87.1% - 86.0% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Byte Hit ratio</para></entry><entry colsep="1" rowsep="1"><para> 36.4% - 46.7% </para></entry></row></tbody></tgroup></informaltable></section></section><section><title>Squid 2.5</title><para>NP: probably 2.5.STABLE7 or earlier going by the release dates. </para><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> P4 2.8GHz </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 4 GB </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> 2 x 36GB 10 RPM, 2 x 73 15 RPM scsi disks  </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> Debian 2.4.25 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> ~3200 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS </para></entry><entry colsep="1" rowsep="1"><para> 220 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> 54% </para></entry></row></tbody></tgroup></informaltable><screen><![CDATA[Submitted by: Martin Marji Cermak. 2005-01-14.
http://www.squid-cache.org/mail-archive/squid-users/200501/0374.html]]></screen></section></section><section><title>Other Benchmarking</title><section><title>SquidBlocker 2015</title><para>The test is for one proxy which runs a url filtering DB helper. The helper runs http queries against one reverse proxy which <ulink url="https://wiki.squid-cache.org/KnowledgeBase/Benchmarks/RoundRobin#">RoundRobin</ulink> load balance to three backend DB servers. The squid settings: </para><screen><![CDATA[workers 2
visible_hostname proxy2
]]><![CDATA[
external_acl_type filter_url ipv4 children-max=20 children-startup=10 children-idle=5 concurrency=50 ttl=3 %URI %METHOD %un /usr/bin/sblocker_client -http=http://filterdb:8082/sb/01
acl filter_url_acl external filter_url
deny_info http://ngtech.co.il/block_page/?url=%u&domain=%H filter_url_acl
]]><![CDATA[
acl localnet src 192.168.0.0/16
]]><![CDATA[
http_access deny !filter_url_acl
http_access allow localnet filter_url_acl
access_log none]]></screen><para>Environent topology at: <ulink url="http://ngtech.co.il/squidblocker/topology1.png"/> <inlinemediaobject><imageobject><imagedata fileref="http://ngtech.co.il/squidblocker/topology1.png" width="750"/></imageobject><textobject><phrase>SquidBlocker test lab</phrase></textobject></inlinemediaobject>  </para><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU </para></entry><entry colsep="1" rowsep="1"><para> 4-core Intel(R) Xeon(R) CPU E5420 @ 2.50GHz, virtualized (KVM) </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RAM </para></entry><entry colsep="1" rowsep="1"><para> 2 Gb </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> HDD </para></entry><entry colsep="1" rowsep="1"><para> SSD </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> OS  </para></entry><entry colsep="1" rowsep="1"><para> CentOS 7 64bit </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Users </para></entry><entry colsep="1" rowsep="1"><para> 1 user in a controlled test environment </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS For a cached object </para></entry><entry colsep="1" rowsep="1"><para> 4955 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Hit Ratio </para></entry><entry colsep="1" rowsep="1"><para> 100% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> RPS For a blocked url </para></entry><entry colsep="1" rowsep="1"><para> 9551 </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> CPU Usage </para></entry><entry colsep="1" rowsep="1"><para> 2 cores, 1 at 100% </para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para> Bandwidth </para></entry><entry colsep="1" rowsep="1"><para> unknown </para></entry></row></tbody></tgroup></informaltable><para>This number was taken in a <emphasis role="strong">controlled test environment</emphasis>. It has nothing to do with the numbers someone would get in a production environment; it's just an estimate of how fast squid can be. Squid was configured to do no logging and apachebench was used to hammer squid asking 250K times for a blocked url (leading to a 403 response with a location header) or with a cacheable, 16KB long document. Of the 4 cores, 2 were running a multi-worker squid. The apache benchmark was run from another host and from the same host with similar results. </para><screen><![CDATA[Submitted by: Eliezer Croitoru 2015-08-25]]></screen></section><section><title>Older</title><para>Mark Nottingham benchmarked Squid 2.5 vs 2.6 in late 2006: <ulink url="http://www.mnot.net/blog/2006/08/21/caching_performance"/> </para><para>The Measurement Factory benchmarked Squid 2.4, in particular IO systems in 2000 <ulink url="http://polygraph.ircache.net/Results/bakeoff-2/"/> </para><para>Bryan Migliorisi posted some analysis of <ulink url="https://wiki.squid-cache.org/KnowledgeBase/Benchmarks/Squid-2.6#">Squid-2.6</ulink> speeds under pressure on September 8th, 2009 at unfortunately a dynamic website that disappeared on us. </para><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/KnowledgeBase/Benchmarks/CategoryKnowledgeBase#">CategoryKnowledgeBase</ulink> </para></section></section></article>