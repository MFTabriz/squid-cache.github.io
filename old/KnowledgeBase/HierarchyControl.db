<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>KnowledgeBase/HierarchyControl</title><revhistory><revision><revnumber>5</revnumber><date>2008-05-18 19:39:01</date><authorinitials>localhost</authorinitials><revremark>converted to 1.6 markup</revremark></revision><revision><revnumber>4</revnumber><date>2008-04-09 00:17:59</date><authorinitials>Henrik Nordström</authorinitials></revision><revision><revnumber>3</revnumber><date>2008-04-09 00:16:14</date><authorinitials>Henrik Nordström</authorinitials></revision><revision><revnumber>2</revnumber><date>2008-04-08 15:51:57</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>1</revnumber><date>2008-04-08 15:51:11</date><authorinitials>FrancescoChemolli</authorinitials></revision></revhistory></articleinfo><section><title>Hierarchy Control</title><para><emphasis role="strong">Synopsis</emphasis> </para><para>Squid offers various mechanisms to control how requests are forwarded. The most important are <code>never_direct</code>, <code>always_direct</code> and <code>hierarchy_stoplist</code>. They interact with each other and with a request's implicit characteristics to determine how a request will eventually be satisfied. </para><para><emphasis role="strong">The Steps</emphasis> </para><para>The various directives are evaluated in this order: </para><orderedlist numeration="arabic"><listitem><para><code>always_direct</code> </para><itemizedlist><listitem override="none"><para>if it matches as <emphasis>allow</emphasis>, go to origin </para></listitem></itemizedlist></listitem><listitem><para><code>never_direct</code> </para><itemizedlist><listitem override="none"><para>if it matches as <emphasis>allow</emphasis>, go to a parent instead of origin in the cases below </para></listitem></itemizedlist></listitem><listitem><para><code>hierarchy_stoplist</code> </para><itemizedlist><listitem override="none"><para>if it matches as <emphasis>allow</emphasis>, go to origin </para></listitem></itemizedlist></listitem><listitem><para>determine if a request is hierarchic </para><itemizedlist><listitem override="none"><para>if it is, check whether siblings or parents have the object via cache digests or ICP. In case of hit, ask the fastest among those hiting for the object </para></listitem></itemizedlist></listitem><listitem><para>go to origin </para></listitem></orderedlist><para><emphasis role="strong">What makes a request hierarchic</emphasis> </para><para>The purpose of cache hierarchy is to maximize the chance of finding objects in siblings, so a set of heuristics is applied to try and determine in advance whether an object is likely to be cacheable. A few objects are <emphasis role="strong">not</emphasis> cacheable, and are thus <emphasis role="strong">not</emphasis> hierarchic. Those are: </para><itemizedlist><listitem><para>reload requests </para></listitem><listitem><para>cache validations with non-Squid ICP peers </para></listitem><listitem><para>requests for HTTP methods other than <code>GET</code>, <code>HEAD</code> or <code>TRACE</code> </para></listitem><listitem><para>authenticated requests </para></listitem></itemizedlist><!--rule (<hr>) is not applicable to DocBook--><para> <ulink url="https://wiki.squid-cache.org/KnowledgeBase/HierarchyControl/CategoryKnowledgeBase#">CategoryKnowledgeBase</ulink> </para></section></article>