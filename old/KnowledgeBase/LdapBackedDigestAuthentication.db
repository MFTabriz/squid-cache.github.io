<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>KnowledgeBase/LdapBackedDigestAuthentication</title><revhistory><revision><revnumber>10</revnumber><date>2013-10-06 02:27:15</date><authorinitials>AmosJeffries</authorinitials><revremark>remove squid-2 specific details from download and build instructions</revremark></revision><revision><revnumber>9</revnumber><date>2008-05-18 19:38:59</date><authorinitials>localhost</authorinitials><revremark>converted to 1.6 markup</revremark></revision><revision><revnumber>8</revnumber><date>2008-05-18 00:19:30</date><authorinitials>EdmundoValle</authorinitials></revision><revision><revnumber>7</revnumber><date>2008-04-08 14:36:48</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>6</revnumber><date>2007-08-21 22:18:08</date><authorinitials>EdmundoValle</authorinitials><revremark>Included the version of Squid used.</revremark></revision><revision><revnumber>5</revnumber><date>2007-08-15 03:01:33</date><authorinitials>EdmundoValle</authorinitials></revision><revision><revnumber>4</revnumber><date>2007-08-15 02:48:09</date><authorinitials>EdmundoValle</authorinitials></revision><revision><revnumber>3</revnumber><date>2007-08-15 02:46:49</date><authorinitials>EdmundoValle</authorinitials></revision><revision><revnumber>2</revnumber><date>2007-08-14 21:56:55</date><authorinitials>EdmundoValle</authorinitials></revision><revision><revnumber>1</revnumber><date>2007-08-14 21:51:10</date><authorinitials>EdmundoValle</authorinitials></revision></revhistory></articleinfo><section><title>Using the digest LDAP authentication helper</title><para><emphasis role="strong">Synopsis</emphasis> </para><para>A lot of people storing their password in an LDAP base don't feel comfortable when using the basic mechanism because it sends the passwords in clear text to Squid (a base64 encoded string), and sometimes ends up by using NTLM to talk to a CIFS server. The purpose of this document is to show how to configure an authentication helper in Squid using the digest mechanism and storing the passwords (or in that case, the digests) in LDAP. </para><para><emphasis role="strong">Environment and what is expected that you have or already know</emphasis> </para><para>The environment used in the test was composed by two Debian Sarge servers, one playing a role of an internet gateway (running Squid 2.5.9) and the other hosting the LDAP base (running OpenLDAP) and being the PDC of the Samba domain. Doesn't matter much how or where your services are running, but is expected from who are reading this: </para><itemizedlist><listitem><para>Already working Squid, Samba and LDAP servers. </para></listitem><listitem><para>Already configured Idealx's smbldap-tools to manipulate the accounts (it relies on this to sync). </para></listitem><listitem><para>Some knowledge on how LDAP works and stores its information. </para></listitem></itemizedlist><para><emphasis role="strong">The way it was done</emphasis> </para><para>To manipulate the attributes in LDAP was used the tools from the package ldap-utils (those beginning with ldap* and used to manipulate the base when running, pretty standard). Theres n ways to do that, feeding the base with LDIF files, using administration tools with a web interface, these will not be shown here. LDAP can be populated in various different forms, so, it is expected that yours can be a little different than mine (the structure used by Idealx's smbldap-populate script, and the way Debian sets up an administrator account was used here). </para><para>It was used an attribute called &quot;l&quot; (defined in core.schema) to hold the digest, its not exactly made for this, but I couldn't though in anything more appropriate, but anyway, it is not a problem. You will see sometimes a host called &quot;fileserver&quot; being used (it is because my Squid and LDAP + Samba aren't in the same host). The DN of my LDAP administrator is &quot;cn=admin,dc=minharede,dc=lan&quot; with a password &quot;temppass&quot;, it is the account that can do anything inside the base. </para><para><emphasis role="strong">How the digest is calculated and what is expected to be in the base</emphasis> </para><para>The base needs to hold an attribute containing a pair, realm and H(A1) separated by a separator like realm:H(A1) inside a distiguished name representing an user name. Where H(A1) is the digested value of username:realm:password. </para><para><emphasis role="strong">Installing and testing the helper</emphasis> </para><para><emphasis role="strong">1. </emphasis>Get the <ulink url="http://www.squid-cache.org/Versions/">Squid sources</ulink>, compile the digest_ldap_auth helper and put it together with the others squid helpers. </para><para>Here I will not discuss much on how to compile Squid or solve dependency problems. </para><screen><![CDATA[./configure --enable-auth-digest=LDAP
make
cp ./helpers/digest_auth/LDAP/digest_ldap_auth /usr/lib/squid
../]]></screen><para>Put it where YOUR distro holds the helpers (or wherever you want). </para><para><emphasis role="strong">2.</emphasis> Create a hash in one account to make a test. Run it from the shell. </para><screen><![CDATA[REALM="Squid proxy-caching web server" HASH=`echo -n "usuario1:$REALM:password" | md5sum | cut -f1 -d' '` ldapmodify -x -D "cn=admin,dc=minharede,dc=lan" -w "temppass" << EOF
dn: uid=usuario1,ou=Users,dc=minharede,dc=lan
l: $REALM:$HASH
EOF]]></screen><para><emphasis role="strong">3. </emphasis>Test the helper from the command line. </para><screen><![CDATA[echo '"usuario1":"Squid proxy-caching web server"' | /usr/lib/squid/digest_ldap_auth -b "ou=Users,dc=minharede,dc=lan" -u "uid" -A "l" -D "cn=admin,dc=minharede,dc=lan" -w "temppass" -e -v 3 -h fileserver -d
Connected OK
searchbase 'uid=usuario1, ou=Users,dc=minharede,dc=lan'
password: 6f9e1772bc8ed55bfe157071e169bf19
6f9e1772bc8ed55bfe157071e169bf19]]></screen><para><emphasis role="strong">4.</emphasis> Create a &quot;Simple Security Object&quot; in LDAP. </para><para>It will be used to bind and read the digests. When using digest, users do not authenticate in the base, so granting access only for them is pointless, and you will not want anyone looking at the digests of your entire base. </para><screen><![CDATA[PASS=`slappasswd -s "digestpass"` ldapadd -x -D "cn=admin,dc=minharede,dc=lan" -w "temppass" << EOF
dn: uid=digestreader,dc=minharede,dc=lan
objectClass: top
objectClass: account
objectClass: simpleSecurityObject
uid: digestreader
userPassword: $PASS
EOF]]></screen><para><emphasis role="strong">5.</emphasis> Protect the digest attribute to be readed and/or writed only by who should do it. </para><para>Change your slapd.conf: </para><screen><![CDATA[access to attrs=l
        by dn="cn=admin,dc=minharede,dc=lan" write
        by dn="uid=digestreader,dc=minharede,dc=lan" read
        by anonymous auth
        by self write
        by * none]]></screen><para>Restart your OpenLDAP. </para><para><emphasis role="strong">6.</emphasis> Put the password of the object in a file and protect it. </para><screen><![CDATA[echo "digestpass" > /etc/digestreader_cred
chown proxy:proxy /etc/digestreader_cred
chmod 440 /etc/digestreader_cred]]></screen><para>In Debian, Squid runs as the user proxy and so helpers are executed as the user proxy. </para><para><emphasis role="strong">7.</emphasis> Test the helper again using the object created to bind to the base and the file with the password. </para><screen><![CDATA[echo '"usuario1":"Squid proxy-caching web server"' | /usr/lib/squid/digest_ldap_auth -b "ou=Users,dc=minharede,dc=lan" -u "uid" -A "l" -D "uid=digestreader,dc=minharede,dc=lan" -W "/etc/digestreader_cred" -e -v 3 -h fileserver -d
Connected OK
searchbase 'uid=usuario1, ou=Users,dc=minharede,dc=lan'
password: 6f9e1772bc8ed55bfe157071e169bf19
6f9e1772bc8ed55bfe157071e169bf19]]></screen><para><emphasis role="strong">8.</emphasis> Configure Squid to use the LDAP digest helper. </para><para>In squid.conf: </para><screen><![CDATA[...
auth_param digest program /usr/lib/squid/digest_ldap_auth -b "ou=Users,dc=minharede,dc=lan" -u "uid" -A "l" -D "uid=digestreader,dc=minharede,dc=lan" -W "/etc/digestreader_cred" -e -v 3 -h fileserver
auth_param digest children 5
auth_param digest realm Squid proxy-caching web server
...]]></screen><para>The debug flag &quot;-d&quot; is not used here, we are not debugging anymore. </para><para><emphasis role="strong">Digest synchronization</emphasis> </para><para><emphasis role="strong">1.</emphasis> Change the smbldap-passwd script from idealx. </para><screen><![CDATA[...
################ CHANGE THIS CODE ################
# use Digest::MD5 qw(md5);
use Digest::MD5 qw(md5 md5_hex md5_base64);
######### END OF THE CODE TO BE CHANGED ##########
...
# Update 'userPassword' field
my $modify = $ldap_master->modify ( "$dn", changes => [
                                           replace => [userPassword => "$hash_password"]
                                           ]
                                  );
$modify->code && warn "Unable to change password : ", $modify->error ;
################ INSERT THIS CODE ################
my $realm = "Squid proxy-caching web server";
# Creates the digest.
my $HA1digest = md5_hex("$user:$realm:$pass");
my $realmdigest = "$realm:$HA1digest";
# Add the attribute, if it already exists it will be overwritten.
$modify = $ldap_master->modify ( "$dn",
      changes => [
         replace => [l => $realmdigest]
      ]
);
$modify->code && warn "Unable to create the H(A1) hash : ", $modify->error ;
######### END OF THE CODE TO BE INSERTED #########
# take down session
$ldap_master->unbind;
exit 0;
...]]></screen><para>You can do something a little more elaborated than this, like read the realm from the config file, create a flag to make the sync, etc. The code can be a little different from version to version, but the point is that its just a perl script and is very easy to put a little more code to create another attribute with a digest. </para><para><emphasis role="strong">2. </emphasis>Use the &quot;passwd program&quot; option in samba to make use of the changed script. </para><para>In smb.conf: </para><screen><![CDATA[# ldap passwd sync = Yes
unix password sync = Yes
passwd program = /usr/sbin/smbldap-passwd -u %u
passwd chat = "Changing password for*\nNew password*" %n\n "*Retype new password*" %n\n]]></screen><para><emphasis role="strong">Result</emphasis> </para><para>At that point your Windows clients can change their passwords from inside Windows and Linux clients can change their passwords using smbldap-passwd. All passwords and digests will remain in sync.<emphasis role="strong"> </emphasis> </para><!--rule (<hr>) is not applicable to DocBook--><itemizedlist><listitem override="none"><para><ulink url="https://wiki.squid-cache.org/KnowledgeBase/LdapBackedDigestAuthentication/CategoryKnowledgeBase#">CategoryKnowledgeBase</ulink> </para></listitem></itemizedlist></section></article>