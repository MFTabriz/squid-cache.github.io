<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>QA/Pilots</title><revhistory><revision><revnumber>6</revnumber><date>2017-03-15 21:49:53</date><authorinitials>AlexRousskov</authorinitials><revremark>We have selected an engineer for Pilot-1. The application process is now closed.</revremark></revision><revision><revnumber>5</revnumber><date>2017-02-15 17:12:13</date><authorinitials>AlexRousskov</authorinitials><revremark>Bumped the application deadline by 48 hours to adjust for the application process confusion at some job searching sites.</revremark></revision><revision><revnumber>4</revnumber><date>2017-02-09 17:44:22</date><authorinitials>AlexRousskov</authorinitials><revremark>Addressed a candidate concern regarding DevOps-vs-QA nature of the position. We are advertising this position as DevOps on some forums. DevOps reflects our initial requirements better than QA.</revremark></revision><revision><revnumber>3</revnumber><date>2017-02-06 00:03:21</date><authorinitials>AlexRousskov</authorinitials><revremark>This page should probably not be writeable by all.</revremark></revision><revision><revnumber>2</revnumber><date>2017-01-31 21:21:27</date><authorinitials>AlexRousskov</authorinitials><revremark>The first public version. Same as the Board-reviewed draft, except for the &quot;this page may change!&quot; warning expanded+moved into the Q&amp;A section and the &quot;Stay away!&quot; header removed.</revremark></revision><revision><revnumber>1</revnumber><date>2017-01-31 21:01:00</date><authorinitials>AlexRousskov</authorinitials><revremark>temporary placeholder in hope to make links working in Preview mode</revremark></revision></revhistory></articleinfo><section><title>QA Pilots</title><para>The Squid Project needs to reduce the number of regression bugs in Squid releases and development snapshots. The large number of regressions illustrate that our peer code reviews are naturally insufficient, and our post-commit build tests are woefully inadequate. </para><para>To partially address these systemic problems, the Squid Software Foundation plans to adjust the commit process (making successful regression testing mandatory before any commit) and to hire a paid DevOps/QA engineer to back that new process with the necessary infrastructure support. We already have a set of proxy testing tools, but the existing Project volunteers do not have enough time, interest, and/or skills to use/improve those tools and support the QA infrastructure. A paid engineer would be able to focus on that. </para><para>Before a regular QA Engineer position is filled, we offer the following pilot projects. These pilots will help the Project to select the most suitable candidate. They also provide a good illustration of the kind of challenges a Project QA Engineer will face. </para><para>Application <emphasis role="strikethrough">is</emphasis>was open to anybody interested in doing the pilots and continuing working with the Squid Project afterwards. The Project ads were viewed by thousands of people. We received about 50 resumes and 10 completed applications. We selected one engineer to do the first Pilot (at least). It is our intention to complete all these pilot projects and then fill the QA Engineer position. </para><para>Please see the <link linkend="Q_and_A">Q&amp;A</link> section for more info. </para><section><title>Application</title><para><inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/alert.png" width="15"/></imageobject><textobject><phrase>/!\</phrase></textobject></inlinemediaobject> Applications are now closed. You may submit yours as a backup in case the first Pilot projects fail, but please note that your application will receive very little attention until that failure (and we hope the pilots will succeed!). </para><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para>Due date:</para></entry><entry colsep="1" rowsep="1"><para>2017-02-15 noon UTC (extended to 2017-02-17 noon UTC)</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Preconditions:</para></entry><entry colsep="1" rowsep="1"><para>desire and skills to complete the pilots and to continue working with the Project after that</para></entry></row></tbody></tgroup></informaltable><para>Please review the descriptions of all three pilots and the <link linkend="Q_and_A">Q&amp;A</link> section before applying. </para><para>To apply, on your free-form application: </para><orderedlist numeration="arabic"><listitem><para>list any relevant skills and accomplishments, </para></listitem><listitem><para>propose the overall architecture for Pilot-1 and justify your design, </para></listitem><listitem><para>specify your country of residence (where the pilot payments would need to be sent) and the preferred payment method, </para></listitem><listitem><para>supply any other information you deem necessary. </para></listitem></orderedlist><para>Please email your complete application to <code>&lt;info@squid-cache.org&gt;</code> with <emphasis>QA pilots application</emphasis> as the exact email subject. </para><para>Applications received after the due date may be ignored. We hope to offer Pilot-1 to one of the applicants within three weeks after the due date. </para></section><section><title>Pilot-1</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para>Goal:</para></entry><entry colsep="1" rowsep="1"><para>Protect Squid trunk from build failures</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Duration:</para></entry><entry colsep="1" rowsep="1"><para>4 weeks</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Cost:</para></entry><entry colsep="1" rowsep="1"><para>$1'000</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Preconditions:</para></entry><entry colsep="1" rowsep="1"><para>Project invitation based on the <link linkend="Application">Application</link></para></entry></row></tbody></tgroup></informaltable><para>Currently, all accepted Squid code changes are first committed to Squid bzr repository. Jenkins notices a new commit and performs several build tests. If a build test fails, an email is sent to the squid-dev mailing list with the failure details. Humans usually notice the email report and fix the problem, but that may take a few days or even weeks. Meanwhile, the broken commit remains in Squid trunk, often blocking other work or tempting folks to commit untested code. </para><para>We would like to rearrange this scheme so that all accepted Squid code changes are queued <emphasis>before</emphasis> they are committed, and the build tests are performed against the queued rather than committed changes. If a change passes the build test, it is automatically committed. If a change fails the build test, it is removed from the queue. A change removal may have a cascading effect on other queued changes, of course, but that ought to be rare and is acceptable. </para><para>You may propose to migrate Squid from bzr to git and/or from Jenkins to another CI system. However, since any migration is a pain, you would need to convince the Project that the migration is worth it <emphasis>and</emphasis> provide the Project with enough information to make an informed decision (without forcing decision makers to study the alternatives themselves). Your proposal may require Pilot-1 duration and cost adjustments. However, proposals requiring significant cost increases are unlikely to be accepted. </para><para>Some build tests may use unreliable machines or experimental configurations. There should be a way to exclude them from disqualifying pending changes. They should still run and report failures but those failures should have no effect on automated commits. </para><para>It should still be possible to commit changes without going though the build validation process, but that functionality will be used in emergencies or similar extraordinary situations only. Even seemingly trivial changes are expected to go through the validation process. </para><para>Normally, accepted changes will be queued in FIFO order. However, it would be nice if core developers could reorder queued changes when necessary. That functionality is <emphasis>not</emphasis> required for Pilot-1 though. </para><para>Supporting a similar system for multiple Squid branches (trunk, v4.0, v3.5, etc.) is a plus but not a hard requirement for Pilot-1 which focuses on trunk. </para><para>Eventually, the same validate-before-commit principle will apply to other admission and testing activities, including: </para><orderedlist numeration="arabic"><listitem><para>developer voting during review of the proposed changes (to officially accept the proposed change) </para></listitem><listitem><para>code formatting changes (or perhaps that would be done automatically to queued changes?) </para></listitem><listitem><para>compliance tests (using Co-Advisor test cases) </para></listitem><listitem><para>performance tests (using Web Polygraph workloads) </para></listitem><listitem><para>code quality tests (using Coverity test cases) </para></listitem><listitem><para>black-box functionality tests (using Daft test cases) </para></listitem></orderedlist><para>Keeping these plans in mind is important for Pilot-1 (to avoid proposing an architecture that cannot accommodate those plans well), but implementing the corresponding features is <emphasis>outside</emphasis> Pilot-1 scope. </para></section><section><title>Pilot-2</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para>Goal:</para></entry><entry colsep="1" rowsep="1"><para>Protect Squid trunk from HTTP compliance regressions</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Duration:</para></entry><entry colsep="1" rowsep="1"><para>4 weeks</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Cost:</para></entry><entry colsep="1" rowsep="1"><para>$800</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Preconditions:</para></entry><entry colsep="1" rowsep="1"><para>Successful Pilot-1 completion and Project invitation</para></entry></row></tbody></tgroup></informaltable><para>Currently, there is no automated, regular Squid testing for protocol compliance regressions or violations. Occasionally, developers run Co-Advisor tests and fix regression bugs. At some point, automated Co-Advisor testing was setup but it was poorly integrated and got neglected/abandoned. </para><para>This Pilot project enables automated Co-Advisor tests for pending Squid changes. Any worsening of a stable test case outcome (e.g., from &quot;success&quot; to &quot;violation&quot; or &quot;failure&quot;) would disqualify the queued code change with a corresponding report emailed to squid-dev (and logged). An improvement of stable test case outcomes (e.g., from &quot;violation&quot; to &quot;success&quot;) without any regressions in other test cases should automatically update the &quot;golden result&quot; that is used for regressions detection so that future changes have a higher bar to pass; a notification about the update should be emailed to squid-dev (and logged). </para><para>Co-Advisor comes with scripts to repeat tests and compare test results. Integrating those scripts with the CI infrastructure to satisfy the above requirements is the focus of Pilot-2. Cooperation with Measurement Factory engineers may be required for smooth integration. Learning how to configure and run Co-Advisor tests will be required, but it is not difficult and Measurement Factory can help with that. </para><para>It should be possible for core developers to ignore a given Co-Advisor test result so that the automated commit may proceed. This functionality would be useful if manual checks confirm that the alleged compliance regression was not Squid fault (or is actually desirable for some other reason). </para></section><section><title>Pilot-3</title><informaltable><tgroup cols="2"><colspec colname="col_0"/><colspec colname="col_1"/><tbody><row rowsep="1"><entry colsep="1" rowsep="1"><para>Goal:</para></entry><entry colsep="1" rowsep="1"><para>Protect Squid trunk from performance regressions</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Duration:</para></entry><entry colsep="1" rowsep="1"><para>6 weeks</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Cost:</para></entry><entry colsep="1" rowsep="1"><para>$1'200</para></entry></row><row rowsep="1"><entry colsep="1" rowsep="1"><para>Preconditions:</para></entry><entry colsep="1" rowsep="1"><para>Successful Pilot-2 completion and Project invitation</para></entry></row></tbody></tgroup></informaltable><para>Currently, there is no automated, regular Squid testing for performance regressions which may go unnoticed for years. At some point, automated Web Polygraph testing was setup but it was not comprehensive enough and got neglected/abandoned. This Pilot project enables automated Polygraph tests for pending Squid changes. A performance regression detected by one of the tests would disqualify the queued code change with a corresponding report emailed to squid-dev (and logged). A significant performance improvement (without any regressions) should automatically update the &quot;golden result&quot; that is used for regressions detection so that future changes have a higher bar to pass; a notification about the update should be emailed to squid-dev (and logged). </para><para>Measurement Factory will provide the initial set of 3-5 Polygraph workloads for these tests. You will be responsible for scripting test execution and result analysis, although some existing scripts can be reused. You will need to find a way to execute performance-sensitive tests in a CI environment to minimize false alarms. Learning how to configure and run Web Polygraph tests will be required. </para></section><section><title>Q and A</title><orderedlist numeration="arabic"><listitem><para>What if I have questions not answered here? </para><itemizedlist><listitem override="none"><para>You may post your questions to <code>&lt;info@squid-cache.org&gt;</code>. However, most of the information required to successfully apply, plan, and complete Pilot-1 is publicly available. We hate discouraging questions (and some cooperation/discussion with the Project <emphasis>will</emphasis> be required during all pilots), but please keep in mind that nobody has the time for detailed answers, especially answers to unnecessary questions. Do your best to solve the problems on your own and, if you have to ask something, make it easy for others to answer your questions. During the application stage, we may update this page with more answers to popular questions. </para></listitem></itemizedlist></listitem><listitem><para>Can you detail the expected QA Engineer position? </para><itemizedlist><listitem override="none"><para>Just like the pilots, the QA Engineer position is for a part-time &quot;remote&quot; independent contractor. The engineer responsibilities will include: </para><itemizedlist><listitem><para>Perform needs analysis and advise the Squid Project on available infrastructure tools and approaches for automating the regression testing process. Suggest specific alternatives and drive public discussions to arrive at the best solution for the Project. The candidate solutions may range from home-grown Jenkins scripts to commercial CI platforms (available to open source projects). </para></listitem><listitem><para>Automate and manage Squid regression testing. Integrate the existing proxy performance and functionality testing tools (including test-builds.sh, Coverity, Co-Advisor, Web Polygraph, and Daft) with the Project-designed infrastructure. </para></listitem><listitem><para>Learning HTTP and other Squid-related protocols with the goal of being eventually able to audit automated test results without deferring to Squid developers. </para></listitem><listitem><para>Long-term: Learning existing testing tools with the goal of being eventually able to create new test cases and fix old ones without deferring to tools developers. </para></listitem></itemizedlist><para>QA Engineer position prerequisites/requirements include: </para><orderedlist numeration="arabic"><listitem><para>Experience with open source projects, especially those that have many contributors. Ability to independently drive a project forward in the presence of multiple decision makers with conflicting and/or missing requirements is a big plus. </para></listitem><listitem><para>Ability to clearly express oneself in English, especially when using plain text emails and simple markup pages. Ability to quickly comprehend technical English literature. Ability to speak English is not required, but is a plus. </para></listitem><listitem><para>Experience with modern test automation approaches and platforms. </para></listitem><listitem><para>Excellent scripting skills. System administration skills are a plus. </para></listitem><listitem><para>10+ hours/week availability. Full-time engagement might eventually be possible. </para></listitem><listitem><para>Squid experience is a plus. C++ and/or Javascript knowledge is a plus. This is not a development position, but auditing Squid failures and writing/fixing test cases require development skills. </para></listitem></orderedlist></listitem></itemizedlist></listitem><listitem><para>May I propose non-free and/or closed-source solutions? </para><itemizedlist><listitem override="none"><para>Yes, you may. With all other factors being equal, the Project would prefer a free open-source solution. The Squid Foundation does not currently have enough funds to spend more than ~$100/month on infrastructure payments and currently spends zero. Many commercial services do offer free (as in beer) access to open-source projects but it is your responsibility to carefully research the limits of such offerings because they may not include great features advertised as otherwise available. </para></listitem></itemizedlist></listitem><listitem><para>What are the payment terms and procedure? </para><itemizedlist><listitem override="none"><para>All prices are listed in US Dollars. The Project can pay via US bank checks, PayPal, or bank wire transfer (subject to various US banking regulations). The payment will be made within 30 calendar days of the successful pilot completion. Contractors in the US will need to fill out W-9s and will receive 1099s as required by law. </para></listitem></itemizedlist></listitem><listitem><para>Will Pilot specifications change? </para><itemizedlist><listitem override="none"><para>Yes, Pilot specs are likely to be adjusted until the Pilot is awarded to a contractor. After that, any material changes would be negotiated with the person doing the work, of course. </para></listitem></itemizedlist></listitem><listitem><para>Will applicants be notified when this page changes? </para><itemizedlist><listitem override="none"><para>No manual notifications are planned. Registered wiki users may <ulink url="https://wiki.squid-cache.org/QA/Pilots/HelpOnSubscribing#">subscribe</ulink> to monitor this page changes. It is applicants responsibility to stay up to date, and we encourage you to use appropriate tools to track this page modifications. </para></listitem></itemizedlist></listitem><listitem><para>Who determines whether a pilot was successful? </para><itemizedlist><listitem override="none"><para>The Project will determine whether a pilot was successful. If there is no consensus on squid-dev, the Squid Software Foundation board will make that decision. </para></listitem></itemizedlist></listitem><listitem><para>I emailed my application. Now what? </para><itemizedlist><listitem override="none"><para>You should receive an automated response that your email was sent to the mailing list moderator. No later than a week after the application deadline, you will receive a confirmation that your application has been received and is being reviewed. No later than three weeks after the application deadline, you will receive another email with the Project decision. If you do not hear from us within these periods, please do send another email to troubleshoot. However, sending re-confirmation emails earlier than necessary may decrease your acceptance chances. </para></listitem></itemizedlist></listitem><listitem><para>How can I recommend somebody else to do the pilots? </para><itemizedlist><listitem override="none"><para>Please show them this page and encourage them to apply! Unfortunately, we may not have enough time to review recommendations and then solicit applications from the recommended folks. It is best if they apply themselves. </para></listitem></itemizedlist></listitem><listitem><para>Wait a second! Is not this a DevOps position? Why do you call this work QA?! </para><itemizedlist><listitem override="none"><para>The three pilot projects and the expected initial work is indeed 90% DevOps (if you want to use a fresh buzzword) or system administration (if you want to stretch an old term to cover things like CI on some cloud platform). We need an engineer to setup, configure, and occasionally create systems/processes/tools that guard Squid from regressions. Whether that engineer has &quot;DevOps&quot;, &quot;sysadmin&quot;, and/or &quot;QA&quot; keywords on the resume is largely irrelevant. </para></listitem><listitem override="none"><para>For example, Pilot-1 is not about writing or running QA test cases; it is about selecting and then setting up/integrating existing development and testing tools to prevent build failures. Similarly, Pilot-2 and Pilot-3 are not about writing or running test cases either! </para></listitem><listitem override="none"><para>The long-term expectations for the position is a slow migration towards 75% QA because the systems/processes established in the beginning ought to continue to function increasingly well, with little ongoing maintenance. Thus, the need for DevOps/sysadmin work will diminish (but not disappear). On the other hand, it is also possible that the Squid Project will need both a DevOps and a QA engineer at that time. However, even at that distant stage, we do <emphasis>not</emphasis> expect the position to focus on &quot;boring QA&quot; tasks such as testing whether clicking a GUI button 100 times breaks something. The focus would be on triaging complex test failures and possibly scripting new test cases for complex protocols/features (both activities require serious understanding of network protocols, which we cannot expect the candidates for this position to poses, but which they may be able to acquire with time). </para></listitem><listitem override="none"><para>Our immediate needs are clear. Our predictions regarding the long-term future position requirements may be wrong. We do not know whether we can find a single person that can grow/adjust to stay in sync with the changing position requirements, but that would be ideal. </para></listitem><listitem override="none"><para>Besides, DevOps is a part of QA if you believe <ulink url="https://en.wikipedia.org/wiki/DevOps#/media/File:Devops.svg">Wikipedia</ulink> ;-). </para></listitem></itemizedlist></listitem></orderedlist></section></section></article>