<?xml version="1.0" encoding="utf-8"?><!DOCTYPE article  PUBLIC '-//OASIS//DTD DocBook XML V4.4//EN'  'http://www.docbook.org/xml/4.4/docbookx.dtd'><article><articleinfo><title>ConfigExamples/ContentAdaptation/eCAP</title><revhistory><revision><revnumber>93</revnumber><date>2021-07-03 11:21:19</date><authorinitials>FrancescoChemolli</authorinitials></revision><revision><revnumber>92</revnumber><date>2019-08-06 22:14:17</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>91</revnumber><date>2019-08-06 22:12:24</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>90</revnumber><date>2019-08-06 19:56:55</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>89</revnumber><date>2019-08-06 19:43:31</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>88</revnumber><date>2019-08-05 15:29:49</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>87</revnumber><date>2019-08-05 14:57:50</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>86</revnumber><date>2019-08-05 14:56:22</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>85</revnumber><date>2019-08-05 14:47:05</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>84</revnumber><date>2019-08-05 14:44:33</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>83</revnumber><date>2019-08-05 14:42:01</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>82</revnumber><date>2019-08-05 14:41:30</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>81</revnumber><date>2019-08-05 14:39:36</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>80</revnumber><date>2019-08-05 14:11:52</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>79</revnumber><date>2018-07-18 18:47:43</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>78</revnumber><date>2018-07-17 18:22:13</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>77</revnumber><date>2018-07-17 15:06:24</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>76</revnumber><date>2016-07-10 10:21:15</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>75</revnumber><date>2016-07-10 10:00:13</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>74</revnumber><date>2016-06-20 21:27:24</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>73</revnumber><date>2016-06-20 21:26:42</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>72</revnumber><date>2016-06-20 21:00:00</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>71</revnumber><date>2016-06-20 20:51:07</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>70</revnumber><date>2016-06-20 20:37:03</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>69</revnumber><date>2016-06-20 20:36:25</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>68</revnumber><date>2016-06-18 16:48:00</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>67</revnumber><date>2016-06-12 18:27:44</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>66</revnumber><date>2016-06-12 14:52:13</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>65</revnumber><date>2016-06-11 20:38:35</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>64</revnumber><date>2016-06-11 20:34:37</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>63</revnumber><date>2016-06-11 20:33:32</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>62</revnumber><date>2016-06-11 20:32:07</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>61</revnumber><date>2016-06-11 20:16:39</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>60</revnumber><date>2016-06-09 12:54:42</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>59</revnumber><date>2016-06-09 12:53:05</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>58</revnumber><date>2016-06-09 12:52:36</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>57</revnumber><date>2016-06-09 12:19:20</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>56</revnumber><date>2016-06-08 21:14:20</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>55</revnumber><date>2016-06-08 18:00:26</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>54</revnumber><date>2016-06-08 17:58:43</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>53</revnumber><date>2016-06-08 17:55:37</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>52</revnumber><date>2016-06-08 17:51:17</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>51</revnumber><date>2016-04-12 19:48:42</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>50</revnumber><date>2016-04-07 21:35:07</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>49</revnumber><date>2015-11-23 14:24:27</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>48</revnumber><date>2015-10-27 20:37:41</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>47</revnumber><date>2015-10-27 20:35:54</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>46</revnumber><date>2015-03-29 19:40:29</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>45</revnumber><date>2015-03-29 19:37:51</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>44</revnumber><date>2015-03-29 19:36:55</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>43</revnumber><date>2015-03-29 19:28:57</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>42</revnumber><date>2015-03-29 19:23:43</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>41</revnumber><date>2015-03-29 19:08:53</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>40</revnumber><date>2015-02-28 14:44:45</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>39</revnumber><date>2015-02-27 20:43:51</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>38</revnumber><date>2015-02-27 20:39:56</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>37</revnumber><date>2015-02-27 20:37:45</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>36</revnumber><date>2015-02-27 20:36:52</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>35</revnumber><date>2015-02-27 20:35:39</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>34</revnumber><date>2015-02-27 17:02:22</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>33</revnumber><date>2015-02-27 16:59:10</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>32</revnumber><date>2015-02-27 16:44:25</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>31</revnumber><date>2015-02-27 16:40:09</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>30</revnumber><date>2015-02-26 15:54:31</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>29</revnumber><date>2015-02-26 11:54:55</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>28</revnumber><date>2015-02-26 11:54:05</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>27</revnumber><date>2015-02-25 22:12:01</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>26</revnumber><date>2015-02-25 22:02:19</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>25</revnumber><date>2015-02-25 21:57:30</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>24</revnumber><date>2015-02-25 21:56:55</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>23</revnumber><date>2015-02-25 20:53:26</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>22</revnumber><date>2015-02-25 20:31:01</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>21</revnumber><date>2015-02-25 20:30:31</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>20</revnumber><date>2015-02-25 20:29:52</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>19</revnumber><date>2015-02-25 20:26:17</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>18</revnumber><date>2015-02-25 20:24:47</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>17</revnumber><date>2015-02-25 20:22:56</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>16</revnumber><date>2015-02-25 20:00:16</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>15</revnumber><date>2015-02-25 19:57:19</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>14</revnumber><date>2015-02-17 02:33:27</date><authorinitials>AmosJeffries</authorinitials><revremark>you should be your and clarify the N-bit naming</revremark></revision><revision><revnumber>13</revnumber><date>2015-02-17 02:31:47</date><authorinitials>AmosJeffries</authorinitials><revremark>accordingly is correct</revremark></revision><revision><revnumber>12</revnumber><date>2015-02-16 12:17:56</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>11</revnumber><date>2015-02-08 19:54:40</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>10</revnumber><date>2015-02-08 19:31:07</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>9</revnumber><date>2015-02-08 19:29:18</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>8</revnumber><date>2015-02-07 21:29:00</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>7</revnumber><date>2015-01-22 18:12:54</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>6</revnumber><date>2015-01-22 18:12:09</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>5</revnumber><date>2015-01-22 18:09:36</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>4</revnumber><date>2015-01-22 17:59:25</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>3</revnumber><date>2015-01-22 17:53:47</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>2</revnumber><date>2015-01-22 17:29:32</date><authorinitials>YuriVoinov</authorinitials></revision><revision><revnumber>1</revnumber><date>2015-01-22 17:27:46</date><authorinitials>YuriVoinov</authorinitials></revision></revhistory></articleinfo><section><title>Using eCAP with Squid 3.x/4.x</title><section><title>Using eCAP for GZip/DEFLATE support with Squid 3.x/4.x</title><itemizedlist><listitem override="none"><para><emphasis>by <ulink url="https://wiki.squid-cache.org/ConfigExamples/ContentAdaptation/eCAP/YuriVoinov#">YuriVoinov</ulink></emphasis> </para></listitem></itemizedlist><para><emphasis role="strong">Warning</emphasis>: Any example presented here is provided &quot;as-is&quot; with no support or guarantee of suitability. If you have any further questions about these examples please email the squid-users mailing list. </para><section><title>Outline</title><para>Since Squid does not support runtime content compression with GZip/DEFLATE, we will be used existing eCAP support and <ulink url="https://github.com/yvoinov/squid-ecap-gzip">re-worked and improved adapter from here</ulink>. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: Since the original author has long abandoned adapter use re-worked and improved version. </para></listitem></itemizedlist></section><section><title>Usage</title><para>This configuration is very useful to reduce internal traffic and load to downstream interfaces. </para></section><section><title>Build eCAP library</title><para>We are using <ulink url="http://www.measurement-factory.com/tmp/ecap/libecap-1.0.0.tar.gz">1.0.0</ulink>/<ulink url="http://www.measurement-factory.com/tmp/ecap/libecap-1.0.1.tar.gz">1.0.1</ulink> for Squid 3.5.x/4.x.x.  Due to API changes, adapters no more compatible with older libecap. </para><para>Build and install library accordingly your Squid 32-bit or 64-bit versions: </para><screen><![CDATA[## 32-bit GCC
./configure 'CXXFLAGS=-O2 -m32 -pipe' 'CFLAGS=-O2 -m32 -pipe'
]]><![CDATA[
## 64-bit GCC
./configure 'CXXFLAGS=-O2 -m64 -pipe' 'CFLAGS=-O2 -m64 -pipe'
]]><![CDATA[
gmake
gmake install-strip]]></screen><para>Then rebuild your Squid with --enable-ecap configure option. To do that you may need to add PKG_CONFIG_PATH to your configure options: </para><screen><![CDATA[./configure '--enable-ecap' 'PKG_CONFIG_PATH=/usr/local/lib/pkgconfig']]></screen><para>PKG_CONFIG_PATH pointed to libecap pkgconfig file. </para></section><section><title>Build squid-ecap-gzip</title><screen><![CDATA[./configure 'CXXFLAGS=-m32' 'LDFLAGS=-L/usr/local/lib'
]]><![CDATA[
or
]]><![CDATA[
./configure 'CXXFLAGS=-m64' 'LDFLAGS=-L/usr/local/lib'
]]><![CDATA[
make
make install-strip]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: It is important to choose identical 32 or 64 bit (like your Squid) build mode for eCAP library and squid-gzip-ecap. </para></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: LDFLAGS should point on libecap directory. </para></listitem></itemizedlist></section><section><title>Adapter configuration</title><para>Adapter versions starting 1.5.0 configures via ecap_service arguments in squid.conf. </para><para>Supported configuration parameters: </para><screen><![CDATA[maxsize (default 16777216 bytes, i.e. 16 Mb) - maximum compressed file size
level (default is 6, valid range 0-9) - gzip/deflate global compression level
errlogname (default path/filename is /var/log/ecap_gzip_err.log)        - arbitrary error log name.
complogname (default path/filename is /var/log/ecap_gzip_comp.log)      - arbitrary compression log name.
errlog (default is 0, default path/filename is /var/log/ecap_gzip_err.log)      - error log
complog (default is 0, default path/filename is /var/log/ecap_gzip_comp.log)    - compression log]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: errlogname/complogname should be specify with full path and file name. Directory(-ies) should have write permission for proxy. </para><itemizedlist><listitem override="none"><para>If file(s) exists - it will appends. It not exists - will be created. </para></listitem></itemizedlist></listitem></itemizedlist><para>Adapter logging disabled by default. To enable error log specify errlog=1. To enable compression log specify complog=1. Proxy must have permissions to write. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: When configuration parameters has any error in specifications, adapter starts with defaults. If error log exists, </para><itemizedlist><listitem override="none"><para>diagnostics message will be write. </para></listitem></itemizedlist></listitem></itemizedlist></section><section><title>Squid Configuration File</title><para>Paste the configuration file like this: </para><screen><![CDATA[ecap_enable on
acl gzipmimes rep_mime_type -i "/usr/local/squid/etc/acl.gzipmimes"
loadable_modules /usr/local/lib/ecap_adapter_gzip.so
ecap_service gzip_service respmod_precache ecap://www.thecacheworks.com/ecap_gzip_deflate [maxsize=16777216] [level=6] [errlog=0] [complog=0] bypass=off
adaptation_access gzip_service allow gzipmimes]]></screen><para>acl.gzipmimes contents: </para><screen><![CDATA[# Note: single "/" produces error in simulators,
#       but works in squid's regex
^application/atom+xml
^application/dash+xml
^application/javascript
^application/json
^application/ld+json
^application/manifest+json
^application/opensearchdescription+xml
^application/rdf+xml
^application/rss+xml
^application/schema+json
^application/soap+xml
^application/vnd.apple.installer+xml
^application/vnd.apple.mpegurl
^application/vnd.geo+json
^application/vnd.google-earth.kml+xml
^application/vnd.mozilla.xul+xml
^application/x-apple-plist
^application/x-javascript
^application/x-mpegurl
^application/x-ns-proxy-autoconfig
^application/x-protobuffer
^application/x-web-app-manifest+json
^application/x-www-form-urlencoded
^application/xop+xml
^application/xhtml+xml
^application/xml
^application/x-yaml
^application/x-cdf
^application/txt
^application/x-sdch-dictionary
^application/x-steam-manifest
^audio/x-mpegurl
^image/svg+xml
^image/x-icon
^text/.*
^video/abst
^video/vnd.mpeg.dash.mpd]]></screen><para>Finally, restart your Squid and enjoy. </para><section><title>Notes</title><para>Due to performance reasons, all mime checks executes only once outside adapter, at proxy level. So, be careful when choose what mime types will be pass into adapter. </para><para>Also, HTTP/200 status now checks directly inside adapter. So, this rule: </para><screen><![CDATA[acl HTTP_STATUS_OK http_status 200
adaptation_access gzip_service allow HTTP_STATUS_OK]]></screen><para>is no longer required. </para><para>Also be careful with text/plain mime-type. For some reasons you may be required to remove it from acl, because of sometimes plain text files can be inadequately big and and can overload the CPU during decompression. In this case specify &quot;maxsize&quot; which fit you requirements. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: Adapter requires c++11 - compatible C++ compiler to build. </para></listitem></itemizedlist></section></section></section><section><title>Using eCAP for EXIF stripping from images with Squid 3.x/4.x</title><section><title>Outline</title><para>Since exif can be used for tracking, it is a good idea to remove metadata from images and documents uploaded to the web. To do that, you can use this <ulink url="https://github.com/yvoinov/squid-ecap-exif">re-worked and improved adapter from here</ulink> (fork from <ulink url="https://github.com/maxpmaxp/ecap-exif">original version</ulink>). </para></section><section><title>Build eCAP EXIF adapter</title><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: This adapter critical for its dependencies. Dut to repositories often contains rancid versions, it is recommended to build dependencies from sources as fresh as possible, as shown below. </para></listitem></itemizedlist><para>First, build and install dependencies: </para><screen><![CDATA[#### Dependencies (for PoDoFo)
## Fontconfig
## Freetype2
##
## On Solaris install this:
## CSWlibfreetype-dev
## CSWlibfreetype6
## CSWfontconfig-dev
## CSWfontconfig
##
## Debian dependencies:
## apt-get install exiv2 libtag1v5 libtag1-dev libzip4 libzip-dev libpodofo0.9.6 libpodofo-dev
## Note: Always use as fresh dependencies packages as possible.
]]><![CDATA[
----------------------------------------------------------------------------------------------------
*** Build libtag
]]><![CDATA[
## 64 bit
mkdir build
cd build
CC=/opt/csw/bin/gcc CXXFLAGS=-m64 cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS:BOOL=TRUE ..
]]><![CDATA[
## 32 bit
mkdir build
cd build
CC=/opt/csw/bin/gcc CXXFLAGS=-m32 cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS:BOOL=TRUE ..
]]><![CDATA[
make -j8
make install
]]><![CDATA[
----------------------------------------------------------------------------------------------------
*** Build libzip
]]><![CDATA[
## 64 bit
mkdir build
cd build
CC=/opt/csw/bin/gcc CFLAGS=-m64 cmake ..
]]><![CDATA[
## 32 bit
mkdir build
cd build
CC=/opt/csw/bin/gcc CFLAGS=-m32 cmake ..
]]><![CDATA[
make -j8
make install
]]><![CDATA[
----------------------------------------------------------------------------------------------------
*** Build exiv
]]><![CDATA[
## Note: Use DevStudio on Solaris
]]><![CDATA[
## 64 bit
mkdir build
cd build
CFLAGS=-m64 CXXFLAGS=-m64 LDFLAGS='-lsocket -lnsl' cmake ..
]]><![CDATA[
## 32 bit
mkdir build
cd build
CFLAGS=-m32 CXXFLAGS=-m32 LDFLAGS='-lsocket -lnsl' cmake ..
]]><![CDATA[
make -j8
make install
]]><![CDATA[
----------------------------------------------------------------------------------------------------
*** Build PoDoFo
]]><![CDATA[
## 64 bit
## Note: FREETYPE_INCLUDE_DIR and FREETYPE_LIBRARY depends from your system. Adjust it.
mkdir podofo-build
cd podofo-build
CC=/opt/csw/bin/gcc CFLAGS=-m64 CXXFLAGS=-m64 cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="/usr/local" \
                                                -DCMAKE_BUILD_TYPE=RELEASE \
                                                -DFREETYPE_LIBRARY="/opt/csw/lib" \
                                                -DFREETYPE_INCLUDE_DIR="/opt/csw/include/freetype2" \
                                                -DPODOFO_BUILD_LIB_ONLY:BOOL=TRUE \
                                                -DPODOFO_BUILD_SHARED:BOOL=TRUE \
                                                -DPODOFO_BUILD_STATIC:BOOL=TRUE ..
make -j8
make install]]></screen><para>Make shure all shared libraries are installed. </para><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: Use correct compiler full path, depending your setup. Commands above is my system-specific. <inlinemediaobject><imageobject><imagedata depth="15" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/smile4.png" width="15"/></imageobject><textobject><phrase>;)</phrase></textobject></inlinemediaobject> </para></listitem></itemizedlist><para>Then, build and install adapter: </para><screen><![CDATA[*** Build ecap-exif
]]><![CDATA[
## Note: /opt/csw/include is Solaris. Adjust it.
## Note: Optimization level -O3 enabled by default.
]]><![CDATA[
./configure 'CXXFLAGS=-m64 -mtune=native' 'LDFLAGS=-L/usr/local/lib' 'CPPFLAGS=-I/usr/local/include/podofo -I/usr/local/include -I/opt/csw/include'
]]><![CDATA[
or 
]]><![CDATA[
./configure 'CXXFLAGS=-m32 -mtune=native' 'LDFLAGS=-L/usr/local/lib' 'CPPFLAGS=-I/usr/local/include/podofo -I/usr/local/include -I/opt/csw/include'
]]><![CDATA[
make -j8
make install-strip]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: Before run, make sure all dependencies are ok with ldd -d command. Should no dangling references on any dependency functions/libraries. </para></listitem></itemizedlist></section><section><title>Adapter configuration</title><para>Adapter configures via ecap_service arguments in squid.conf. </para><para>Supported configuration parameters: </para><screen><![CDATA[tmp_filename_format
    Set the format of temporary files that will be processed
    by the adapter.
memory_filesize_limit
    Files with size greater than limit will be stored in temporary
    disk storage, otherwise processing will be done in RAM.
exclude_types
    List of semicolon seprated MIME types which shouldn't be
    handled by adapter.]]></screen></section><section><title>Squid Configuration File</title><para>Paste the configuration file like this: </para><screen><![CDATA[ecap_enable on
loadable_modules /usr/local/lib/ecap_adapter_exif.so
ecap_service eReqmod reqmod_precache bypass=off ecap://www.thecacheworks.com/exif-filter
]]><![CDATA[
adaptation_service_set reqFilter eReqmod
adaptation_access reqFilter allow all]]></screen><para>Finally, restart your Squid and enjoy. </para><para>To log debug messages use: </para><screen><![CDATA[debug_options ALL,1 93,9]]></screen><para>To make sure adapter works use <ulink url="https://www.get-metadata.com/">this site</ulink>. Just check raw image before upload, then upload it to any social via proxy, download and check metadata again. If no - all runs ok. </para></section></section><section><title>Using eCAP for ClamAV antivirus checking with Squid 3.x/4.x</title><section><title>Outline</title><para>Using eCAP for antivirus checking, like C-ICAP, may be more effective. You avoiding usage intermediate services (C-ICAP and clamd itself, module uses libclamav), and, therefore, can do antivirus checking more quickly. This is reduces total Squid installation latency and memory consumption as a whole. </para></section><section><title>Build eCAP ClamAV adapter</title><para>First you need to download eCAP ClamAV adapter from <ulink url="http://e-cap.org/Downloads">here</ulink>. </para><para>Then you need to compile and install adapter: </para><screen><![CDATA[## 32 bit GCC
./configure 'CXXFLAGS=-O3 -m32 -pipe' 'CFLAGS=-O3 -m32 -pipe' 'LDFLAGS=-L/usr/local/lib' PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/clamav/lib/pkgconfig 'CPPFLAGS=-I/usr/local/clamav/include -I/usr/include' 'LDFLAGS=-L/usr/local/lib -L/usr/local/clamav/lib'
## 64 bit GCC
./configure 'CXXFLAGS=-O3 -m64 -pipe' 'CFLAGS=-O3 -m64 -pipe' 'LDFLAGS=-L/usr/local/lib' PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/clamav/lib/pkgconfig 'CPPFLAGS=-I/usr/local/clamav/include -I/usr/include' 'LDFLAGS=-L/usr/local/lib -L/usr/local/clamav/lib/amd64'
gmake
gmake install-strip]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: To use adapter with 64-bit Squid, you need also to compile ClamAV and libecap also with 64 bit. Also use appropriate adapter version for interoperability with your Squid version and used libecap. </para></listitem><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-info.png" width="16"/></imageobject><textobject><phrase>{i}</phrase></textobject></inlinemediaobject> Note: On some platforms (i.e. Solaris) you may need to add #include &lt;unistd.h&gt; to src/Gadgets.h to avoid compilation error due to lack of unlink subroutine. </para></listitem></itemizedlist></section><section><title>Squid Configuration File</title><para>Paste the configuration file like this: </para><screen><![CDATA[ecap_enable on
]]><![CDATA[
# Bypass scan mime-types
acl bypass_scan_types_req req_mime_type -i ^text/
acl bypass_scan_types_req req_mime_type -i ^application/x-javascript
acl bypass_scan_types_req req_mime_type -i ^application/x-shockwave-flash
acl bypass_scan_types_req req_mime_type -i ^image/
acl bypass_scan_types_req req_mime_type -i ^video
acl bypass_scan_types_req req_mime_type -i ^audio
acl bypass_scan_types_req req_mime_type -i ^.*application\/x-mms-framed.*$
]]><![CDATA[
acl bypass_scan_types_rep rep_mime_type -i ^text/
acl bypass_scan_types_rep rep_mime_type -i ^application/x-javascript
acl bypass_scan_types_rep rep_mime_type -i ^application/x-shockwave-flash
acl bypass_scan_types_rep rep_mime_type -i ^image/
acl bypass_scan_types_rep rep_mime_type -i ^video
acl bypass_scan_types_rep rep_mime_type -i ^audio
acl bypass_scan_types_rep rep_mime_type -i ^.*application\/x-mms-framed.*$
]]><![CDATA[
loadable_modules /usr/local/lib/ecap_clamav_adapter.so
ecap_service clamav_service_req reqmod_precache uri=ecap://e-cap.org/ecap/services/clamav?mode=REQMOD bypass=off
ecap_service clamav_service_resp respmod_precache uri=ecap://e-cap.org/ecap/services/clamav?mode=RESPMOD bypass=on
adaptation_access clamav_service_req allow !bypass_scan_types_req all
adaptation_access clamav_service_resp allow !bypass_scan_types_rep all]]></screen><itemizedlist><listitem override="none"><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-error.png" width="16"/></imageobject><textobject><phrase>{X}</phrase></textobject></inlinemediaobject> Note: On some setups you may need to create symbolic link in $prefix/clamav/share to <emphasis role="strong"><ulink url="https://wiki.squid-cache.org/ConfigExamples/ContentAdaptation/eCAP/DatabaseDirectory#">DatabaseDirectory</ulink></emphasis> path, specified in clamd.conf. I.e, for example: </para></listitem></itemizedlist><screen><![CDATA[ln -s /var/lib/clamav /usr/local/clamav/share/clamav]]></screen><para>This is due to semi-hardcoded db path in libclamav. Otherwise adaptation module will be crash Squid itself in current releases. </para></section></section><section><title>Co-existing all services in one setup</title><para>All services can co-exists in one squid instance: </para><screen><![CDATA[ecap_enable on
]]><![CDATA[
# Bypass scan mime-types
acl bypass_scan_types_req req_mime_type -i ^text/
acl bypass_scan_types_req req_mime_type -i ^application/x-javascript
acl bypass_scan_types_req req_mime_type -i ^application/x-shockwave-flash
acl bypass_scan_types_req req_mime_type -i ^image/
acl bypass_scan_types_req req_mime_type -i ^video
acl bypass_scan_types_req req_mime_type -i ^audio
acl bypass_scan_types_req req_mime_type -i ^.*application\/x-mms-framed.*$
]]><![CDATA[
acl bypass_scan_types_rep rep_mime_type -i ^text/
acl bypass_scan_types_rep rep_mime_type -i ^application/x-javascript
acl bypass_scan_types_rep rep_mime_type -i ^application/x-shockwave-flash
acl bypass_scan_types_rep rep_mime_type -i ^image/
acl bypass_scan_types_rep rep_mime_type -i ^video
acl bypass_scan_types_rep rep_mime_type -i ^audio
acl bypass_scan_types_rep rep_mime_type -i ^.*application\/x-mms-framed.*$
]]><![CDATA[
loadable_modules /usr/local/lib/ecap_clamav_adapter.so
ecap_service clamav_service_req reqmod_precache uri=ecap://e-cap.org/ecap/services/clamav?mode=REQMOD bypass=off
ecap_service clamav_service_resp respmod_precache uri=ecap://e-cap.org/ecap/services/clamav?mode=RESPMOD bypass=on
adaptation_access clamav_service_req allow !bypass_scan_types_req all
adaptation_access clamav_service_resp allow !bypass_scan_types_rep all
]]><![CDATA[
acl gzipmimes rep_mime_type -i "/usr/local/squid/etc/acl.gzipmimes"
loadable_modules /usr/local/lib/ecap_adapter_gzip.so
ecap_service gzip_service respmod_precache ecap://www.thecacheworks.com/ecap_gzip_deflatebypass=off
adaptation_access gzip_service allow gzipmimes
]]><![CDATA[
loadable_modules /usr/local/lib/ecap_adapter_exif.so
ecap_service exif_req reqmod_precache bypass=off ecap://www.thecacheworks.com/exif-filter
adaptation_service_set reqFilter eReqmod
adaptation_access reqFilter allow all]]></screen><para><inlinemediaobject><imageobject><imagedata depth="16" fileref="https://wiki.squid-cache.org/wiki/squidtheme/img/icon-error.png" width="16"/></imageobject><textobject><phrase>{X}</phrase></textobject></inlinemediaobject> <emphasis role="strong">BEWARE:</emphasis> Order is important! eCAP ClamAV adapter should precede TCW adapters!  </para></section></section></article>